"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "NativeBaseConsumer", {
  enumerable: true,
  get: function () {
    return _native.ThemeConsumer;
  }
});
Object.defineProperty(exports, "NativeBaseContext", {
  enumerable: true,
  get: function () {
    return _native.ThemeContext;
  }
});
exports.NativeBaseProvider = void 0;

var _react = _interopRequireDefault(require("react"));

var _native = require("styled-components/native");

var _reactNativeSafeAreaContext = require("react-native-safe-area-context");

var _theme = require("./../theme");

var _HybridProvider = _interopRequireDefault(require("./hybrid-overlay/HybridProvider"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const NativeBaseProvider = props => {
  const {
    colorModeManager,
    theme = _theme.theme,
    children,
    initialWindowMetrics
  } = props;
  return /*#__PURE__*/_react.default.createElement(_native.ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {
    initialMetrics: initialWindowMetrics !== null && initialWindowMetrics !== void 0 ? initialWindowMetrics : _reactNativeSafeAreaContext.initialWindowMetrics
  }, /*#__PURE__*/_react.default.createElement(_HybridProvider.default, {
    colorModeManager: colorModeManager,
    options: theme.config
  }, children)));
};

exports.NativeBaseProvider = NativeBaseProvider;
//# sourceMappingURL=NativeBaseProvider.js.map