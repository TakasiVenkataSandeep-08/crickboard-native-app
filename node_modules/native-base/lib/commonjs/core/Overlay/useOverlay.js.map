{"version":3,"sources":["useOverlay.tsx"],"names":["useOverlay","overlay","setOverlayItem","defaultConfig","setConfig","React","useContext","HybridContext","closeOverlay","setOverlay","component","config"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAGO,MAAMA,UAA4B,GAAG,MAAM;AAChD,QAAM;AACJC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA,aAAlB;AAAiCC,MAAAA;AAAjC;AADL,MAEmBC,eAAMC,UAAN,CAAiBC,sBAAjB,CAFzB;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzBN,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAMO,UAAU,GAAG,CAACC,SAAD,EAA6BC,MAA7B,KAAyD;AAC1EA,IAAAA,MAAM,IAAIP,SAAS,CAAC,EAAE,GAAGD,aAAL;AAAoB,SAAGQ;AAAvB,KAAD,CAAnB;AACAT,IAAAA,cAAc,CAACQ,SAAD,CAAd;AACD,GAHD;;AAIA,SAAO;AAAEF,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAP;AACD,CAbM","sourcesContent":["import React from 'react';\nimport type { IuseOverlayProps, IOverlayConfig } from './types';\nimport { HybridContext } from './../hybrid-overlay/Context';\nimport type { IHybridContextProps } from './../hybrid-overlay/types';\n\nexport const useOverlay: IuseOverlayProps = () => {\n  const {\n    overlay: { setOverlayItem, defaultConfig, setConfig },\n  }: IHybridContextProps = React.useContext(HybridContext);\n  const closeOverlay = () => {\n    setOverlayItem(null);\n  };\n\n  const setOverlay = (component: React.ReactNode, config?: IOverlayConfig) => {\n    config && setConfig({ ...defaultConfig, ...config });\n    setOverlayItem(component);\n  };\n  return { closeOverlay, setOverlay };\n};\n"]}