{"version":3,"sources":["component.tsx"],"names":["Component","componentTheme","React","forwardRef","children","props","ref","StyledComponent","color","background","padding","margin","space","layout","flexbox","border","position","typography","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customTypography","customLayout","calculatedProps"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AAEA;;AAYA;;;;;;AAYe,kBACbA,SADa,EAEbC,cAFa,EAGb;AACA,sBAAOC,eAAMC,UAAN,CACL,CAAC;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAAD,EAAoDC,GAApD,KAAiE;AAC/D,UAAMC,eAAe,GAAG,qBAAOP,SAAP,EACtBQ,mBADsB,EAEtBC,wBAFsB,EAGtBC,qBAHsB,EAItBC,oBAJsB,EAKtBC,mBALsB,EAMtBC,oBANsB,EAOtBC,qBAPsB,EAQtBC,oBARsB,EAStBC,sBATsB,EAUtBC,wBAVsB,EAWtBC,2BAXsB,EAYtBC,yBAZsB,EAatBC,6BAbsB,EActBC,0BAdsB,EAetBC,yBAfsB,EAgBtBC,wBAhBsB,EAiBtBC,6BAjBsB,EAkBtBC,yBAlBsB,CAAxB;AAoBA,UAAMC,eAAe,GAAG,4DAA2BzB,cAA3B,EAA2CI,KAA3C,CAAxB;AACA,wBACE,6BAAC,eAAD,eAAsBqB,eAAtB;AAA6C,MAAA,GAAG,EAAEpB;AAAlD,QACGF,QADH,CADF;AAKD,GA5BI,CAAP;AA8BD","sourcesContent":["import React from 'react';\nimport type { AnyStyledComponent } from 'styled-components';\nimport styled from 'styled-components/native';\nimport { usePropsWithComponentTheme } from '../hooks/useThemeProps/usePropsWithComponentTheme';\nimport type { ComponentTheme } from '../theme';\nimport {\n  background,\n  border,\n  color,\n  flexbox,\n  layout,\n  margin,\n  padding,\n  position,\n  space,\n  typography,\n} from 'styled-system';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n  customTypography,\n} from '../utils/customProps';\nimport type { FactoryComponentProps } from './types';\n\nexport default function <P>(\n  Component: React.ComponentType<P>,\n  componentTheme?: ComponentTheme\n) {\n  return React.forwardRef(\n    ({ children, ...props }: P & FactoryComponentProps, ref: any) => {\n      const StyledComponent = styled(Component as AnyStyledComponent)(\n        color,\n        background,\n        padding,\n        margin,\n        space,\n        layout,\n        flexbox,\n        border,\n        position,\n        typography,\n        customPosition,\n        customBorder,\n        customBackground,\n        customOutline,\n        customShadow,\n        customExtra,\n        customTypography,\n        customLayout\n      );\n      const calculatedProps = usePropsWithComponentTheme(componentTheme, props);\n      return (\n        <StyledComponent {...(calculatedProps as P)} ref={ref}>\n          {children}\n        </StyledComponent>\n      );\n    }\n  );\n}\n"]}