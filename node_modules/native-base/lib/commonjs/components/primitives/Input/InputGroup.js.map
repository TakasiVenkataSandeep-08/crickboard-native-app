{"version":3,"sources":["InputGroup.tsx"],"names":["addonsDefaultStyle","p","borderColor","borderWidth","InputLeftAddon","React","memo","props","children","InputRightAddon","supplyPropsToChildren","Children","map","child","cloneElement","InputGroup","forwardRef","ref"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;AAEA,MAAMA,kBAAkB,GAAG;AACzBC,EAAAA,CAAC,EAAE,CADsB;AAEzBC,EAAAA,WAAW,EAAE,UAFY;AAGzBC,EAAAA,WAAW,EAAE;AAHY,CAA3B;;AAMO,MAAMC,cAAc,gBAAGC,eAAMC,IAAN,CAAYC,KAAD,IAAoC;AAC3E,sBACE,6BAAC,YAAD,eACMP,kBADN;AAEE,IAAA,gBAAgB,EAAE,CAFpB;AAGE,IAAA,WAAW,EAAE,CAHf;AAIE,IAAA,EAAE,EAAC;AAJL,KAKMO,KALN,gBAOE,6BAAC,YAAD;AAAK,IAAA,CAAC,EAAC;AAAP,KAAeA,KAAK,CAACC,QAArB,CAPF,CADF;AAWD,CAZ6B,CAAvB;;;;AAaA,MAAMC,eAAe,gBAAGJ,eAAMC,IAAN,CAAYC,KAAD,IAAoC;AAC5E,sBACE,6BAAC,YAAD,eACMP,kBADN;AAEE,IAAA,eAAe,EAAE,CAFnB;AAGE,IAAA,YAAY,EAAE,CAHhB;AAIE,IAAA,EAAE,EAAC;AAJL,KAKMO,KALN,gBAOE,6BAAC,YAAD;AAAK,IAAA,CAAC,EAAC;AAAP,KAAeA,KAAK,CAACC,QAArB,CAPF,CADF;AAWD,CAZ8B,CAAxB;;;;AAoBP,MAAME,qBAAqB,GAAG,CAACF,QAAD,EAAgBD,KAAhB,KAA+B;AAC3D,SAAOF,eAAMM,QAAN,CAAeC,GAAf,CAAmBJ,QAAnB,EAA8BK,KAAD,IAAwB;AAC1D,wBAAOR,eAAMS,YAAN,CAAmBD,KAAnB,EAA0BN,KAA1B,EAAiCM,KAAK,CAACN,KAAN,CAAYC,QAA7C,CAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAMO,MAAMO,UAAU,gBAAGV,eAAMC,IAAN,eACxBD,eAAMW,UAAN,CAAiB,CAAC;AAAER,EAAAA,QAAF;AAAY,KAAGD;AAAf,CAAD,EAA0CU,GAA1C,KAAuD;AACtE,sBACE,6BAAC,aAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KACGP,qBAAqB,CAAC,gCAAoBF,QAApB,CAAD,EAAgCD,KAAhC,CADxB,CADF;AAKD,CAND,CADwB,CAAnB","sourcesContent":["import React from 'react';\nimport { default as Box, IBoxProps } from '../Box';\nimport type { IInputProps } from '../Input';\nimport { getAttachedChildren } from '../../../utils';\nimport Flex from '../Flex';\n\nconst addonsDefaultStyle = {\n  p: 3,\n  borderColor: 'gray.300',\n  borderWidth: 1,\n};\n\nexport const InputLeftAddon = React.memo((props: IBoxProps & IInputProps) => {\n  return (\n    <Box\n      {...addonsDefaultStyle}\n      borderRightWidth={0}\n      roundedLeft={4}\n      bg=\"gray.200\"\n      {...props}\n    >\n      <Box m=\"auto\">{props.children}</Box>\n    </Box>\n  );\n});\nexport const InputRightAddon = React.memo((props: IBoxProps & IInputProps) => {\n  return (\n    <Box\n      {...addonsDefaultStyle}\n      borderLeftWidth={0}\n      roundedRight={4}\n      bg=\"gray.200\"\n      {...props}\n    >\n      <Box m=\"auto\">{props.children}</Box>\n    </Box>\n  );\n});\n\ntype InputGroupProps = {\n  children: JSX.Element | JSX.Element[];\n  variant?: string;\n  size?: string;\n};\n\nconst supplyPropsToChildren = (children: any, props: any) => {\n  return React.Children.map(children, (child: JSX.Element) => {\n    return React.cloneElement(child, props, child.props.children);\n  });\n};\n\nexport const InputGroup = React.memo(\n  React.forwardRef(({ children, ...props }: InputGroupProps, ref: any) => {\n    return (\n      <Flex direction=\"row\" ref={ref}>\n        {supplyPropsToChildren(getAttachedChildren(children), props)}\n      </Flex>\n    );\n  })\n);\n"]}