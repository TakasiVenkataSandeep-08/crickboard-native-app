{"version":3,"sources":["index.tsx"],"names":["StyledLink","Box","Link","style","href","isUnderlined","onClick","isExternal","children","m","mt","mr","ml","mb","p","pt","pl","pr","pb","w","width","h","height","_text","props","ref","layoutProps","newProps","linkTextProps","textDecorationLine","linkProps","React","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,MAAMA,UAAU,GAAG,qBAAOC,YAAP,EAAwB,EAAxB,CAAnB;;AACA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,KADF;AAEEC,EAAAA,IAFF;AAGEC,EAAAA,YAAY,GAAG,IAHjB;AAIEC,EAAAA,OAJF;AAKEC,EAAAA,UALF;AAMEC,EAAAA,QANF;AAOEC,EAAAA,CAPF;AAQEC,EAAAA,EARF;AASEC,EAAAA,EATF;AAUEC,EAAAA,EAVF;AAWEC,EAAAA,EAXF;AAYEC,EAAAA,CAZF;AAaEC,EAAAA,EAbF;AAcEC,EAAAA,EAdF;AAeEC,EAAAA,EAfF;AAgBEC,EAAAA,EAhBF;AAiBEC,EAAAA,CAjBF;AAkBEC,EAAAA,KAlBF;AAmBEC,EAAAA,CAnBF;AAoBEC,EAAAA,MApBF;AAqBEC,EAAAA,KArBF;AAsBE,KAAGC;AAtBL,CADW,EAyBXC,GAzBW,KA0BR;AACH,QAAMC,WAAW,GAAG;AAClBjB,IAAAA,CADkB;AAElBC,IAAAA,EAFkB;AAGlBC,IAAAA,EAHkB;AAIlBC,IAAAA,EAJkB;AAKlBC,IAAAA,EALkB;AAMlBC,IAAAA,CANkB;AAOlBC,IAAAA,EAPkB;AAQlBE,IAAAA,EARkB;AASlBD,IAAAA,EATkB;AAUlBE,IAAAA,EAVkB;AAWlBC,IAAAA,CAXkB;AAYlBC,IAAAA,KAZkB;AAalBC,IAAAA,CAbkB;AAclBC,IAAAA;AAdkB,GAApB;AAgBA,MAAIK,QAAQ,GAAG,0BAAc,MAAd,EAAsBH,KAAtB,CAAf;AACA,QAAMI,aAAa,GAAG;AACpBC,IAAAA,kBAAkB,EAAExB,YAAY,GAAG,WAAH,GAAiB,MAD7B;AAEpB,OAAGkB;AAFiB,GAAtB;AAIA,QAAM;AAAEO,IAAAA;AAAF,MAAgB,sBAAQ;AAAE1B,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAR,CAAtB;AACA,sBACE,6BAAC,YAAD,EAASmB,WAAT,eACE,6BAAC,qCAAD,eAA8BI,SAA9B,EAA6CH,QAA7C;AAAuD,IAAA,GAAG,EAAEF;AAA5D,mBACE,6BAAC,UAAD;AACE,IAAA,KAAK,EAAEG;AADT,KAEMD,QAFN;AAGE,IAAA,aAAa,EAAC,KAHhB;AAIE,IAAA,KAAK,EAAExB;AAJT,MAMGK,QANH,CADF,CADF,CADF;AAcD,CA/DD;;4BAiEeuB,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiB/B,IAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\nimport styled from 'styled-components/native';\nimport type { ILinkProps } from './types';\nimport Box from '../Box';\nimport { useThemeProps } from '../../../hooks';\nimport { useLink } from './useLink';\n\nconst StyledLink = styled(Box)<ILinkProps>({});\nconst Link = (\n  {\n    style,\n    href,\n    isUnderlined = true,\n    onClick,\n    isExternal,\n    children,\n    m,\n    mt,\n    mr,\n    ml,\n    mb,\n    p,\n    pt,\n    pl,\n    pr,\n    pb,\n    w,\n    width,\n    h,\n    height,\n    _text,\n    ...props\n  }: ILinkProps,\n  ref: any\n) => {\n  const layoutProps = {\n    m,\n    mt,\n    mr,\n    ml,\n    mb,\n    p,\n    pt,\n    pr,\n    pl,\n    pb,\n    w,\n    width,\n    h,\n    height,\n  };\n  let newProps = useThemeProps('Link', props);\n  const linkTextProps = {\n    textDecorationLine: isUnderlined ? 'underline' : 'none',\n    ..._text,\n  };\n  const { linkProps } = useLink({ href, onClick, isExternal });\n  return (\n    <Box {...layoutProps}>\n      <TouchableWithoutFeedback {...linkProps} {...newProps} ref={ref}>\n        <StyledLink\n          _text={linkTextProps}\n          {...newProps}\n          flexDirection=\"row\"\n          style={style}\n        >\n          {children}\n        </StyledLink>\n      </TouchableWithoutFeedback>\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Link));\nexport type { ILinkProps };\n"]}