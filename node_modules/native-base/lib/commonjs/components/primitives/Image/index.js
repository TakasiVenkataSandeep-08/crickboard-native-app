"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _native = _interopRequireDefault(require("styled-components/native"));

var _styledSystem = require("styled-system");

var _customProps = require("../../../utils/customProps");

var _Text = _interopRequireDefault(require("../Text"));

var _hooks = require("../../../hooks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const StyledImage = (0, _native.default)(_reactNative.Image)(_styledSystem.color, _styledSystem.space, _styledSystem.layout, _styledSystem.flexbox, _styledSystem.border, _styledSystem.position, _customProps.customPosition, _customProps.customBorder, _customProps.customBackground, _customProps.customOutline, _customProps.customShadow, _customProps.customExtra, _customProps.customLayout);

const Image = ({
  style,
  alt,
  fallbackSource,
  source,
  ignoreFallback,
  _alt,
  ...props
}, ref) => {
  let [renderedSource, setSource] = (0, _react.useState)(source);
  let [alternate, setAlternate] = (0, _react.useState)(false);

  _react.default.useEffect(() => {
    setAlternate(false);
    setSource(source);
  }, [source]);

  let onImageLoadError = event => {
    console.warn(event.nativeEvent.error);

    if (!ignoreFallback && fallbackSource && fallbackSource !== renderedSource) {
      setSource(fallbackSource);
    } else {
      setAlternate(true);
    }
  };

  const newProps = (0, _hooks.useThemeProps)('Image', props);

  if (!alt) {
    console.warn('Please pass alt prop to Image component');
  }

  if (alternate) {
    return /*#__PURE__*/_react.default.createElement(_Text.default, _alt, alt);
  }

  return /*#__PURE__*/_react.default.createElement(StyledImage, _extends({
    style: style,
    source: renderedSource,
    maxWidth: "100%" // height='100%'
    // width="auto"
    ,
    size: '100%',
    accessibilityLabel: alt,
    accessibilityRole: "image",
    accessible: true,
    alt: alt
  }, newProps, {
    onError: props.onError ? props.onError : onImageLoadError,
    ref: ref
  }));
};

var _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef(Image));

exports.default = _default;
//# sourceMappingURL=index.js.map