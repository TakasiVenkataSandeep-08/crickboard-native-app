{"version":3,"sources":["index.tsx"],"names":["componentMap","AntDesign","Entypo","EvilIcons","Feather","FontAwesome","FontAwesome5","Fontisto","Foundation","Ionicons","MaterialCommunityIcons","MaterialIcons","Octicons","SimpleLineIcons","Zocial","getStyleIconComponent","type","color","space","layout","flexbox","border","typography","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","customTypography","Icon","name","style","props","ref","size","newProps","Component","fontSize","parseInt","React","memo","forwardRef"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AASA;;AAUA;;AACA;;AACA;;AAiBA;;AAwDA;;;;;;AAtDA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAATA,sBADmB;AAEnBC,EAAAA,MAAM,EAANA,mBAFmB;AAGnBC,EAAAA,SAAS,EAATA,sBAHmB;AAInBC,EAAAA,OAAO,EAAPA,oBAJmB;AAKnBC,EAAAA,WAAW,EAAXA,wBALmB;AAMnBC,EAAAA,YAAY,EAAZA,yBANmB;AAOnBC,EAAAA,QAAQ,EAARA,qBAPmB;AAQnBC,EAAAA,UAAU,EAAVA,uBARmB;AASnBC,EAAAA,QAAQ,EAARA,qBATmB;AAUnBC,EAAAA,sBAAsB,EAAtBA,mCAVmB;AAWnBC,EAAAA,aAAa,EAAbA,0BAXmB;AAYnBC,EAAAA,QAAQ,EAARA,qBAZmB;AAanBC,EAAAA,eAAe,EAAfA,4BAbmB;AAcnBC,EAAAA,MAAM,EAANA;AAdmB,CAArB;;AAiBA,SAASC,qBAAT,CAA+BC,IAA/B,EAA+C;AAC7C,SAAO,qBAAOhB,YAAY,CAACgB,IAAD,CAAnB,EACLC,mBADK,EAELC,mBAFK,EAGLC,oBAHK,EAILC,qBAJK,EAKLC,oBALK,EAMLC,wBANK,EAOLC,sBAPK,EAQLC,2BARK,EASLC,yBATK,EAULC,6BAVK,EAWLC,0BAXK,EAYLC,yBAZK,EAaLC,wBAbK,EAcLC,yBAdK,EAeLC,6BAfK,CAAP;AAiBD;;AAED,MAAMC,IAAI,GAAG,CAAC;AAAEhB,EAAAA,IAAF;AAAQiB,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqB,KAAGC;AAAxB,CAAD,EAA8CC,GAA9C,KAA4D;AACvE,QAAM;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,MAAwB,0BAAc,MAAd,EAAsBH,KAAtB,CAA9B;;AACA,MAAI,CAACF,IAAL,EAAW;AACT,wBAAO,6BAAC,gBAAD,EAAaE,KAAb,CAAP;AACD;;AACD,QAAMI,SAAS,GAAGxB,qBAAqB,CAACC,IAAD,aAACA,IAAD,cAACA,IAAD,GAAS,eAAT,CAAvC;AACA,sBACE,6BAAC,SAAD;AACE,IAAA,IAAI,EAAEiB;AADR,KAEMK,QAFN;AAGE,IAAA,GAAG,EAAEF,GAHP;AAIE,IAAA,KAAK,EAAE,CAACF,KAAD,EAAQ;AAAEM,MAAAA,QAAQ,EAAEC,QAAQ,CAACJ,IAAD,EAAO,EAAP;AAApB,KAAR;AAJT,KADF;AAQD,CAdD;;4BAkBeK,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiBZ,IAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  space,\n  typography,\n  position,\n} from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\nimport styled from 'styled-components/native';\nimport { useThemeProps } from '../../../hooks';\nimport {\n  AntDesign,\n  Entypo,\n  EvilIcons,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  Fontisto,\n  Foundation,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  Octicons,\n  SimpleLineIcons,\n  Zocial,\n} from '@expo/vector-icons';\nimport type { IIconProps, IconType, IconNameType } from './types';\nimport SVGIcon from './SVGIcon';\n\nconst componentMap = {\n  AntDesign,\n  Entypo,\n  EvilIcons,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  Fontisto,\n  Foundation,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  Octicons,\n  SimpleLineIcons,\n  Zocial,\n};\n\nfunction getStyleIconComponent(type: IconType) {\n  return styled(componentMap[type])<IIconProps>(\n    color,\n    space,\n    layout,\n    flexbox,\n    border,\n    typography,\n    position,\n    customPosition,\n    customBorder,\n    customBackground,\n    customOutline,\n    customShadow,\n    customExtra,\n    customLayout,\n    customTypography\n  );\n}\n\nconst Icon = ({ type, name, style, ...props }: IIconProps, ref?: any) => {\n  const { size, ...newProps } = useThemeProps('Icon', props);\n  if (!name) {\n    return <SVGIcon {...props} />;\n  }\n  const Component = getStyleIconComponent(type ?? 'MaterialIcons');\n  return (\n    <Component\n      name={name}\n      {...newProps}\n      ref={ref}\n      style={[style, { fontSize: parseInt(size, 10) }]}\n    />\n  );\n};\n\nexport type { IIconProps, IconType, IconNameType };\nexport { createIcon } from './createIcon';\nexport default React.memo(React.forwardRef(Icon));\n"]}