{"version":3,"sources":["SVGIcon.tsx"],"names":["VALID_SVG_COMPONENTS","G","Path","Circle","Ellipse","Text","TSpan","TextPath","Polygon","Polyline","Line","Rect","Use","Image","Symbol","Defs","LinearGradient","RadialGradient","Stop","ClipPath","Pattern","Mask","SVG","Svg","color","space","typography","SVGIcon","viewBox","colorProp","stroke","strokeWidth","children","focusable","size","style","ref","newProps","strokeColor","parseInt","React","Children","count","map","props","childProps","type","name","Object","keys","includes","getDefaultIcon","ChildPath","fill","pathStroke","remainingProps","Component","pathStrokeColor","fillColor","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useThemeProps } from '../../../hooks';\nimport { useToken } from '../../../hooks';\nimport styled from 'styled-components/native';\nimport { color, space, typography } from 'styled-system';\nimport Svg, {\n  Path,\n  G,\n  Circle,\n  Ellipse,\n  Text,\n  TSpan,\n  TextPath,\n  Polygon,\n  Polyline,\n  Line,\n  Rect,\n  Use,\n  Image,\n  Symbol,\n  Defs,\n  LinearGradient,\n  RadialGradient,\n  Stop,\n  ClipPath,\n  Pattern,\n  Mask,\n} from 'react-native-svg';\nimport type { IIconProps } from './types';\n\nconst VALID_SVG_COMPONENTS: any = {\n  G: G,\n  Path: Path,\n  Circle: Circle,\n  Ellipse: Ellipse,\n  Text: Text,\n  TSpan: TSpan,\n  TextPath: TextPath,\n  Polygon: Polygon,\n  Polyline: Polyline,\n  Line: Line,\n  Rect: Rect,\n  Use: Use,\n  Image: Image,\n  Symbol: Symbol,\n  Defs: Defs,\n  LinearGradient: LinearGradient,\n  RadialGradient: RadialGradient,\n  Stop: Stop,\n  ClipPath: ClipPath,\n  Pattern: Pattern,\n  Mask: Mask,\n};\nconst SVG = styled(Svg)<IIconProps>(color, space, typography);\n\nconst SVGIcon = (\n  {\n    viewBox,\n    color: colorProp,\n    stroke,\n    strokeWidth,\n    children,\n    focusable,\n    size,\n    style,\n  }: IIconProps,\n  ref: any\n) => {\n  const newProps = useThemeProps('Icon', { size });\n  let strokeColor = useToken('colors', stroke || '');\n  colorProp = useToken('colors', colorProp || '');\n  return (\n    <SVG\n      height={parseInt(newProps.size, 10)}\n      width={parseInt(newProps.size, 10)}\n      viewBox={viewBox}\n      color={colorProp}\n      stroke={strokeColor}\n      strokeWidth={strokeWidth}\n      focusable={focusable}\n      accessibilityRole={'image'}\n      style={style}\n      ref={ref}\n    >\n      {React.Children.count(children) > 0 ? (\n        <G>\n          {React.Children.map(children, ({ props: childProps, type }: any) =>\n            type &&\n            type.name &&\n            Object.keys(VALID_SVG_COMPONENTS).includes(type.name) ? (\n              <ChildPath {...childProps} type={type.name} />\n            ) : null\n          )}\n        </G>\n      ) : (\n        getDefaultIcon(ref)\n      )}\n    </SVG>\n  );\n};\nconst ChildPath = ({\n  type,\n  fill,\n  stroke: pathStroke,\n  ...remainingProps\n}: any) => {\n  const Component = VALID_SVG_COMPONENTS[type];\n  const pathStrokeColor = useToken('colors', pathStroke || '');\n  const fillColor = useToken('colors', fill || '');\n\n  if (!Component) {\n    return null;\n  }\n  return (\n    <Component\n      {...remainingProps}\n      fill={fillColor ? fillColor : 'currentColor'}\n      stroke={pathStrokeColor}\n    />\n  );\n};\nconst getDefaultIcon = (ref: any) => {\n  return (\n    <G strokeWidth={1.5} stroke=\"currentColor\" ref={ref}>\n      <Path\n        d={'M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25'}\n        fill=\"none\"\n      />\n      <Path\n        d={'M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0'}\n        fill=\"none\"\n      />\n      <Circle cx=\"12\" cy=\"12\" r=\"11.25\" fill=\"none\" />\n    </G>\n  );\n};\nexport default React.memo(React.forwardRef(SVGIcon));\n"]}