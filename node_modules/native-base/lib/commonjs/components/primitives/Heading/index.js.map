{"version":3,"sources":["index.tsx"],"names":["StyledHeading","Text","color","space","layout","flexbox","border","typography","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","customTypography","Heading","isTruncated","props","ref","newProps","React","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AASA;;AAUA;;;;;;AAGA;AACA,MAAMA,aAAa,GAAG,qBAAOC,iBAAP,EACpBC,mBADoB,EAEpBC,mBAFoB,EAGpBC,oBAHoB,EAIpBC,qBAJoB,EAKpBC,oBALoB,EAMpBC,wBANoB,EAOpBC,sBAPoB,EAQpBC,2BARoB,EASpBC,yBAToB,EAUpBC,6BAVoB,EAWpBC,0BAXoB,EAYpBC,yBAZoB,EAapBC,wBAboB,EAcpBC,yBAdoB,EAepBC,6BAfoB,CAAtB;;AAkBA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAe,KAAGC;AAAlB,CAAD,EAA2CC,GAA3C,KAAwD;AACtE,QAAMC,QAAQ,GAAG,0BAAc,SAAd,EAAyBF,KAAzB,CAAjB;AACA,sBACE,6BAAC,aAAD;AACE,IAAA,aAAa,EAAED,WAAW,GAAG,CAAH,GAAO;AADnC,KAEMG,QAFN;AAGE,IAAA,GAAG,EAAED;AAHP,KADF;AAOD,CATD;;4BAWeE,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiBP,OAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { Text } from 'react-native';\nimport styled from 'styled-components/native';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  space,\n  typography,\n  position,\n} from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\nimport { useThemeProps } from '../../../hooks';\nimport type { IHeadingProps } from './types';\n\n// Can remove all this and extend it from normal Text\nconst StyledHeading = styled(Text)<IHeadingProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout,\n  customTypography\n);\n\nconst Heading = ({ isTruncated, ...props }: IHeadingProps, ref: any) => {\n  const newProps = useThemeProps('Heading', props);\n  return (\n    <StyledHeading\n      numberOfLines={isTruncated ? 1 : 999999}\n      {...newProps}\n      ref={ref}\n    />\n  );\n};\n\nexport default React.memo(React.forwardRef(Heading));\nexport type { IHeadingProps };\n"]}