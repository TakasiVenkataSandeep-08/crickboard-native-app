{"version":3,"sources":["index.tsx"],"names":["StyledText","NativeText","color","space","position","layout","flexbox","border","typography","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","customTypography","Text","children","style","isTruncated","noOfLines","bold","italic","sub","highlight","underline","strikeThrough","props","ref","newProps","fontWeight","fontStyle","bg","textDecorationLine","fontSize","React","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AASA;;AACA;;;;;;AAYA,MAAMA,UAAU,GAAG,qBAAOC,iBAAP,EACjBC,mBADiB,EAEjBC,mBAFiB,EAGjBC,sBAHiB,EAIjBC,oBAJiB,EAKjBC,qBALiB,EAMjBC,oBANiB,EAOjBC,wBAPiB,EAQjBJ,sBARiB,EASjBK,2BATiB,EAUjBC,yBAViB,EAWjBC,6BAXiB,EAYjBC,0BAZiB,EAajBC,yBAbiB,EAcjBC,wBAdiB,EAejBC,yBAfiB,EAgBjBC,6BAhBiB,CAAnB;;AAmBA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,QADF;AAEEC,EAAAA,KAFF;AAGEC,EAAAA,WAHF;AAIEC,EAAAA,SAJF;AAKEC,EAAAA,IALF;AAMEC,EAAAA,MANF;AAOEC,EAAAA,GAPF;AAQEC,EAAAA,SARF;AASEC,EAAAA,SATF;AAUEC,EAAAA,aAVF;AAWE,KAAGC;AAXL,CADW,EAcXC,GAdW,KAeR;AACH,QAAMC,QAAQ,GAAG,kCAAc,MAAd,EAAsBF,KAAtB,CAAjB;AACA,sBACE,6BAAC,UAAD,eACME,QADN;AAEE,IAAA,aAAa,EAAET,SAAS,GAAGA,SAAH,GAAeD,WAAW,GAAG,CAAH,GAAO,GAF3D;AAGE,IAAA,UAAU,EAAEE,IAAI,GAAG,MAAH,GAAYQ,QAAQ,CAACC,UAHvC;AAIE,IAAA,SAAS,EAAER,MAAM,GAAG,QAAH,GAAcO,QAAQ,CAACE,SAJ1C;AAKE,IAAA,EAAE,EAAEP,SAAS,GAAG,YAAH,GAAkBK,QAAQ,CAACG,EAL1C;AAME,IAAA,kBAAkB,EAChBP,SAAS,GACL,WADK,GAELC,aAAa,GACb,cADa,GAEbG,QAAQ,CAACI,kBAXjB;AAaE,IAAA,QAAQ,EAAEV,GAAG,GAAG,EAAH,GAAQM,QAAQ,CAACK,QAbhC;AAcE,IAAA,KAAK,EAAEhB,KAdT;AAeE,IAAA,GAAG,EAAEU;AAfP,MAiBGX,QAjBH,CADF;AAqBD,CAtCD;;4BAwCekB,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiBrB,IAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { Text as NativeText } from 'react-native';\nimport styled from 'styled-components/native';\nimport {\n  color,\n  position,\n  space,\n  typography,\n  layout,\n  flexbox,\n  border,\n} from 'styled-system';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\nimport type { ITextProps } from './types';\n\nconst StyledText = styled(NativeText)<ITextProps>(\n  color,\n  space,\n  position,\n  layout,\n  flexbox,\n  border,\n  typography,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout,\n  customTypography\n);\n\nconst Text = (\n  {\n    children,\n    style,\n    isTruncated,\n    noOfLines,\n    bold,\n    italic,\n    sub,\n    highlight,\n    underline,\n    strikeThrough,\n    ...props\n  }: ITextProps,\n  ref: any\n) => {\n  const newProps = useThemeProps('Text', props);\n  return (\n    <StyledText\n      {...newProps}\n      numberOfLines={noOfLines ? noOfLines : isTruncated ? 1 : 999}\n      fontWeight={bold ? 'bold' : newProps.fontWeight}\n      fontStyle={italic ? 'italic' : newProps.fontStyle}\n      bg={highlight ? 'yellow.200' : newProps.bg}\n      textDecorationLine={\n        underline\n          ? 'underline'\n          : strikeThrough\n          ? 'line-through'\n          : newProps.textDecorationLine\n      }\n      fontSize={sub ? 10 : newProps.fontSize}\n      style={style}\n      ref={ref}\n    >\n      {children}\n    </StyledText>\n  );\n};\n\nexport default React.memo(React.forwardRef(Text));\nexport type { ITextProps };\n"]}