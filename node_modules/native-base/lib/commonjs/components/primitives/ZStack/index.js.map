{"version":3,"sources":["index.tsx"],"names":["StyledZStack","View","ZStack","children","reversed","props","ref","React","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAOA,MAAMA,YAAY,GAAG,qBAAOC,aAAP,EAA2B,EAA3B,CAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsB,KAAGC;AAAzB,CAAD,EAAiDC,GAAjD,KAA+D;AAC5E,sBACE,6BAAC,YAAD,eAAkBD,KAAlB;AAAyB,IAAA,GAAG,EAAEC;AAA9B,MACG,gCAAoBH,QAApB,EAA8BC,QAA9B,CADH,CADF;AAKD,CAND;;4BAQeG,eAAMC,IAAN,eAAWD,eAAME,UAAN,CAAiBP,MAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { IViewProps, default as View } from '../View';\nimport styled from 'styled-components/native';\nimport { getAbsoluteChildren } from '../../../utils';\n\nexport type IZStackProps = IViewProps & {\n  children: JSX.Element[] | JSX.Element;\n  reversed?: boolean;\n};\n\nconst StyledZStack = styled(View)<IZStackProps>({});\n\nconst ZStack = ({ children, reversed, ...props }: IZStackProps, ref?: any) => {\n  return (\n    <StyledZStack {...props} ref={ref}>\n      {getAbsoluteChildren(children, reversed)}\n    </StyledZStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(ZStack));\n"]}