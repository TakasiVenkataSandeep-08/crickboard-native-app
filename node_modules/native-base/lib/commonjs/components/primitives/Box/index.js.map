{"version":3,"sources":["index.tsx"],"names":["StyledBox","View","color","space","layout","flexbox","border","position","typography","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customTypography","customLayout","Box","children","_text","props","ref","boxProps","React","Children","map","child","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AASA;;AACA;;AACA;;;;;;AAYA,MAAMA,SAAS,GAAG,qBAAOC,iBAAP,EAChBC,mBADgB,EAEhBC,mBAFgB,EAGhBC,oBAHgB,EAIhBC,qBAJgB,EAKhBC,oBALgB,EAMhBC,sBANgB,EAOhBC,wBAPgB,EAQhBC,2BARgB,EAShBC,yBATgB,EAUhBC,6BAVgB,EAWhBC,0BAXgB,EAYhBC,yBAZgB,EAahBC,wBAbgB,EAchBC,6BAdgB,EAehBC,yBAfgB,CAAlB;;AAkBA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmB,KAAGC;AAAtB,CAAD,EAA2CC,GAA3C,KAAwD;AAClE,QAAMC,QAAQ,GAAG,kCAAc,KAAd,EAAqBF,KAArB,CAAjB;AACA,sBACE,6BAAC,SAAD;AAAW,IAAA,GAAG,EAAEC;AAAhB,KAAyBC,QAAzB,GACGC,eAAMC,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,EAA8BQ,KAAD,IAC5B,OAAOA,KAAP,KAAiB,QAAjB,gBAA4B,6BAAC,aAAD,EAAUP,KAAV,EAAkBO,KAAlB,CAA5B,GAA8DA,KAD/D,CADH,CADF;AAOD,CATD;;4BAaeH,eAAMI,IAAN,eAAWJ,eAAMK,UAAN,CAAiBX,GAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport styled from 'styled-components/native';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  position,\n  space,\n  typography,\n} from 'styled-system';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport Text from './../Text';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n  customTypography,\n} from '../../../utils/customProps';\nimport type { IBoxProps } from './types';\n\nconst StyledBox = styled(View)<IBoxProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  typography,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customTypography,\n  customLayout\n);\n\nconst Box = ({ children, _text, ...props }: IBoxProps, ref: any) => {\n  const boxProps = useThemeProps('Box', props);\n  return (\n    <StyledBox ref={ref} {...boxProps}>\n      {React.Children.map(children, (child) =>\n        typeof child === 'string' ? <Text {..._text}>{child}</Text> : child\n      )}\n    </StyledBox>\n  );\n};\n\nexport type { IBoxProps };\n\nexport default React.memo(React.forwardRef(Box));\n"]}