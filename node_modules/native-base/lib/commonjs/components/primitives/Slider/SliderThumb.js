"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _Context = require("./Context");

var _Box = _interopRequireDefault(require("../Box"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _hooks = require("../../../hooks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const SliderThumb = ({
  children,
  ...props
}) => {
  const { ...newProps
  } = (0, _hooks.useThemeProps)('SliderThumb', props);

  const {
    sliderOffset = 0,
    panResponder,
    colorScheme,
    thumbSize = 0,
    orientation,
    isDisabled
  } = _react.default.useContext(_Context.SliderContext);

  const sliderThumbPosition = sliderOffset - 8 - thumbSize / 2;

  const customStyle = _reactNative.StyleSheet.create({
    SliderThumb: {
      position: 'absolute',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      borderRadius: 999,
      padding: 4 // increased touch area for better touch detection.

    },
    verticalStyle: {
      bottom: sliderThumbPosition
    },
    horizontalStyle: {
      left: sliderThumbPosition
    }
  });

  const sizedIcon = () => /*#__PURE__*/_react.default.cloneElement(children, {
    size: "".concat(thumbSize, "px"),
    color: children.props.color ? children.props.color : colorScheme
  }, children.props.children);

  return /*#__PURE__*/_react.default.createElement(_reactNative.Animated.View, _extends({
    style: [customStyle.SliderThumb, orientation === 'vertical' ? customStyle.verticalStyle : customStyle.horizontalStyle]
  }, panResponder.panHandlers), /*#__PURE__*/_react.default.createElement(_Box.default, _extends({
    cursor: _reactNative.Platform.OS === 'web' ? isDisabled ? 'not-allowed' : 'pointer' : null,
    position: "relative",
    borderRadius: "full",
    backgroundColor: "light.50",
    p: 1,
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    userSelect: _reactNative.Platform.OS === 'web' ? 'none' : null
  }, newProps), children ? sizedIcon() : /*#__PURE__*/_react.default.createElement(_Icon.default, {
    name: "circle-medium",
    type: "MaterialCommunityIcons",
    color: colorScheme,
    size: "".concat(thumbSize, "px"),
    opacity: 0
  })));
};

var _default = SliderThumb;
exports.default = _default;
//# sourceMappingURL=SliderThumb.js.map