"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _Context = require("./Context");

var _reactNative = require("react-native");

var _Box = _interopRequireDefault(require("../Box"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const SliderFilledTrack = ({
  style,
  ...props
}) => {
  const {
    isReversed,
    colorScheme,
    barSize = 0,
    sliderOffset = 0,
    orientation
  } = _react.default.useContext(_Context.SliderContext);

  const sliderTrackPosition = isReversed ? sliderOffset : sliderOffset - barSize; // NOTE: Required for WEB compatibility

  const customStyle = _reactNative.StyleSheet.create({
    verticalStyle: {
      top: -sliderTrackPosition
    },
    horizontalStyle: {
      left: sliderTrackPosition
    }
  });

  return /*#__PURE__*/_react.default.createElement(_Box.default, _extends({
    position: "absolute",
    left: orientation === 'vertical' ? 0 : sliderTrackPosition,
    top: orientation === 'vertical' ? -sliderTrackPosition : 0,
    backgroundColor: colorScheme,
    height: "100%",
    width: "100%"
  }, props, {
    style: [style, orientation === 'vertical' ? customStyle.verticalStyle : customStyle.horizontalStyle]
  }));
};

var _default = SliderFilledTrack;
exports.default = _default;
//# sourceMappingURL=SliderFilledTrack.js.map