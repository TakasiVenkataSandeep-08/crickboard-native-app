{"version":3,"sources":["SliderThumb.tsx"],"names":["SliderThumb","children","props","newProps","sliderOffset","panResponder","colorScheme","thumbSize","orientation","isDisabled","React","useContext","SliderContext","sliderThumbPosition","customStyle","StyleSheet","create","position","display","justifyContent","alignItems","borderRadius","padding","verticalStyle","bottom","horizontalStyle","left","sizedIcon","cloneElement","size","color","panHandlers","Platform","OS"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAGA,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA0C;AAC5D,QAAM,EAAE,GAAGC;AAAL,MAAkB,0BAAc,aAAd,EAA6BD,KAA7B,CAAxB;;AACA,QAAM;AACJE,IAAAA,YAAY,GAAG,CADX;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,SAAS,GAAG,CAJR;AAKJC,IAAAA,WALI;AAMJC,IAAAA;AANI,MAOmBC,eAAMC,UAAN,CAAiBC,sBAAjB,CAPzB;;AASA,QAAMC,mBAAmB,GAAGT,YAAY,GAAG,CAAf,GAAmBG,SAAS,GAAG,CAA3D;;AAEA,QAAMO,WAAW,GAAGC,wBAAWC,MAAX,CAAkB;AACpChB,IAAAA,WAAW,EAAE;AACXiB,MAAAA,QAAQ,EAAE,UADC;AAEXC,MAAAA,OAAO,EAAE,MAFE;AAGXC,MAAAA,cAAc,EAAE,QAHL;AAIXC,MAAAA,UAAU,EAAE,QAJD;AAKXC,MAAAA,YAAY,EAAE,GALH;AAMXC,MAAAA,OAAO,EAAE,CANE,CAMC;;AAND,KADuB;AASpCC,IAAAA,aAAa,EAAE;AACbC,MAAAA,MAAM,EAAEX;AADK,KATqB;AAYpCY,IAAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAEb;AADS;AAZmB,GAAlB,CAApB;;AAiBA,QAAMc,SAAS,GAAG,mBAChBjB,eAAMkB,YAAN,CACE3B,QADF,EAEE;AACE4B,IAAAA,IAAI,YAAKtB,SAAL,OADN;AAEEuB,IAAAA,KAAK,EAAE7B,QAAQ,CAACC,KAAT,CAAe4B,KAAf,GAAuB7B,QAAQ,CAACC,KAAT,CAAe4B,KAAtC,GAA8CxB;AAFvD,GAFF,EAMEL,QAAQ,CAACC,KAAT,CAAeD,QANjB,CADF;;AAUA,sBACE,6BAAC,qBAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACLa,WAAW,CAACd,WADP,EAELQ,WAAW,KAAK,UAAhB,GACIM,WAAW,CAACS,aADhB,GAEIT,WAAW,CAACW,eAJX;AADT,KAOMpB,YAAY,CAAC0B,WAPnB,gBASE,6BAAC,YAAD;AACE,IAAA,MAAM,EACJC,sBAASC,EAAT,KAAgB,KAAhB,GACIxB,UAAU,GACR,aADQ,GAER,SAHN,GAII,IANR;AAQE,IAAA,QAAQ,EAAC,UARX;AASE,IAAA,YAAY,EAAC,MATf;AAUE,IAAA,eAAe,EAAC,UAVlB;AAWE,IAAA,CAAC,EAAE,CAXL;AAYE,IAAA,OAAO,EAAC,MAZV;AAaE,IAAA,cAAc,EAAC,QAbjB;AAcE,IAAA,UAAU,EAAC,QAdb;AAeE,IAAA,UAAU,EAAEuB,sBAASC,EAAT,KAAgB,KAAhB,GAAwB,MAAxB,GAAiC;AAf/C,KAgBM9B,QAhBN,GAkBGF,QAAQ,GACP0B,SAAS,EADF,gBAGP,6BAAC,aAAD;AACE,IAAA,IAAI,EAAC,eADP;AAEE,IAAA,IAAI,EAAC,wBAFP;AAGE,IAAA,KAAK,EAAErB,WAHT;AAIE,IAAA,IAAI,YAAKC,SAAL,OAJN;AAKE,IAAA,OAAO,EAAE;AALX,IArBJ,CATF,CADF;AA0CD,CAlFD;;eAoFeP,W","sourcesContent":["import React from 'react';\nimport { StyleSheet, Animated, Platform } from 'react-native';\nimport { SliderContext } from './Context';\nimport Box from '../Box';\nimport Icon from '../Icon';\nimport { useThemeProps } from '../../../hooks';\nimport type { ISliderProps, ISliderContextProps } from './types';\n\nconst SliderThumb = ({ children, ...props }: ISliderProps) => {\n  const { ...newProps } = useThemeProps('SliderThumb', props);\n  const {\n    sliderOffset = 0,\n    panResponder,\n    colorScheme,\n    thumbSize = 0,\n    orientation,\n    isDisabled,\n  }: ISliderContextProps = React.useContext(SliderContext);\n\n  const sliderThumbPosition = sliderOffset - 8 - thumbSize / 2;\n\n  const customStyle = StyleSheet.create({\n    SliderThumb: {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 999,\n      padding: 4, // increased touch area for better touch detection.\n    },\n    verticalStyle: {\n      bottom: sliderThumbPosition,\n    },\n    horizontalStyle: {\n      left: sliderThumbPosition,\n    },\n  });\n\n  const sizedIcon = () =>\n    React.cloneElement(\n      children,\n      {\n        size: `${thumbSize}px`,\n        color: children.props.color ? children.props.color : colorScheme,\n      },\n      children.props.children\n    );\n\n  return (\n    <Animated.View\n      style={[\n        customStyle.SliderThumb,\n        orientation === 'vertical'\n          ? customStyle.verticalStyle\n          : customStyle.horizontalStyle,\n      ]}\n      {...panResponder.panHandlers}\n    >\n      <Box\n        cursor={\n          Platform.OS === 'web'\n            ? isDisabled\n              ? 'not-allowed'\n              : 'pointer'\n            : null\n        }\n        position=\"relative\"\n        borderRadius=\"full\"\n        backgroundColor=\"light.50\"\n        p={1}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        userSelect={Platform.OS === 'web' ? 'none' : null}\n        {...newProps}\n      >\n        {children ? (\n          sizedIcon()\n        ) : (\n          <Icon\n            name=\"circle-medium\"\n            type=\"MaterialCommunityIcons\"\n            color={colorScheme}\n            size={`${thumbSize}px`}\n            opacity={0}\n          />\n        )}\n      </Box>\n    </Animated.View>\n  );\n};\n\nexport default SliderThumb;\n"]}