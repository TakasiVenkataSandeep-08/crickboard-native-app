"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _native = _interopRequireDefault(require("styled-components/native"));

var _styledSystem = require("styled-system");

var _hooks = require("../../../hooks");

var _useSpinner = require("./useSpinner");

var _customProps = require("../../../utils/customProps");

var _variants = require("./variants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const StyleAnimatedView = (0, _native.default)(_reactNative.Animated.View)(_styledSystem.color, _styledSystem.border, _styledSystem.position, _customProps.customPosition, _customProps.customLayout);
const StyledSpinner = (0, _native.default)(_reactNative.ActivityIndicator)(_styledSystem.color, _styledSystem.space, _styledSystem.position);

const Spinner = ({
  renderProp,
  ...props
}, ref) => {
  var _newProps$duration;

  const newProps = (0, _hooks.useThemeProps)('Spinner', props);
  const spinnerColor = (0, _hooks.useToken)('colors', newProps.color);
  const {
    spinnerProps
  } = (0, _useSpinner.useSpinner)(props);
  const iconSize = {
    sm: 10,
    lg: 20
  };
  const degree = new _reactNative.Animated.Value(0);

  _reactNative.Animated.loop(_reactNative.Animated.timing(degree, {
    toValue: 1,
    duration: (_newProps$duration = newProps.duration) !== null && _newProps$duration !== void 0 ? _newProps$duration : 1900,
    easing: _reactNative.Easing.linear,
    useNativeDriver: false
  })).start();

  const styles = _reactNative.StyleSheet.create({
    animateStyle: {
      transform: [{
        rotateZ: degree.interpolate({
          inputRange: [0, 1],
          outputRange: ['0deg', '360deg']
        })
      }]
    }
  });

  if (!newProps.variant) {
    return /*#__PURE__*/_react.default.createElement(StyledSpinner, _extends({}, spinnerProps, newProps, {
      color: spinnerColor,
      ref: ref
    }));
  } else {
    if (newProps.variant === 'custom' && renderProp) {
      return /*#__PURE__*/_react.default.createElement(StyleAnimatedView, {
        style: styles.animateStyle
      }, renderProp);
    } else {
      let SpinnerVariant = null;

      switch (newProps.variant) {
        case 'dotted':
          SpinnerVariant = /*#__PURE__*/_react.default.createElement(_variants.Dotted, {
            color: spinnerColor,
            size: props.size ? iconSize[props.size] : 12
          });
          break;

        case 'multiColorDotted':
          SpinnerVariant = /*#__PURE__*/_react.default.createElement(_variants.MultiColorDotted, {
            color: spinnerColor,
            size: props.size ? iconSize[props.size] : 12
          });
          break;

        case 'stroked':
          SpinnerVariant = /*#__PURE__*/_react.default.createElement(_variants.Stroked, {
            color: spinnerColor,
            size: props.size ? iconSize[props.size] : 12
          });
          break;

        case 'squareDotted':
          SpinnerVariant = /*#__PURE__*/_react.default.createElement(_variants.SquareDotted, {
            color: spinnerColor,
            size: props.size ? iconSize[props.size] : 12
          });
          break;

        default:
          SpinnerVariant = /*#__PURE__*/_react.default.createElement(_variants.Default, {
            color: spinnerColor,
            size: props.size ? iconSize[props.size] : 12
          });
      }

      return /*#__PURE__*/_react.default.createElement(StyleAnimatedView, {
        style: styles.animateStyle
      }, SpinnerVariant);
    }
  }
};

var _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef(Spinner));

exports.default = _default;
//# sourceMappingURL=index.js.map