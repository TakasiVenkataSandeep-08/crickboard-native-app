{"version":3,"sources":["Snackbar.tsx"],"names":["Snackbar","children","autoHideDuration","accessibilityAnnouncement","props","ref","isOpen","setIsOpen","React","useState","useEffect","setTimeout","Platform","OS","AccessibilityInfo","announceForAccessibility","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;AAEA,MAAMA,QAAQ,GAAG,CACf;AACEC,EAAAA,QADF;AAEEC,EAAAA,gBAAgB,GAAG,IAFrB;AAGEC,EAAAA,yBAHF;AAIE,KAAGC;AAJL,CADe,EAOfC,GAPe,KAQZ;AACH,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,eAAMC,QAAN,CAAe,IAAf,CAA5B;;AACAD,iBAAME,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,MAAM,IACJK,UAAU,CAAC,MAAM;AACfJ,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFS,EAEPL,gBAFO,CADZ;AAID,GALD,EAKG,CAACI,MAAD,EAASJ,gBAAT,CALH;;AAOAM,iBAAME,SAAN,CAAgB,MAAM;AACpB,QAAIP,yBAAyB,IAAIG,MAA7B,IAAuCM,sBAASC,EAAT,KAAgB,KAA3D,EAAkE;AAChEC,qCAAkBC,wBAAlB,CAA2CZ,yBAA3C;AACD;AACF,GAJD,EAIG,CAACA,yBAAD,EAA4BG,MAA5B,CAJH;;AAKA,sBACE,6BAAC,kBAAD;AAAO,IAAA,EAAE,EAAEA;AAAX,KAAuBF,KAAvB;AAA8B,IAAA,GAAG,EAAEC;AAAnC,MACGJ,QADH,CADF;AAKD,CA3BD;;4BA6BeO,eAAMQ,IAAN,eAAWR,eAAMS,UAAN,CAAiBjB,QAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { Slide } from '../Transitions';\nimport type { ISnackbarProps } from './types';\nimport { AccessibilityInfo, Platform } from 'react-native';\n\nconst Snackbar = (\n  {\n    children,\n    autoHideDuration = 5000,\n    accessibilityAnnouncement,\n    ...props\n  }: ISnackbarProps,\n  ref: any\n) => {\n  const [isOpen, setIsOpen] = React.useState(true);\n  React.useEffect(() => {\n    isOpen &&\n      setTimeout(() => {\n        setIsOpen(false);\n      }, autoHideDuration);\n  }, [isOpen, autoHideDuration]);\n\n  React.useEffect(() => {\n    if (accessibilityAnnouncement && isOpen && Platform.OS !== 'web') {\n      AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n    }\n  }, [accessibilityAnnouncement, isOpen]);\n  return (\n    <Slide in={isOpen} {...props} ref={ref}>\n      {children}\n    </Slide>\n  );\n};\n\nexport default React.memo(React.forwardRef(Snackbar));\n"]}