{"version":3,"sources":["FormLabel.tsx"],"names":["FormLabel","children","_disabled","_invalid","props","ref","isInvalid","isRequired","isDisabled","React","useContext","FormControlContext","textColor","requiredAsterisk","fontSize","memo","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAGA,MAAMA,SAAS,GAAG,CAChB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA,QAAvB;AAAiC,KAAGC;AAApC,CADgB,EAEhBC,GAFgB,KAGb;AACH,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA;AAHI,MAImBC,eAAMC,UAAN,CAAiBC,+BAAjB,CAJzB;;AAKA,QAAMC,SAAS,GAAG,qBAAS,QAAT,EAAmB,SAAnB,CAAlB;;AACA,QAAMC,gBAAgB,GAAG,mBAAM,6BAAC,aAAD;AAAM,IAAA,KAAK,EAAED;AAAb,SAA/B;;AAEA,sBACE,6BAAC,YAAD;AACE,IAAA,aAAa,EAAC,KADhB;AAEE,IAAA,cAAc,EAAC,YAFjB;AAGE,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ;AAHT,KAIMV,KAJN;AAKE,IAAA,GAAG,EAAEC;AALP,KAMOC,SAAS,IAAIH,QANpB,EAOOK,UAAU,IAAIN,SAPrB,GASGD,QATH,EAUGM,UAAU,IAAIM,gBAAgB,EAVjC,CADF;AAcD,CA1BD;;4BA2BeJ,eAAMM,IAAN,eAAWN,eAAMO,UAAN,CAAiBhB,SAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport Text from '../../primitives/Text';\nimport { useToken } from '../../../hooks';\nimport { FormControlContext } from './FormControl';\nimport type { IFormControlLabelProps, IFormControlContext } from './types';\n\nconst FormLabel = (\n  { children, _disabled, _invalid, ...props }: IFormControlLabelProps,\n  ref: any\n) => {\n  const {\n    isInvalid,\n    isRequired,\n    isDisabled,\n  }: IFormControlContext = React.useContext(FormControlContext);\n  const textColor = useToken('colors', 'red.300');\n  const requiredAsterisk = () => <Text color={textColor}>*</Text>;\n\n  return (\n    <Box\n      flexDirection=\"row\"\n      justifyContent=\"flex-start\"\n      _text={{ fontSize: 'md' }}\n      {...props}\n      ref={ref}\n      {...(isInvalid && _invalid)}\n      {...(isDisabled && _disabled)}\n    >\n      {children}\n      {isRequired && requiredAsterisk()}\n    </Box>\n  );\n};\nexport default React.memo(React.forwardRef(FormLabel));\n"]}