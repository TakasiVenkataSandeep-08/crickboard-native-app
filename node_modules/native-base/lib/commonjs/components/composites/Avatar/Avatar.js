"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _primitives = require("../../primitives");

var _hooks = require("../../../hooks");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Avatar = (props, ref) => {
  const [error, setError] = _react.default.useState(false);

  const {
    size,
    style,
    source,
    children,
    ...remainingProps
  } = props;
  const {
    _text,
    ...newProps
  } = (0, _hooks.useThemeProps)('Avatar', { ...remainingProps,
    name: 'avatar',
    size
  });

  let Badge = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);

  let remainingChildren = []; //  Pop Badge from children

  _react.default.Children.map(children, (child, key) => {
    var _child$type$type;

    if (typeof child.type === 'object' && ((_child$type$type = child.type.type) === null || _child$type$type === void 0 ? void 0 : _child$type$type.name) === 'AvatarBadge') {
      Badge = child;
    } else {
      remainingChildren.push(typeof child === 'string' ? /*#__PURE__*/_react.default.createElement(_primitives.Text, _extends({
        key: 'avatar-children-' + key
      }, _text), child) : child);
    }
  });

  const imageFitStyle = {
    height: '100%',
    width: '100%'
  };
  return /*#__PURE__*/_react.default.createElement(_primitives.Box, _extends({}, newProps, {
    style: style,
    ref: ref
  }), source && !error ? /*#__PURE__*/_react.default.createElement(_primitives.Image, {
    borderRadius: newProps.borderRadius,
    source: source,
    alt: '--',
    _alt: _text,
    style: [style, imageFitStyle],
    onError: () => {
      setError(true);
    }
  }) : remainingChildren.length === 0 ? /*#__PURE__*/_react.default.createElement(_primitives.Text, _text, "--") // default alternate
  : remainingChildren, Badge);
};

var _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef(Avatar));

exports.default = _default;
//# sourceMappingURL=Avatar.js.map