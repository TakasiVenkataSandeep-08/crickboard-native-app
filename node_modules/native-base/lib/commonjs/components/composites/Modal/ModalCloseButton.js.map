{"version":3,"sources":["ModalCloseButton.tsx"],"names":["ModalCloseButton","props","newProps","toggleVisible","toggleOnClose","React","useContext","ModalContext","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,gBAAgB,GAAIC,KAAD,IAA8B;AACrD,QAAMC,QAAQ,GAAG,0BAAc,kBAAd,EAAkCD,KAAlC,CAAjB;;AACA,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAmCC,eAAMC,UAAN,CAAiBC,qBAAjB,CAAzC;;AACA,sBACE,6BAAC,oBAAD,eACML,QADN;AAEE;AACA,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AANH,KADF;AAUD,CAbD;;4BAeeC,eAAMG,IAAN,CAAWR,gBAAX,C","sourcesContent":["import React from 'react';\nimport CloseButton, { ICloseButtonProps } from '../../composites/CloseButton';\nimport { ModalContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\n\nconst ModalCloseButton = (props: ICloseButtonProps) => {\n  const newProps = useThemeProps('ModalCloseButton', props);\n  const { toggleVisible, toggleOnClose } = React.useContext(ModalContext);\n  return (\n    <CloseButton\n      {...newProps}\n      // accessibilityLabel=\"Close dialog\"\n      onPress={() => {\n        toggleVisible(false);\n        toggleOnClose(false);\n      }}\n    />\n  );\n};\n\nexport default React.memo(ModalCloseButton);\n"]}