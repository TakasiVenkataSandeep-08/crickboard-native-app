{"version":3,"sources":["ModalOverlay.tsx"],"names":["ModalOverlay","children","props","newProps","toggleVisible","toggleOnClose","React","useContext","ModalContext","position","left","top","right","bottom","closeOnOverlayClick","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAAiC;AACpD,QAAMC,QAAQ,GAAG,0BAAc,cAAd,EAA8BD,KAA9B,CAAjB;;AACA,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAmCC,eAAMC,UAAN,CAAiBC,qBAAjB,CAAzC;;AAEA,sBACE,6BAAC,YAAD,EAASL,QAAT,eACE,6BAAC,6BAAD;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,IAAI,EAAE,CAFD;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,KAAK,EAAE,CAJF;AAKLC,MAAAA,MAAM,EAAE;AALH,KADT;AAQE,IAAA,UAAU,EAAE,KARd;AASE,IAAA,OAAO,EACLV,QAAQ,CAACW,mBAAT,KAAiC,KAAjC,GACI,MAAM,CAAE,CADZ,GAEI,MAAM;AACJV,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AAfT,IADF,EAmBGJ,QAnBH,CADF;AAuBD,CA3BD;;4BA6BeK,eAAMS,IAAN,CAAWf,YAAX,C","sourcesContent":["import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { ModalContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\n\nconst ModalOverlay = ({ children, ...props }: any) => {\n  const newProps = useThemeProps('ModalOverlay', props);\n  const { toggleVisible, toggleOnClose } = React.useContext(ModalContext);\n\n  return (\n    <Box {...newProps}>\n      <TouchableOpacity\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n        }}\n        accessible={false}\n        onPress={\n          newProps.closeOnOverlayClick === false\n            ? () => {}\n            : () => {\n                toggleVisible(false);\n                toggleOnClose(false);\n              }\n        }\n      />\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(ModalOverlay);\n"]}