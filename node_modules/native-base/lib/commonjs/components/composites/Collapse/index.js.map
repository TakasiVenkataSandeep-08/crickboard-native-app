{"version":3,"sources":["index.tsx"],"names":["usePrevious","value","ref","updatePrevious","newVal","current","Collapse","endingHeight","startingHeight","duration","isOpen","onAnimationEnd","onAnimationStart","props","Platform","OS","UIManager","setLayoutAnimationEnabledExperimental","CustomLayoutLinear","create","type","LayoutAnimation","Types","easeInEaseOut","property","Properties","opacity","update","defaultStartHeight","animatedStyle","height","animateView","callback","configureNext","wasOpen","size","setSize","React","useState","provideSize","layoutSize","_web","transition","e","nativeEvent","layout","memo"],"mappings":"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","sourcesContent":["import isNil from 'lodash/isNil';\nimport React, { useEffect, useRef } from 'react';\nimport { ViewStyle, LayoutAnimation, UIManager, Platform } from 'react-native';\nimport { Box, IBoxProps } from '../../primitives';\n\nexport type ICollapseProps = IBoxProps & {\n  style?: ViewStyle;\n  endingHeight?: number;\n  startingHeight?: number;\n  duration?: number;\n  animateOpacity?: boolean;\n  isOpen?: boolean;\n  onAnimationEnd?: Function;\n  onAnimationStart?: Function;\n};\n\nfunction usePrevious(value: any) {\n  const ref = useRef();\n  function updatePrevious(newVal: any) {\n    ref.current = newVal;\n  }\n  useEffect(() => {\n    updatePrevious(value);\n  }, [value]);\n  return { value: ref.current, updatePrevious };\n}\n\nconst Collapse = ({\n  endingHeight,\n  startingHeight,\n  duration,\n  // animateOpacity,\n  isOpen,\n  onAnimationEnd,\n  onAnimationStart,\n  ...props\n}: ICollapseProps) => {\n  if (Platform.OS === 'android') {\n    UIManager.setLayoutAnimationEnabledExperimental &&\n      UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n  const CustomLayoutLinear = {\n    duration: duration ? duration : 400,\n    create: {\n      type: LayoutAnimation.Types.easeInEaseOut,\n      property: LayoutAnimation.Properties.opacity,\n    },\n    update: {\n      type: LayoutAnimation.Types.easeInEaseOut,\n    },\n  };\n  const defaultStartHeight: any = isOpen\n    ? endingHeight\n    : startingHeight\n    ? startingHeight\n    : 0;\n  let animatedStyle = { height: defaultStartHeight };\n  const animateView = () => {\n    if (onAnimationStart) {\n      onAnimationStart();\n    }\n    animatedStyle = {\n      height: isOpen ? endingHeight : defaultStartHeight,\n    };\n    let callback = onAnimationEnd ? onAnimationEnd : () => {};\n    LayoutAnimation.configureNext(CustomLayoutLinear, callback());\n  };\n\n  let wasOpen = usePrevious(isOpen);\n  if (!isNil(wasOpen.value) && wasOpen.value !== isOpen) {\n    animateView();\n    wasOpen.updatePrevious(isOpen);\n  }\n  const [size, setSize] = React.useState(startingHeight ?? 0);\n  const provideSize = (layoutSize: any) => {\n    setSize(layoutSize.height);\n  };\n  const _web = {\n    transition: `height ${duration ?? '400ms'}`,\n    height: isOpen ? endingHeight || size : startingHeight || 0,\n  };\n\n  return (\n    <Box\n      style={{ ...animatedStyle, ...(Platform.OS === 'web' && _web) }}\n      overflow=\"hidden\"\n    >\n      <Box\n        overflow=\"scroll\"\n        onLayout={(e) => provideSize(e.nativeEvent.layout)}\n        {...props}\n      />\n    </Box>\n  );\n};\n\nexport default React.memo(Collapse);\n"]}