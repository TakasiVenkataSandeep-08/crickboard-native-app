"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _hooks = require("../../../hooks");

var _utils = require("../../../utils");

var _Box = _interopRequireDefault(require("../../primitives/Box"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Skeleton = (allProps, ref) => {
  var _props$transform;

  const isDomUsable = (0, _utils.canUseDom)();
  const {
    variant,
    children,
    ...props
  } = allProps;
  const newProps = (0, _hooks.useThemeProps)('Skeleton', props);
  const {
    style,
    skeletonColor,
    baseColor
  } = newProps;

  const blinkAnim = _react.default.useRef(new _reactNative.Animated.Value(0)).current;

  _react.default.useEffect(() => {
    if (isDomUsable) {
      const blink = _reactNative.Animated.sequence([_reactNative.Animated.timing(blinkAnim, {
        toValue: 1,
        duration: 1000,
        useNativeDriver: _reactNative.Platform.OS !== 'web'
      }), _reactNative.Animated.timing(blinkAnim, {
        toValue: 0,
        duration: 1000,
        useNativeDriver: _reactNative.Platform.OS !== 'web'
      })]);

      _reactNative.Animated.loop(blink).start();
    }
  }, [blinkAnim, isDomUsable]);

  const skeletonStyle = {
    skeleton: {
      position: 'absolute',
      top: 0,
      bottom: 0,
      height: '100%',
      width: '100%',
      borderRadius: variant === 'circle' ? 999 : 3,
      backgroundColor: skeletonColor,
      opacity: blinkAnim // Bind opacity to animated value

    }
  };
  return /*#__PURE__*/_react.default.createElement(_Box.default, _extends({
    style: [style, {
      transform: ((_props$transform = props.transform) !== null && _props$transform !== void 0 ? _props$transform : variant === 'text') ? [{
        scaleY: 0.6
      }] : undefined
    }],
    borderRadius: variant === 'circle' ? 999 : 3,
    bg: baseColor
  }, props, {
    ref: ref
  }), /*#__PURE__*/_react.default.createElement(_reactNative.Animated.View, {
    style: skeletonStyle.skeleton
  }), children ? /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: {
      opacity: 0
    }
  }, children) : null);
};

var _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef(Skeleton));

exports.default = _default;
//# sourceMappingURL=Skeleton.js.map