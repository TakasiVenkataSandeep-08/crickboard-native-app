"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _Box = _interopRequireDefault(require("../../primitives/Box"));

var _useThemeProps = require("../../../hooks/useThemeProps");

var _reactNative = require("react-native");

var _utils = require("../../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const ScaleFade = ({
  children,
  ...props
}) => {
  const isDomUsable = (0, _utils.canUseDom)();
  const {
    in: animationState,
    duration,
    initialScale
  } = (0, _useThemeProps.useThemeProps)('ScaleFade', props);

  const fadeAnim = _react.default.useRef(new _reactNative.Animated.Value(0)).current;

  const scaleAnim = _react.default.useRef(new _reactNative.Animated.Value(initialScale)).current;

  const fadeIn = () => {
    if (isDomUsable) {
      _reactNative.Animated.timing(fadeAnim, {
        toValue: 1,
        duration: duration,
        useNativeDriver: _reactNative.Platform.OS !== 'web'
      }).start();
    }
  };

  const fadeOut = () => {
    if (isDomUsable) {
      _reactNative.Animated.timing(fadeAnim, {
        toValue: 0,
        duration: duration,
        useNativeDriver: _reactNative.Platform.OS !== 'web'
      }).start();
    }
  };

  const scaleIn = () => {
    if (isDomUsable) {
      _reactNative.Animated.timing(scaleAnim, {
        toValue: 1,
        duration: duration,
        useNativeDriver: _reactNative.Platform.OS !== 'web'
      }).start();
    }
  };

  const scaleOut = () => {
    if (isDomUsable) {
      _reactNative.Animated.timing(scaleAnim, {
        toValue: initialScale,
        duration: duration,
        useNativeDriver: _reactNative.Platform.OS !== 'web'
      }).start();
    }
  };

  if (animationState) {
    fadeIn();
    scaleIn();
  } else {
    fadeOut();
    scaleOut();
  }

  return /*#__PURE__*/_react.default.createElement(_reactNative.Animated.View, {
    style: {
      opacity: fadeAnim,
      transform: [{
        scale: scaleAnim
      }]
    }
  }, /*#__PURE__*/_react.default.createElement(_Box.default, props), children);
};

var _default = /*#__PURE__*/_react.default.memo(ScaleFade);

exports.default = _default;
//# sourceMappingURL=ScaleFade.js.map