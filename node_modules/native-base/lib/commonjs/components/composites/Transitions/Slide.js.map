{"version":3,"sources":["Slide.tsx"],"names":["Slide","children","props","ref","isDomUsable","in","animationState","delay","placement","pPlacement","duration","containerOpacity","setContainerOpacity","React","useState","size","setSize","provideSize","layoutSize","width","height","setTimeout","slideAnim","useRef","Animated","Value","current","slideIn","timing","toValue","useNativeDriver","Platform","OS","start","slideOut","holderStyle","top","right","left","bottom","animatioStyle","transform","translateY","translateX","e","nativeEvent","layout","memo","forwardRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport type { ISlideProps } from './types';\nimport { canUseDom } from '../../../utils';\n\nconst Slide = ({ children, ...props }: ISlideProps, ref: any) => {\n  const isDomUsable = canUseDom();\n  // TODO: Slide from right and left needs implmentation.\n  const {\n    in: animationState,\n    delay,\n    placement: pPlacement,\n    duration,\n  } = useThemeProps('Slide', props);\n  let placement = pPlacement === 'top' ? 'top' : 'bottom';\n  const [containerOpacity, setContainerOpacity] = React.useState(1);\n  const [size, setSize] = React.useState(placement === 'top' ? -1000 : 1000);\n  const provideSize = (layoutSize: any) => {\n    if (placement === 'right' || placement === 'left')\n      setSize(layoutSize.width);\n    else setSize(layoutSize.height);\n    setTimeout(() => {\n      setContainerOpacity(1);\n    }, duration);\n  };\n  const slideAnim = React.useRef(new Animated.Value(size)).current;\n  const slideIn = () => {\n    if (isDomUsable) {\n      Animated.timing(slideAnim, {\n        delay,\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n\n  const slideOut = () => {\n    if (isDomUsable) {\n      Animated.timing(slideAnim, {\n        toValue: placement === 'top' ? -size : size,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n\n  const holderStyle: any = {\n    top: {\n      top: 0,\n      right: 0,\n      left: 0,\n    },\n    right: {\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    bottom: {\n      bottom: 0,\n      right: 0,\n      left: 0,\n    },\n    left: {\n      left: 0,\n      bottom: 0,\n      top: 0,\n    },\n  };\n  const animatioStyle: any = {\n    top: { transform: [{ translateY: slideAnim }] },\n    right: { transform: [{ translateX: slideAnim }] },\n    bottom: { transform: [{ translateY: slideAnim }] },\n    left: { transform: [{ translateX: slideAnim }] },\n  };\n\n  animationState && size ? slideIn() : slideOut();\n  return (\n    <Box\n      overflow=\"hidden\"\n      position=\"absolute\"\n      style={holderStyle[placement]}\n      opacity={containerOpacity}\n    >\n      <Animated.View style={animatioStyle[placement]}>\n        <Box\n          {...props}\n          onLayout={(e) => provideSize(e.nativeEvent.layout)}\n          ref={ref}\n        >\n          {children}\n        </Box>\n      </Animated.View>\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Slide));\n"]}