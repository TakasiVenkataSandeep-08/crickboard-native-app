{"version":3,"sources":["index.tsx"],"names":["AspectView","React","forwardRef","props","ref","layout","setLayout","useState","inputStyle","StyleSheet","flatten","style","width","height","push","aspectRatio","nativeEvent","inLayout","AspectRatio","ratio","children","computedStyle","newChildWithProps","cloneElement","absoluteFillObject","Platform","OS","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAQA,MAAMA,UAAU,gBAAGC,eAAMC,UAAN,CAAiB,CAACC,KAAD,EAAaC,GAAb,KAA2B;AAC7D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,eAAMM,QAAN,EAA5B;;AACA,QAAMC,UAAU,GAAG,CAACC,wBAAWC,OAAX,CAAmBP,KAAK,CAACQ,KAAzB,KAAmC,EAApC,CAAnB;;AACA,MAAIN,MAAJ,EAAY;AACV;AACA,QAAI;AAAEO,MAAAA,KAAK,GAAG,CAAV;AAAaC,MAAAA,MAAM,GAAG;AAAtB,QAA4BR,MAAhC;;AACA,QAAIO,KAAK,KAAK,CAAd,EAAiB;AACfJ,MAAAA,UAAU,CAACM,IAAX,CAAgB;AAAEF,QAAAA,KAAK,EAAEC,MAAM,GAAGV,KAAK,CAACY,WAAxB;AAAqCF,QAAAA;AAArC,OAAhB;AACD,KAFD,MAEO;AACLL,MAAAA,UAAU,CAACM,IAAX,CAAgB;AAAEF,QAAAA,KAAF;AAASC,QAAAA,MAAM,EAAED,KAAK,GAAGT,KAAK,CAACY;AAA/B,OAAhB;AACD;AACF;;AACD,sBACE,6BAAC,YAAD,eACMZ,KADN;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,KAAK,EAAEI,UAHT;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEQ,MAAAA,WAAW,EAAE;AAAEX,QAAAA,MAAM,EAAEY;AAAV;AAAf,KAAD,KACRX,SAAS,CAACW,QAAD;AALb,KADF;AAUD,CAtBkB,CAAnB;;AAwBA,MAAMC,WAAW,GAAG,CAClB;AAAEP,EAAAA,KAAF;AAASQ,EAAAA,KAAT;AAAgBC,EAAAA,QAAhB;AAA0B,KAAGjB;AAA7B,CADkB,EAElBC,GAFkB,KAGf;AACH,MAAIiB,aAAoC,GAAGV,KAA3C;;AACA,MAAIW,iBAAiB,gBAAGrB,eAAMsB,YAAN,CACtBH,QADsB,EAEtB,EACE,GAAGA,QAAQ,CAACjB,KADd;AAEEQ,IAAAA,KAAK,EAAEF,wBAAWe;AAFpB,GAFsB,EAMtBJ,QAAQ,CAACjB,KAAT,CAAeiB,QANO,CAAxB;;AAQA,MAAIL,WAAW,GAAG,CAAC,oBAAMI,KAAN,CAAD,GAAgBA,KAAhB,GAAwB,IAAI,CAA9C,CAVG,CAYH;;AACA,MAAIM,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACzB,wBACE,6BAAC,UAAD,eAAgBvB,KAAhB;AAAuB,MAAA,WAAW,EAAEY,WAApC;AAAiD,MAAA,KAAK,EAAEJ,KAAxD;AAA+D,MAAA,GAAG,EAAEP;AAApE,QACGkB,iBADH,CADF;AAKD,GAND,MAMO;AACLD,IAAAA,aAAa,GAAGZ,wBAAWC,OAAX,CAAmB,CAACC,KAAD,EAAQ;AAAEI,MAAAA;AAAF,KAAR,CAAnB,CAAhB;AACA,wBACE,6BAAC,YAAD,eAASZ,KAAT;AAAgB,MAAA,KAAK,EAAEkB,aAAvB;AAAsC,MAAA,GAAG,EAAEjB;AAA3C,QACGkB,iBADH,CADF;AAKD;AACF,CA9BD;;4BAgCerB,eAAM0B,IAAN,eAAW1B,eAAMC,UAAN,CAAiBgB,WAAjB,CAAX,C","sourcesContent":["import React from 'react';\nimport { StyleSheet, ViewStyle, Platform } from 'react-native';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport isNil from 'lodash/isNil';\n\nexport type IAspectRatioProps = IBoxProps & {\n  style?: ViewStyle;\n  ratio?: number;\n  children: JSX.Element;\n};\n\nconst AspectView = React.forwardRef((props: any, ref?: any) => {\n  const [layout, setLayout] = React.useState();\n  const inputStyle = [StyleSheet.flatten(props.style) || {}];\n  if (layout) {\n    // @ts-ignore\n    let { width = 0, height = 0 } = layout;\n    if (width === 0) {\n      inputStyle.push({ width: height * props.aspectRatio, height });\n    } else {\n      inputStyle.push({ width, height: width / props.aspectRatio });\n    }\n  }\n  return (\n    <Box\n      {...props}\n      ref={ref}\n      style={inputStyle}\n      onLayout={({ nativeEvent: { layout: inLayout } }: any) =>\n        setLayout(inLayout)\n      }\n    />\n  );\n});\n\nconst AspectRatio = (\n  { style, ratio, children, ...props }: IAspectRatioProps,\n  ref?: any\n) => {\n  let computedStyle: ViewStyle | undefined = style;\n  let newChildWithProps = React.cloneElement(\n    children,\n    {\n      ...children.props,\n      style: StyleSheet.absoluteFillObject,\n    },\n    children.props.children\n  );\n  let aspectRatio = !isNil(ratio) ? ratio : 4 / 3;\n\n  // DOC:  It uses a aspectRatio property of React Native and manually calculate on Web\n  if (Platform.OS === 'web') {\n    return (\n      <AspectView {...props} aspectRatio={aspectRatio} style={style} ref={ref}>\n        {newChildWithProps}\n      </AspectView>\n    );\n  } else {\n    computedStyle = StyleSheet.flatten([style, { aspectRatio }]);\n    return (\n      <Box {...props} style={computedStyle} ref={ref}>\n        {newChildWithProps}\n      </Box>\n    );\n  }\n};\n\nexport default React.memo(React.forwardRef(AspectRatio));\n"]}