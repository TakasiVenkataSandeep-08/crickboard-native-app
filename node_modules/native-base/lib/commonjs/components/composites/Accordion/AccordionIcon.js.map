{"version":3,"sources":["AccordionIcon.tsx"],"names":["AccordionIcon","props","isOpen","React","useContext","AccordionItemContext","newProps","memo"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;AAEA,MAAMA,aAAa,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAuC;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAyCC,eAAMC,UAAN,CAC7CC,6BAD6C,CAA/C;;AAGA,QAAM,EAAE,GAAGC;AAAL,MAAkB,0BAAc,eAAd,EAA+BL,KAA/B,CAAxB;AACA,sBACE,6BAAC,aAAD;AACE,IAAA,IAAI,EAAEC,MAAM,GAAG,kBAAH,GAAwB,oBADtC;AAEE,IAAA,IAAI,EAAC;AAFP,KAGMI,QAHN,EADF;AAOD,CAZD;;4BAceH,eAAMI,IAAN,CAAWP,aAAX,C","sourcesContent":["import React from 'react';\nimport Icon from '../../primitives/Icon';\nimport type { IAccordionIconProps, IAccordionItemContextProps } from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\n\nconst AccordionIcon = ({ ...props }: IAccordionIconProps) => {\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { ...newProps } = useThemeProps('AccordionIcon', props);\n  return (\n    <Icon\n      name={isOpen ? 'chevron-small-up' : 'chevron-small-down'}\n      type=\"Entypo\"\n      {...newProps}\n    />\n  );\n};\n\nexport default React.memo(AccordionIcon);\n"]}