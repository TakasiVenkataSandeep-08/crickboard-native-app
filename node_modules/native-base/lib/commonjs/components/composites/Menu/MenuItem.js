"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuItem = void 0;

var _react = _interopRequireDefault(require("react"));

var _Text = _interopRequireDefault(require("../../primitives/Text"));

var _hooks = require("../../../hooks");

var _TouchableItem = _interopRequireDefault(require("../../primitives/TouchableItem"));

var _core = require("../../../core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const MenuItem = /*#__PURE__*/_react.default.memo(({
  children,
  onPress,
  style,
  ...props
}) => {
  const {
    parentComponentConfig: {
      closeMenu,
      closeOnSelect
    }
  } = (0, _core.usePopover)();
  const newProps = (0, _hooks.useThemeProps)('MenuItem', props);
  let allProps = { ...newProps,
    ...(newProps.isDisabled ? newProps._disabled : {})
  };
  const {
    _text,
    ...touchProps
  } = allProps;
  return /*#__PURE__*/_react.default.createElement(_TouchableItem.default, _extends({}, touchProps, {
    style: style,
    onPress: e => {
      if (!props.isDisabled) {
        onPress && onPress(e);

        if (closeOnSelect) {
          closeMenu && closeMenu();
        }
      }
    }
  }), /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, _react.default.Children.map(children, (child, index) => {
    if (typeof child === 'string') {
      return /*#__PURE__*/_react.default.createElement(_Text.default, _extends({}, _text, {
        key: "menu-item-".concat(index)
      }), child);
    } else {
      return child;
    }
  })));
});

exports.MenuItem = MenuItem;
//# sourceMappingURL=MenuItem.js.map