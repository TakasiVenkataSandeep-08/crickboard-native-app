{"version":3,"sources":["PopoverContent.tsx"],"names":["StyledPopover","Tooltip","color","space","layout","flexbox","border","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","PopoverContent","children","props","PopoverRef","PopoverTrigger","onOpen","initialFocusRef","onClose","finalFocusRef","closeOnBlur","newProps","backgroundColor","borderColor","borderWidth","React","useContext","PopoverContext","popoverContentProps","_width","size","current","focus","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AASA;;AACA;;AAEA;;;;;;AAEA,MAAMA,aAAa,GAAG,qBAAOC,gBAAP,EACpBC,mBADoB,EAEpBC,mBAFoB,EAGpBC,oBAHoB,EAIpBC,qBAJoB,EAKpBC,oBALoB,EAMpBC,sBANoB,EAOpBC,2BAPoB,EAQpBC,yBARoB,EASpBC,6BAToB,EAUpBC,0BAVoB,EAWpBC,yBAXoB,EAYpBC,wBAZoB,EAapBC,yBAboB,CAAtB;;AAeA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,QADsB;AAEtB,KAAGC;AAFmB,CAAD,KAGc;AACnC,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,eATI;AAUJC,IAAAA,WAVI;AAWJC,IAAAA;AAXI,MAYGC,eAAMC,UAAN,CAAiBC,uBAAjB,CAZT;;AAaA,sBACE,6BAAC,aAAD,eACMN,QAAQ,CAACO,mBADf;AAEE,IAAA,KAAK,EAAEP,QAAQ,CAACQ,MAAT,IAAmBR,QAAQ,CAACS,IAA5B,IAAoC,KAF7C;AAGE,IAAA,eAAe,EAAER,eAHnB;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,GAAG,EAAEV,UANP;AAOE,IAAA,MAAM,EAAE,MAAM;AACZE,MAAAA,MAAM,IAAIA,MAAM,EAAhB;AACAC,MAAAA,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEc,OAAjB,CAAyBC,KAAzB;AACD,KAVH;AAWE,IAAA,OAAO,EAAE,MAAM;AACbd,MAAAA,OAAO,IAAIA,OAAO,EAAlB;AACAC,MAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEY,OAAf,CAAuBC,KAAvB;AACD,KAdH;AAeE,IAAA,WAAW,EAAEZ,WAAF,aAAEA,WAAF,cAAEA,WAAF,GAAiB,IAf9B;AAgBE,IAAA,OAAO,eACL,6BAAC,YAAD;AAAK,MAAA,KAAK,EAAC;AAAX,oBACE,6BAAC,YAAD,QAAMR,QAAN,CADF;AAjBJ,KAqBMC,KArBN,GAuBGE,cAvBH,CADF;AA2BD,CA5CD;;4BA8CeU,eAAMQ,IAAN,CAAWtB,cAAX,C","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, position, space } from 'styled-system';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n} from '../../../utils/customProps';\nimport { default as Box } from '../../primitives/Box';\nimport Tooltip from './Tooltip';\nimport type { IPopoverProps } from './types';\nimport { PopoverContext } from './popover';\n\nconst StyledPopover = styled(Tooltip)<IPopoverProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\nconst PopoverContent = ({\n  children,\n  ...props\n}: IPopoverProps & { ref?: any }) => {\n  const {\n    PopoverRef,\n    PopoverTrigger,\n    onOpen,\n    initialFocusRef,\n    onClose,\n    finalFocusRef,\n    closeOnBlur,\n    newProps,\n    backgroundColor,\n    borderColor,\n    borderWidth,\n  }: any = React.useContext(PopoverContext);\n  return (\n    <StyledPopover\n      {...newProps.popoverContentProps}\n      width={newProps._width || newProps.size || '45%'}\n      backgroundColor={backgroundColor}\n      borderColor={borderColor}\n      borderWidth={borderWidth}\n      ref={PopoverRef}\n      onOpen={() => {\n        onOpen && onOpen();\n        initialFocusRef?.current.focus();\n      }}\n      onClose={() => {\n        onClose && onClose();\n        finalFocusRef?.current.focus();\n      }}\n      closeOnBlur={closeOnBlur ?? true}\n      popover={\n        <Box width=\"100%\">\n          <Box>{children}</Box>\n        </Box>\n      }\n      {...props}\n    >\n      {PopoverTrigger}\n    </StyledPopover>\n  );\n};\n\nexport default React.memo(PopoverContent);\n"]}