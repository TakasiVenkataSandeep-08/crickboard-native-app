"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PopoverContext = void 0;

var _react = _interopRequireDefault(require("react"));

var _hooks = require("../../../hooks");

var _View = _interopRequireDefault(require("../../primitives/View"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const PopoverContext = /*#__PURE__*/_react.default.createContext({
  PopoverTrigger: null,
  setPopoverTrigger: _child => {},
  PopoverRef: null,
  backgroundColor: '',
  borderColor: '',
  borderWidth: null,
  initialFocusRef: null,
  finalFocusRef: null,
  isVisible: false,
  setIsVisible: _bool => {},
  onOpen: () => {},
  onClose: () => {},
  closeOnBlur: true,
  newProps: {
    popoverCloseButtonProps: {},
    popoverFooterProps: {},
    popoverBodyProps: {},
    popoverContentProps: {},
    popoverHeaderProps: {}
  }
});

exports.PopoverContext = PopoverContext;

const Popover = ({
  children,
  initialFocusRef,
  finalFocusRef,
  onOpen,
  onClose,
  closeOnBlur,
  id,
  backgroundColor,
  bg,
  borderWidth,
  borderColor,
  ...props
}) => {
  const [trigger, setTrigger] = _react.default.useState();

  const [isVisible, setIsVisible] = _react.default.useState(false);

  const popOverRef = _react.default.useRef(null);

  const newProps = (0, _hooks.useThemeProps)('Popover', props);
  const value = {
    PopoverTrigger: trigger,
    setPopoverTrigger: setTrigger,
    PopoverRef: popOverRef,
    initialFocusRef: initialFocusRef,
    finalFocusRef: finalFocusRef,
    isVisible: isVisible,
    setIsVisible: setIsVisible,
    onOpen: onOpen,
    onClose: onClose,
    newProps: newProps,
    closeOnBlur: closeOnBlur,
    backgroundColor: bg || backgroundColor || { ...newProps.popoverProps
    }.backgroundColor,
    borderColor: borderColor || { ...newProps.popoverProps
    }.borderColor,
    borderWidth: borderWidth || { ...newProps.popoverProps
    }.borderWidth
  };
  return /*#__PURE__*/_react.default.createElement(PopoverContext.Provider, {
    value: value
  }, /*#__PURE__*/_react.default.createElement(_View.default, {
    nativeID: id
  }, children));
};

var _default = /*#__PURE__*/_react.default.memo(Popover);

exports.default = _default;
//# sourceMappingURL=popover.js.map