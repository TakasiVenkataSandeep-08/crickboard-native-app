"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _native = _interopRequireDefault(require("styled-components/native"));

var _styledSystem = require("styled-system");

var _customProps = require("../../../utils/customProps");

var _Box = _interopRequireDefault(require("../../primitives/Box"));

var _Tooltip = _interopRequireDefault(require("./Tooltip"));

var _popover = require("./popover");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const StyledPopover = (0, _native.default)(_Tooltip.default)(_styledSystem.color, _styledSystem.space, _styledSystem.layout, _styledSystem.flexbox, _styledSystem.border, _styledSystem.position, _customProps.customPosition, _customProps.customBorder, _customProps.customBackground, _customProps.customOutline, _customProps.customShadow, _customProps.customExtra, _customProps.customLayout);

const PopoverContent = ({
  children,
  ...props
}) => {
  const {
    PopoverRef,
    PopoverTrigger,
    onOpen,
    initialFocusRef,
    onClose,
    finalFocusRef,
    closeOnBlur,
    newProps,
    backgroundColor,
    borderColor,
    borderWidth
  } = _react.default.useContext(_popover.PopoverContext);

  return /*#__PURE__*/_react.default.createElement(StyledPopover, _extends({}, newProps.popoverContentProps, {
    width: newProps._width || newProps.size || '45%',
    backgroundColor: backgroundColor,
    borderColor: borderColor,
    borderWidth: borderWidth,
    ref: PopoverRef,
    onOpen: () => {
      onOpen && onOpen();
      initialFocusRef === null || initialFocusRef === void 0 ? void 0 : initialFocusRef.current.focus();
    },
    onClose: () => {
      onClose && onClose();
      finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current.focus();
    },
    closeOnBlur: closeOnBlur !== null && closeOnBlur !== void 0 ? closeOnBlur : true,
    popover: /*#__PURE__*/_react.default.createElement(_Box.default, {
      width: "100%"
    }, /*#__PURE__*/_react.default.createElement(_Box.default, null, children))
  }, props), PopoverTrigger);
};

var _default = /*#__PURE__*/_react.default.memo(PopoverContent);

exports.default = _default;
//# sourceMappingURL=PopoverContent.js.map