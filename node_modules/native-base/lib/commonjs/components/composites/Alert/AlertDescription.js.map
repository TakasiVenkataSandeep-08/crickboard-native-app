{"version":3,"sources":["AlertDescription.tsx"],"names":["AlertDescription","children","_text","props","newProps","textColor","React","useContext","AlertContext","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAEA,MAAMA,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,QADwB;AAExBC,EAAAA,KAFwB;AAGxB,KAAGC;AAHqB,CAAD,KAII;AAC3B,QAAMC,QAAQ,GAAG,0BAAc,kBAAd,EAAkCD,KAAlC,CAAjB;;AACA,QAAM;AAAEE,IAAAA;AAAF,MAA+BC,eAAMC,UAAN,CAAiBC,qBAAjB,CAArC;;AACA,sBACE,6BAAC,gBAAD;AAAM,IAAA,KAAK,EAAEH;AAAb,KAA4BD,QAA5B,EAA0CF,KAA1C,GACGD,QADH,CADF;AAKD,CAZD;;4BAaeK,eAAMG,IAAN,CAAWT,gBAAX,C","sourcesContent":["import React from 'react';\nimport { Text } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { IAlertContext } from './index';\nimport { AlertContext } from './Context';\n\nconst AlertDescription = ({\n  children,\n  _text,\n  ...props\n}: { _text?: any } & any) => {\n  const newProps = useThemeProps('AlertDescription', props);\n  const { textColor }: IAlertContext = React.useContext(AlertContext);\n  return (\n    <Text color={textColor} {...newProps} {..._text}>\n      {children}\n    </Text>\n  );\n};\nexport default React.memo(AlertDescription);\n"]}