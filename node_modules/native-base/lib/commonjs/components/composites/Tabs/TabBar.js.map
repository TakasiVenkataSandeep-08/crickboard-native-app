{"version":3,"sources":["TabBar.tsx"],"names":["TabBar","children","props","tabBarStyle","align","isFitted","React","useContext","TabsContext","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAGA,MAAMA,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA0C;AACvD,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAAsDC,eAAMC,UAAN,CAC1DC,oBAD0D,CAA5D;;AAGA,sBACE,6BAAC,YAAD;AACE,IAAA,aAAa,EAAC,KADhB;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,cAAc,EAAEH,QAAQ,GAAG,eAAH,GAAqBD;AAH/C,KAIMD,WAJN,EAKMD,KALN,GAOG,iCAAmBD,QAAnB,CAPH,CADF;AAWD,CAfD;;4BAiBeK,eAAMG,IAAN,CAAWT,MAAX,C","sourcesContent":["import React from 'react';\nimport getIndexedChildren from '../../../utils/getIndexedChildren';\nimport Box from '../../primitives/Box';\nimport { TabsContext } from './Context';\nimport type { ITabsContextProps, ITabBarProps } from './types';\n\nconst TabBar = ({ children, ...props }: ITabBarProps) => {\n  const { tabBarStyle, align, isFitted }: ITabsContextProps = React.useContext(\n    TabsContext\n  );\n  return (\n    <Box\n      flexDirection=\"row\"\n      width=\"100%\"\n      justifyContent={isFitted ? 'space-between' : align}\n      {...tabBarStyle}\n      {...props}\n    >\n      {getIndexedChildren(children)}\n    </Box>\n  );\n};\n\nexport default React.memo(TabBar);\n"]}