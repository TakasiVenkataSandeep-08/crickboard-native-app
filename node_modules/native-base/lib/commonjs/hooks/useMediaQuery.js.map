{"version":3,"sources":["useMediaQuery.ts"],"names":["useMediaQuery","query","dims","height","width","iterateQuery","key","val","queryResults","Array","isArray","forEach","subQuery","Object","keys","values","push","calculateQuery","retval","undefined"],"mappings":";;;;;;;AAAA;;AACA;;;;AAcO,SAASA,aAAT,CAAuBC,KAAvB,EAAgD;AACrD,MAAIC,IAAI,GAAG,uCAAX;AACA,QAAMC,MAAM,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEC,MAArB;AACA,QAAMC,KAAK,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAApB;AACA,SAAOC,YAAY,CAACJ,KAAD,EAAQE,MAAR,EAAgBC,KAAhB,CAAnB;AACD;;AAED,SAASC,YAAT,CACEJ,KADF,EAEEE,MAFF,EAGEC,KAHF,EAIE;AACA,MAAIE,GAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,YAAY,GAAG,EAAnB;;AACA,MAAIC,KAAK,CAACC,OAAN,CAAcT,KAAd,CAAJ,EAA0B;AACxBA,IAAAA,KAAK,CAACU,OAAN,CAAeC,QAAD,IAAwB;AACpCN,MAAAA,GAAG,GAAGO,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsB,CAAtB,CAAN;AACAL,MAAAA,GAAG,GAAGM,MAAM,CAACE,MAAP,CAAcH,QAAd,EAAwB,CAAxB,CAAN;AACAJ,MAAAA,YAAY,CAACQ,IAAb,CAAkBC,cAAc,CAACX,GAAD,EAAMC,GAAN,EAAWJ,MAAX,EAAmBC,KAAnB,CAAhC;AACD,KAJD;AAKD,GAND,MAMO;AACLE,IAAAA,GAAG,GAAGO,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmB,CAAnB,CAAN;AACAM,IAAAA,GAAG,GAAGM,MAAM,CAACE,MAAP,CAAcd,KAAd,EAAqB,CAArB,CAAN;AACAO,IAAAA,YAAY,CAACQ,IAAb,CAAkBC,cAAc,CAACX,GAAD,EAAMC,GAAN,EAAWJ,MAAX,EAAmBC,KAAnB,CAAhC;AACD;;AACD,SAAOI,YAAP;AACD;;AAED,SAASS,cAAT,CACEX,GADF,EAEEC,GAFF,EAGEJ,MAHF,EAIEC,KAJF,EAKE;AACA,MAAIc,MAAJ;;AACA,MAAI,oBAAMd,KAAN,KAAgB,oBAAMD,MAAN,CAAhB,IAAiC,oBAAMI,GAAN,CAArC,EAAiD;AAC/C;AACD;;AACD,UAAQD,GAAR;AACE,SAAK,UAAL;AACEY,MAAAA,MAAM,GAAG,CAAC,oBAAMX,GAAN,CAAD,GAAcH,KAAK,IAAIG,GAAvB,GAA6BY,SAAtC;AACA;;AACF,SAAK,UAAL;AACED,MAAAA,MAAM,GAAG,CAAC,oBAAMX,GAAN,CAAD,GAAcH,KAAK,IAAIG,GAAvB,GAA6BY,SAAtC;AACA;;AACF,SAAK,WAAL;AACED,MAAAA,MAAM,GAAG,CAAC,oBAAMX,GAAN,CAAD,GAAcJ,MAAM,IAAII,GAAxB,GAA8BY,SAAvC;AACA;;AACF,SAAK,WAAL;AACED,MAAAA,MAAM,GAAG,CAAC,oBAAMX,GAAN,CAAD,GAAcJ,MAAM,IAAII,GAAxB,GAA8BY,SAAvC;AACA;;AACF,SAAK,aAAL;AACE,UAAI,CAAC,oBAAMZ,GAAN,CAAL,EAAiB;AACf,YAAIH,KAAK,GAAGD,MAAZ,EAAoB;AAClBe,UAAAA,MAAM,GAAGX,GAAG,KAAK,WAAjB;AACD,SAFD,MAEO;AACLW,UAAAA,MAAM,GAAGX,GAAG,KAAK,UAAjB;AACD;AACF;;AACD;;AACF;AACE;AAvBJ;;AAyBA,SAAOW,MAAP;AACD","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport isNil from 'lodash/isNil';\n\ntype QueryKeys =\n  | 'maxWidth'\n  | 'minWidth'\n  | 'maxHeight'\n  | 'minHeight'\n  | 'orientation';\n\ntype SubQuery = {\n  [queryKey in QueryKeys]?: number | string;\n};\ntype Query = Array<SubQuery>;\n\nexport function useMediaQuery(query: SubQuery | Query) {\n  let dims = useWindowDimensions();\n  const height = dims?.height;\n  const width = dims?.width;\n  return iterateQuery(query, height, width);\n}\n\nfunction iterateQuery(\n  query: SubQuery | Query,\n  height?: number,\n  width?: number\n) {\n  let key;\n  let val;\n  let queryResults = [];\n  if (Array.isArray(query)) {\n    query.forEach((subQuery: SubQuery) => {\n      key = Object.keys(subQuery)[0];\n      val = Object.values(subQuery)[0];\n      queryResults.push(calculateQuery(key, val, height, width));\n    });\n  } else {\n    key = Object.keys(query)[0];\n    val = Object.values(query)[0];\n    queryResults.push(calculateQuery(key, val, height, width));\n  }\n  return queryResults;\n}\n\nfunction calculateQuery(\n  key: string,\n  val?: number | string,\n  height?: number,\n  width?: number\n) {\n  let retval;\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return retval;\n}\n"]}