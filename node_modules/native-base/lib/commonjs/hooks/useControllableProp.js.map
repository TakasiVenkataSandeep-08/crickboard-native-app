{"version":3,"sources":["useControllableProp.ts"],"names":["useControllableProp","prop","state","current","isControlled","React","useRef","undefined","value"],"mappings":";;;;;;;AAAA;;;;AAEO,SAASA,mBAAT,CAAgCC,IAAhC,EAAqDC,KAArD,EAA+D;AACpE,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAA4BC,eAAMC,MAAN,CAAaL,IAAI,KAAKM,SAAtB,CAAlC;;AACA,QAAMC,KAAK,GAAGJ,YAAY,IAAI,OAAOH,IAAP,KAAgB,WAAhC,GAA8CA,IAA9C,GAAqDC,KAAnE;AACA,SAAO,CAACE,YAAD,EAAeI,KAAf,CAAP;AACD","sourcesContent":["import React from 'react';\n\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const { current: isControlled } = React.useRef(prop !== undefined);\n  const value = isControlled && typeof prop !== 'undefined' ? prop : state;\n  return [isControlled, value] as const;\n}\n"]}