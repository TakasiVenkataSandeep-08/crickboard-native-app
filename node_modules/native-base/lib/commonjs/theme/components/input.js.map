{"version":3,"sources":["input.ts"],"names":["baseStyle","props","isInvalid","colors","theme","w","p","Platform","OS","color","placeholderTextColor","gray","black","_isDisabledProps","opacity","borderColor","hoverBorderColor","focusBorderColor","errorBorderColor","roundedStyle","borderRadius","borderWidth","defaultStyle","filledStyle","bg","unstyledStyle","underlinedStyle","borderBottomWidth","variants","outline","underlined","rounded","filled","unstyled","default","sizes","fontSize","defaultProps","size","variant"],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\nimport { mode } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  const { isInvalid } = props;\n  const { colors } = props.theme;\n  return {\n    w: '100%',\n    p: Platform.OS === 'android' ? 2 : 3, // Android's input have default padding.\n    color: mode('black', 'white')(props),\n    placeholderTextColor: mode(colors.gray[600], colors.black)(props),\n    _isDisabledProps: {\n      opacity: 0.4,\n    },\n    borderColor: isInvalid\n      ? mode('danger.600', 'danger.200')(props)\n      : mode('gray.600', 'gray.400')(props),\n    hoverBorderColor: 'default.500',\n    focusBorderColor: mode('default.600', 'default.400')(props),\n    errorBorderColor: mode('danger.600', 'danger.200')(props),\n  };\n};\n\nfunction roundedStyle() {\n  return {\n    borderRadius: '50',\n    borderWidth: 1,\n  };\n}\nfunction defaultStyle() {\n  return {\n    borderWidth: 1,\n  };\n}\nfunction filledStyle(props: Record<string, any>) {\n  const { isInvalid } = props;\n  return {\n    bg: props.bg || mode('gray.200', 'gray.600')(props),\n    borderWidth: 1,\n    borderColor: isInvalid\n      ? mode('danger.600', 'danger.200')(props)\n      : 'transparent',\n  };\n}\nfunction unstyledStyle() {\n  return {\n    borderWidth: 0,\n  };\n}\nfunction underlinedStyle() {\n  return {\n    borderRadius: 0,\n    borderWidth: 0,\n    borderBottomWidth: 1,\n  };\n}\n\nconst variants = {\n  outline: defaultStyle,\n  underlined: underlinedStyle,\n  rounded: roundedStyle,\n  filled: filledStyle,\n  unstyled: unstyledStyle,\n  default: defaultStyle,\n};\n\nconst sizes = {\n  '2xl': { fontSize: '2xl' },\n  'xl': { fontSize: 'xl' },\n  'lg': { fontSize: 'lg' },\n  'md': { fontSize: 'md' },\n  'sm': { fontSize: 'sm' },\n  'xs': { fontSize: 'xs' },\n};\n\nconst defaultProps = {\n  size: 'md',\n  variant: 'default',\n  borderRadius: 'md',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps,\n};\n"]}