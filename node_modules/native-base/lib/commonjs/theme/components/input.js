"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _tools = require("../tools");

const baseStyle = props => {
  const {
    isInvalid
  } = props;
  const {
    colors
  } = props.theme;
  return {
    w: '100%',
    p: _reactNative.Platform.OS === 'android' ? 2 : 3,
    // Android's input have default padding.
    color: (0, _tools.mode)('black', 'white')(props),
    placeholderTextColor: (0, _tools.mode)(colors.gray[600], colors.black)(props),
    _isDisabledProps: {
      opacity: 0.4
    },
    borderColor: isInvalid ? (0, _tools.mode)('danger.600', 'danger.200')(props) : (0, _tools.mode)('gray.600', 'gray.400')(props),
    hoverBorderColor: 'default.500',
    focusBorderColor: (0, _tools.mode)('default.600', 'default.400')(props),
    errorBorderColor: (0, _tools.mode)('danger.600', 'danger.200')(props)
  };
};

function roundedStyle() {
  return {
    borderRadius: '50',
    borderWidth: 1
  };
}

function defaultStyle() {
  return {
    borderWidth: 1
  };
}

function filledStyle(props) {
  const {
    isInvalid
  } = props;
  return {
    bg: props.bg || (0, _tools.mode)('gray.200', 'gray.600')(props),
    borderWidth: 1,
    borderColor: isInvalid ? (0, _tools.mode)('danger.600', 'danger.200')(props) : 'transparent'
  };
}

function unstyledStyle() {
  return {
    borderWidth: 0
  };
}

function underlinedStyle() {
  return {
    borderRadius: 0,
    borderWidth: 0,
    borderBottomWidth: 1
  };
}

const variants = {
  outline: defaultStyle,
  underlined: underlinedStyle,
  rounded: roundedStyle,
  filled: filledStyle,
  unstyled: unstyledStyle,
  default: defaultStyle
};
const sizes = {
  '2xl': {
    fontSize: '2xl'
  },
  'xl': {
    fontSize: 'xl'
  },
  'lg': {
    fontSize: 'lg'
  },
  'md': {
    fontSize: 'md'
  },
  'sm': {
    fontSize: 'sm'
  },
  'xs': {
    fontSize: 'xs'
  }
};
const defaultProps = {
  size: 'md',
  variant: 'default',
  borderRadius: 'md'
};
var _default = {
  baseStyle,
  variants,
  sizes,
  defaultProps
};
exports.default = _default;
//# sourceMappingURL=input.js.map