{"version":3,"sources":["utils.ts"],"names":["omitUndefined","obj","isNil","getRandomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","orderedPick","values","ret","Object","keys","forEach","key","includes","orderedExtractInObject","parent","extractInObject","getColorFormColorScheme","props","theme","colorScheme","isDisabled","simpleColorScheme","split","colors","getColorScheme","customColorScheme","breakpoints","freeze","inValidBreakpointProps","hasValidBreakpointFormat","breaks","property","indexOf","Array","isArray","findLastValidBreakpoint","currentBreakpoint","valArray","map","bPoint","slice","filter","v","pop","getClosestBreakpoint","point","dimValues","index"],"mappings":"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","sourcesContent":["import omitBy from 'lodash/omitBy';\nimport isNil from 'lodash/isNil';\nimport pick from 'lodash/pick';\nimport omit from 'lodash/omit';\n\nexport type Dict = Record<string, any>;\n\nexport function omitUndefined(obj: any) {\n  return omitBy(obj, isNil);\n}\nexport function getRandomString(length: number) {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n// Inefficient way for pick, but retains order of props.\nfunction orderedPick(obj: any, values: any) {\n  let ret: any = {};\n  Object.keys(obj).forEach((key: string) => {\n    if (values.includes(key)) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\n\nexport function orderedExtractInObject(parent: any, values: Array<string>) {\n  return [\n    omitUndefined(orderedPick(parent, values)),\n    omitUndefined(omit(parent, values)),\n  ];\n}\nexport function extractInObject(parent: any, values: Array<string>) {\n  return [\n    omitUndefined(pick(parent, values)),\n    omitUndefined(omit(parent, values)),\n  ];\n}\n\nexport function getColorFormColorScheme(props: Record<string, any>) {\n  const { theme, colorScheme, isDisabled } = props;\n  const simpleColorScheme = colorScheme.split('.')[0];\n\n  if (isDisabled) return 'gray.300';\n  else if (simpleColorScheme in theme.colors) {\n    return theme.colors[simpleColorScheme][0] === '#'\n      ? simpleColorScheme\n      : theme.colors[simpleColorScheme][400] ||\n          theme.colors[simpleColorScheme][200];\n  } else return 'default.200';\n}\nexport function getColorScheme(\n  props: Record<string, any>,\n  customColorScheme?: string\n) {\n  let { theme, colorScheme } = props;\n  colorScheme = customColorScheme || colorScheme;\n  if (!(colorScheme in theme.colors)) return 'default';\n  else {\n    if (typeof theme.colors[colorScheme] === 'object') return colorScheme;\n  }\n}\n\nexport const breakpoints = Object.freeze(['base', 'sm', 'md', 'lg', 'xl']);\nexport const inValidBreakpointProps = ['style', 'children', 'shadowOffset'];\n\nexport function hasValidBreakpointFormat(breaks: any, property?: string) {\n  if (property && inValidBreakpointProps.indexOf(property) !== -1) {\n    return false;\n  } else if (Array.isArray(breaks)) {\n    return breaks.length ? true : false;\n  } else if (typeof breaks === 'object') {\n    const keys = Object.keys(breaks);\n    for (let i = 0; i < keys.length; i++) {\n      if (breakpoints.indexOf(keys[i]) === -1) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function findLastValidBreakpoint(\n  values: any,\n  currentBreakpoint: number\n) {\n  let valArray = Array.isArray(values)\n    ? values\n    : breakpoints.map((bPoint: string) => values[bPoint]);\n  return (\n    valArray[currentBreakpoint] ??\n    valArray\n      .slice(0, currentBreakpoint + 1)\n      .filter((v: any) => v ?? null)\n      .pop()\n  );\n}\n\nexport function getClosestBreakpoint(\n  values: Record<string, any>,\n  point: number\n) {\n  let dimValues = Object.values(values);\n  let index = -1;\n  for (let i = 0; i < dimValues.length; i++) {\n    if (dimValues[i] === point) {\n      index = i;\n      break;\n    } else if (dimValues[i] > point && i !== 0) {\n      index = i - 1;\n      break;\n    }\n  }\n  return index;\n}\n"]}