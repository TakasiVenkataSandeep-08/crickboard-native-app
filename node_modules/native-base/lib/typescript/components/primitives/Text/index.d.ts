import React from 'react';
import type { ITextProps } from './types';
declare const _default: React.MemoExoticComponent<React.ForwardRefExoticComponent<import("styled-system").ColorProps<Required<import("styled-system").Theme<React.ReactText>>, string | number | symbol> & import("styled-system").SpaceProps<Required<import("styled-system").Theme<React.ReactText>>, string | number | symbol> & import("styled-system").PositionProps<Required<import("styled-system").Theme<React.ReactText>>> & import("styled-system").PositionProps<Required<import("styled-system").Theme<React.ReactText>>> & import("styled-system").TypographyProps<Required<import("styled-system").Theme<React.ReactText>>> & import("../../../utils/customProps").customPositionProps & import("../../../utils/customProps").customBorderProps & import("../../../utils/customProps").customExtraProps & import("../../../utils/customProps").customOutlineProps & import("../../../utils/customProps").customShadowProps & import("../../../utils/customProps").customLayoutProps & import("../../../utils/customProps").customBackgroundProps & import("../../../utils/customProps").customTypographyProps & {
    children?: React.ReactNode;
    fontSize?: string | number | string[] | number[] | Record<string, string> | undefined;
    noOfLines?: number | undefined;
    style?: any;
    bold?: boolean | undefined;
    isTruncated?: boolean | undefined;
    italic?: boolean | undefined;
    underline?: boolean | undefined;
    strikeThrough?: boolean | undefined;
    sub?: boolean | undefined;
    highlight?: boolean | undefined;
} & React.RefAttributes<unknown>>>;
export default _default;
export type { ITextProps };
