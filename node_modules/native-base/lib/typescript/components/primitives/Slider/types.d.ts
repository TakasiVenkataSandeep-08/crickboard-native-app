/// <reference types="react" />
import type { IBoxProps } from '../Box';
export declare type ISliderProps = IBoxProps & {
    value?: number;
    defaultValue?: number;
    min?: number;
    max?: number;
    step?: number;
    onChange?: (value: number) => void;
    onChangeEnd?: (value: number) => void;
    isReadOnly?: boolean;
    trackColor?: string;
    orientation?: 'vertical' | 'horizontal';
    size?: 'sm' | 'md' | 'lg';
    colorScheme?: string;
    name?: string;
    id?: string;
    children?: React.ReactNode;
    isDisabled?: boolean;
    isReversed?: boolean;
    accessibilityIncrementSteps?: number;
    accessibilityDecrementSteps?: number;
    style?: any;
};
export declare type ISliderContextProps = {
    trackColor?: string;
    sliderOffset?: number;
    colorScheme?: string;
    activeColor?: string;
    barSize?: number;
    sliderSize?: number;
    thumbSize?: number;
    panResponder?: any;
    isReversed?: boolean;
    isDisabled?: boolean;
    orientation?: 'vertical' | 'horizontal';
};
export declare type ISliderComponentType = ((props: ISliderProps) => JSX.Element) & {
    Thumb: React.MemoExoticComponent<(props: IBoxProps) => JSX.Element>;
    Track: React.MemoExoticComponent<(props: IBoxProps) => JSX.Element>;
    FilledTrack: React.MemoExoticComponent<(props: IBoxProps) => JSX.Element>;
};
