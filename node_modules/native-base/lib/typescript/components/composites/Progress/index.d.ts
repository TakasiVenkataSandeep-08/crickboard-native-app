import React from 'react';
import type { ViewStyle } from 'react-native';
import { IBoxProps } from '../../primitives';
declare type SpaceType = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';
export declare type IProgressProps = IBoxProps & {
    style?: ViewStyle;
    children?: JSX.Element | JSX.Element[] | string;
    value?: number;
    size?: SpaceType | string;
    colorScheme?: string;
    isIndeterminate?: any;
};
declare const _default: React.MemoExoticComponent<React.ForwardRefExoticComponent<import("react-native").ViewProps & import("styled-system").ColorProps<Required<import("styled-system").Theme<React.ReactText>>, string | number | symbol> & import("styled-system").SpaceProps<Required<import("styled-system").Theme<React.ReactText>>, string | number | symbol> & import("styled-system").LayoutProps<Required<import("styled-system").Theme<React.ReactText>>> & import("styled-system").FlexboxProps<Required<import("styled-system").Theme<React.ReactText>>> & import("styled-system").TypographyProps<Required<import("styled-system").Theme<React.ReactText>>> & import("styled-system").PositionProps<Required<import("styled-system").Theme<React.ReactText>>> & import("../../../utils/customProps").customBorderProps & import("../../../utils/customProps").customPositionProps & import("../../../utils/customProps").customExtraProps & import("../../../utils/customProps").customOutlineProps & import("../../../utils/customProps").customShadowProps & import("../../../utils/customProps").customLayoutProps & import("../../../utils/customProps").customTypographyProps & import("../../../utils/customProps").customBackgroundProps & import("../../../utils/customProps").customTransformProps & import("../../../utils/customProps").customFlexboxProps & import("styled-system").BorderProps<Required<import("styled-system").Theme<React.ReactText>>, import("csstype").Property.Margin<React.ReactText>> & {
    style?: ViewStyle | undefined;
    children?: any;
    shadow?: number | undefined;
    _text?: import("../../primitives").ITextProps | undefined;
} & {
    style?: ViewStyle | undefined;
    children?: string | JSX.Element | JSX.Element[] | undefined;
    value?: number | undefined;
    size?: string | undefined;
    colorScheme?: string | undefined;
    isIndeterminate?: any;
} & React.RefAttributes<unknown>>>;
export default _default;
