import React from 'react';
declare const _default: React.MemoExoticComponent<({ children, ...props }: import("styled-system").ColorProps<Required<import("styled-system").Theme<React.ReactText>>, string | number | symbol> & import("styled-system").SpaceProps<Required<import("styled-system").Theme<React.ReactText>>, string | number | symbol> & import("styled-system").LayoutProps<Required<import("styled-system").Theme<React.ReactText>>> & import("styled-system").FlexboxProps<Required<import("styled-system").Theme<React.ReactText>>> & import("../../../utils/customProps").customBorderProps & import("../../../utils/customProps").customExtraProps & import("../../../utils/customProps").customOutlineProps & import("../../../utils/customProps").customShadowProps & import("../../../utils/customProps").customLayoutProps & import("../../../utils/customProps").customBackgroundProps & import("./Tooltip").Props & import("styled-system").BorderProps<Required<import("styled-system").Theme<React.ReactText>>, import("csstype").Property.Margin<React.ReactText>> & {
    style?: import("react-native").ViewStyle | undefined;
    initialFocusRef?: any;
    finalFocusRef?: any;
    children: JSX.Element | JSX.Element[];
    onOpen?: Function | undefined;
    onClose?: Function | undefined;
    closeOnBlur?: boolean | undefined;
    id?: any;
    size?: string | number | undefined;
} & {
    ref?: any;
}) => JSX.Element>;
export default _default;
