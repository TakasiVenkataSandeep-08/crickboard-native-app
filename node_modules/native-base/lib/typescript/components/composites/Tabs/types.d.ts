/// <reference types="react" />
import type { IBoxProps } from '../../primitives';
export declare type ITabsProps = IBoxProps & {
    align?: 'center' | 'end' | 'start';
    id?: string;
    colorScheme?: string;
    index?: number;
    defaultIndex?: number;
    isFitted?: boolean;
    isLazy?: boolean;
    isManual?: boolean;
    orientation?: 'horizontal' | 'vertical';
    size?: 'sm' | 'md' | 'lg';
    variant?: string;
    onChange?: (index?: number) => void;
};
export declare type ITabBarProps = IBoxProps & {
    align?: 'center' | 'end' | 'start';
    isFitted?: boolean;
    size?: 'sm' | 'md' | 'lg';
};
export declare type ITabProps = IBoxProps & {
    index?: number;
    isSelected?: boolean;
    isDisabled?: boolean;
    id?: string;
    panelId?: string;
    _active?: any;
    _disabled?: any;
    _hover?: any;
};
export declare type ITabViewsProps = IBoxProps;
export declare type ITabViewProps = IBoxProps & {
    index?: number;
};
export declare type ITabsContextProps = {
    activeIndex?: number;
    changeHandler?: (index?: number) => void;
    activeTabStyle?: any;
    inactiveTabStyle?: any;
    tabBarStyle?: any;
    isFitted?: boolean;
    align?: 'start' | 'center' | 'end';
};
export declare type ITabsComponentType = ((props: ITabsProps) => JSX.Element) & {
    Bar: React.MemoExoticComponent<(props: ITabBarProps) => JSX.Element>;
    Tab: React.MemoExoticComponent<(props: ITabProps) => JSX.Element>;
    Views: React.MemoExoticComponent<(props: ITabViewsProps) => JSX.Element>;
    View: React.MemoExoticComponent<(props: ITabViewProps) => JSX.Element>;
};
