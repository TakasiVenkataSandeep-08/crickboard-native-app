function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components/native';
import { usePropsWithComponentTheme } from '../hooks/useThemeProps/usePropsWithComponentTheme';
import { background, border, color, flexbox, layout, margin, padding, position, space, typography } from 'styled-system';
import { customBackground, customBorder, customExtra, customLayout, customOutline, customPosition, customShadow, customTypography } from '../utils/customProps';
export default function (Component, componentTheme) {
  return /*#__PURE__*/React.forwardRef(({
    children,
    ...props
  }, ref) => {
    const StyledComponent = styled(Component)(color, background, padding, margin, space, layout, flexbox, border, position, typography, customPosition, customBorder, customBackground, customOutline, customShadow, customExtra, customTypography, customLayout);
    const calculatedProps = usePropsWithComponentTheme(componentTheme, props);
    return /*#__PURE__*/React.createElement(StyledComponent, _extends({}, calculatedProps, {
      ref: ref
    }), children);
  });
}
//# sourceMappingURL=component.js.map