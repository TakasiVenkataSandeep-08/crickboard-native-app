{"version":3,"sources":["customPosition.ts"],"names":["system","config","pos","property","inset","properties","scale","insetX","insetY","customPosition"],"mappings":"AACA,SAAiBA,MAAjB,QAA+B,eAA/B;AAGA,MAAMC,MAAc,GAAG;AACrBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GADgB;AAIrBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,QAAhB,EAA0B,OAA1B,CADP;AAELC,IAAAA,KAAK,EAAE;AAFF,GAJc;AAQrBC,EAAAA,MAAM,EAAE;AACNF,IAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,OAAT,CADN;AAENC,IAAAA,KAAK,EAAE;AAFD,GARa;AAYrBE,EAAAA,MAAM,EAAE;AACNH,IAAAA,UAAU,EAAE,CAAC,KAAD,EAAQ,QAAR,CADN;AAENC,IAAAA,KAAK,EAAE;AAFD;AAZa,CAAvB;AAkBA;AACA;AACA;;AAoBA,OAAO,MAAMG,cAAc,GAAGT,MAAM,CAACC,MAAD,CAA7B","sourcesContent":["import type * as CSS from 'csstype';\nimport { Config, system } from 'styled-system';\nimport type { ResponsiveValue } from './responsiveValue';\n\nconst config: Config = {\n  pos: {\n    property: 'position',\n  },\n  inset: {\n    properties: ['left', 'top', 'bottom', 'right'],\n    scale: 'space',\n  },\n  insetX: {\n    properties: ['left', 'right'],\n    scale: 'space',\n  },\n  insetY: {\n    properties: ['top', 'bottom'],\n    scale: 'space',\n  },\n};\n\n/**\n * Types for position CSS properties\n */\nexport interface customPositionProps {\n  /**\n   * The CSS `left`, `right`, `top`, `bottom` property\n   */\n  inset?: ResponsiveValue<CSS.Property.Left<string | number>>;\n  /**\n   * The CSS `left`, and `right` property\n   */\n  insetX?: ResponsiveValue<CSS.Property.Left<string | number>>;\n  /**\n   * The CSS `top`, and `bottom` property\n   */\n  insetY?: ResponsiveValue<CSS.Property.Left<string | number>>;\n  /**\n   * The CSS `position` property\n   */\n  pos?: ResponsiveValue<CSS.Property.Position>;\n}\n\nexport const customPosition = system(config);\n"]}