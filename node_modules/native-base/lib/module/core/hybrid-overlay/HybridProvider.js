import React from 'react';
import { HybridContext } from './Context';
import OverlayWrapper from '../Overlay/Wrapper';
import PopoverWrapper from '../Popover/Wrapper';
import { useModeManager } from './../color-mode/hooks';

const HybridProvider = ({
  children,
  options: {
    initialColorMode = 'light'
  },
  colorModeManager
}) => {
  // Popover content
  const [popoverItem, setPopoverItem] = React.useState(null);
  const [popoverConfig, setPopoverConfig] = React.useState({
    triggerRef: null,
    placeOverTriggerElement: undefined,
    onClose: null,
    animationDuration: 200
  }); // Overlay content

  const [overlayItem, setOverlayItem] = React.useState(null);
  const [overlayConfig, setOverlayConfig] = React.useState({
    disableOverlay: undefined,
    position: 'center',
    backgroundColor: '#161616',
    animationDuration: 400,
    closeOnPress: false,
    onClose: _a => {}
  }); // Color-mode content

  const {
    colorMode,
    setColorMode
  } = useModeManager(initialColorMode, colorModeManager);
  const toggleColorMode = React.useCallback(() => {
    setColorMode(colorMode === 'light' ? 'dark' : 'light');
  }, [colorMode, setColorMode]);
  return /*#__PURE__*/React.createElement(HybridContext.Provider, {
    value: {
      popover: {
        setPopoverItem,
        defaultConfig: popoverConfig,
        setConfig: setPopoverConfig,
        parentComponentConfig: popoverConfig.parentComponentConfig
      },
      overlay: {
        setOverlayItem,
        defaultConfig: overlayConfig,
        setConfig: setOverlayConfig
      },
      colorMode: {
        colorMode,
        toggleColorMode,
        setColorMode
      }
    }
  }, children, /*#__PURE__*/React.createElement(OverlayWrapper, {
    overlayItem: overlayItem,
    overlayConfig: overlayConfig,
    setOverlayItem: setOverlayItem
  }), /*#__PURE__*/React.createElement(PopoverWrapper, {
    popoverItem: popoverItem,
    popoverConfig: popoverConfig,
    setPopoverItem: setPopoverItem
  }));
};

export default HybridProvider;
//# sourceMappingURL=HybridProvider.js.map