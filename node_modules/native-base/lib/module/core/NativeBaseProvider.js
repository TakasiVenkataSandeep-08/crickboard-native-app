import React from 'react';
import { ThemeConsumer, ThemeContext, ThemeProvider } from 'styled-components/native';
import { SafeAreaProvider, initialWindowMetrics as defaultInitialWindowMetrics } from 'react-native-safe-area-context';
import { theme as defaultTheme } from './../theme';
import HybridProvider from './hybrid-overlay/HybridProvider';

const NativeBaseProvider = props => {
  const {
    colorModeManager,
    theme = defaultTheme,
    children,
    initialWindowMetrics
  } = props;
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(SafeAreaProvider, {
    initialMetrics: initialWindowMetrics !== null && initialWindowMetrics !== void 0 ? initialWindowMetrics : defaultInitialWindowMetrics
  }, /*#__PURE__*/React.createElement(HybridProvider, {
    colorModeManager: colorModeManager,
    options: theme.config
  }, children)));
};

export { NativeBaseProvider, ThemeConsumer as NativeBaseConsumer, ThemeContext as NativeBaseContext };
//# sourceMappingURL=NativeBaseProvider.js.map