{"version":3,"sources":["Wrapper.tsx"],"names":["React","useEffect","Animated","StyleSheet","TouchableWithoutFeedback","View","Platform","useFadeTransition","Box","isEqual","areEqual","prevProps","nextProps","overlayItem","overlayConfig","Wrapper","setOverlayItem","fadeValue","fadeIn","fadeOut","animationDuration","backgroundColor","disableOverlay","isSlideAnimation","motionPreset","overlayStyle","create","wrapper","position","top","bottom","right","left","zIndex","background","opacity","itemBackground","alignItems","justifyContent","overlayItemHeight","setOverlayItemHeight","useState","overlayItemPosition","setOverlayItemposition","windowSize","setWindowSize","readyToAnimate","setReadyToAnimate","provideSize","layoutSize","height","provideWindowSize","setTimeout","placeOverlayItem","webStyle","transition","OS","e","nativeEvent","layout","closeOnPress","onClose","memo"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  Platform,\n} from 'react-native';\nimport { useFadeTransition } from '../../components/composites/Transitions/useFadeTransition';\nimport Box from '../../components/primitives/Box';\nimport isEqual from 'lodash/isEqual';\n\ntype OverlayWrapperType = {\n  overlayItem: any;\n  overlayConfig: any;\n  setOverlayItem: any;\n};\n\nfunction areEqual(\n  prevProps: OverlayWrapperType,\n  nextProps: OverlayWrapperType\n) {\n  if (\n    isEqual(prevProps.overlayItem, nextProps.overlayItem) &&\n    isEqual(prevProps.overlayConfig, nextProps.overlayConfig)\n  )\n    return true;\n  return false;\n}\n\nfunction Wrapper({\n  overlayItem,\n  overlayConfig,\n  setOverlayItem,\n}: OverlayWrapperType) {\n  const { fadeValue, fadeIn, fadeOut } = useFadeTransition(\n    overlayConfig.animationDuration\n  );\n  const backgroundColor = overlayConfig.disableOverlay\n    ? 'transparent'\n    : overlayConfig.backgroundColor ?? '#161616cc';\n  const isSlideAnimation = overlayConfig.motionPreset === 'slide';\n  const overlayStyle = StyleSheet.create({\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      zIndex: 999,\n    },\n    background: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: 999,\n      opacity: 0.5,\n      backgroundColor,\n    },\n    itemBackground: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent:\n        overlayConfig.position === 'top'\n          ? 'flex-start'\n          : overlayConfig.position === 'bottom'\n          ? 'flex-end'\n          : 'center',\n      zIndex: 9999,\n    },\n  });\n\n  const [overlayItemHeight, setOverlayItemHeight] = React.useState(0);\n  const [overlayItemPosition, setOverlayItemposition] = React.useState(0);\n  const [windowSize, setWindowSize] = React.useState(0);\n  const [readyToAnimate, setReadyToAnimate] = React.useState(false);\n  const provideSize = (layoutSize: any) => {\n    setOverlayItemHeight(layoutSize.height);\n  };\n  const provideWindowSize = (layoutSize: any) => {\n    setWindowSize(layoutSize.height);\n  };\n\n  useEffect(() => {\n    if (isSlideAnimation) {\n      if (overlayItem && overlayItemHeight) {\n        setTimeout(() => {\n          setReadyToAnimate(true);\n        }, 100);\n      } else if (!overlayItem) {\n        setReadyToAnimate(false);\n      }\n    }\n  }, [isSlideAnimation, overlayItem, overlayItemHeight, setReadyToAnimate]);\n\n  useEffect(() => {\n    if (isSlideAnimation) {\n      switch (overlayConfig.position) {\n        case 'top':\n          setOverlayItemposition(windowSize);\n          break;\n        case 'bottom':\n          setOverlayItemposition(overlayItemHeight);\n          break;\n        default:\n          // as center is default position\n          setOverlayItemposition(windowSize / 2 - overlayItemHeight / 2);\n          break;\n      }\n    }\n  }, [\n    isSlideAnimation,\n    overlayConfig.position,\n    windowSize,\n    overlayItemHeight,\n    setOverlayItemposition,\n  ]);\n\n  const placeOverlayItem = () => {\n    if (readyToAnimate && overlayItem) {\n      const webStyle = {\n        transition: `top ${overlayConfig.animationDuration}ms`,\n        top: 0,\n      };\n      return (\n        <Box width=\"100%\" style={{ ...(Platform.OS === 'web' && webStyle) }}>\n          {overlayItem}\n        </Box>\n      );\n    } else {\n      return (\n        <Box\n          style={{ opacity: 0, top: overlayItemPosition }}\n          onLayout={(e) => provideSize(e.nativeEvent.layout)}\n        >\n          {overlayItem}\n        </Box>\n      );\n    }\n  };\n\n  overlayItem ? fadeIn() : fadeOut();\n  return (\n    <Animated.View\n      style={[overlayStyle.wrapper, { opacity: fadeValue }]}\n      pointerEvents={\n        overlayItem\n          ? overlayConfig.disableOverlay\n            ? 'box-none'\n            : 'auto'\n          : 'none'\n      }\n    >\n      <TouchableWithoutFeedback\n        onPress={() => {\n          if (overlayConfig.closeOnPress) {\n            setOverlayItem(null);\n            overlayConfig.onClose ? overlayConfig.onClose(false) : null;\n          }\n        }}\n      >\n        <View style={overlayStyle.background} />\n      </TouchableWithoutFeedback>\n      {/* Added box-none instead of none to fix Web modal not able to get clicked inside Modal.Body */}\n      <View\n        pointerEvents=\"box-none\"\n        style={overlayStyle.itemBackground}\n        onLayout={(e) => provideWindowSize(e.nativeEvent.layout)}\n      >\n        {isSlideAnimation ? placeOverlayItem() : overlayItem}\n      </View>\n    </Animated.View>\n  );\n}\n\nexport default React.memo(Wrapper, areEqual);\n"]}