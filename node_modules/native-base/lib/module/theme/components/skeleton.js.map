{"version":3,"sources":["skeleton.ts"],"names":["getColor","mode","baseStyle","props","startColor","endColor","theme","skeletonColor","colors","muted","baseColor","defaultProps","variant"],"mappings":"AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,QAAqB,UAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAgC;AAChD,MAAI;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,MAAkCH,KAAtC;AACA,MAAII,aAAa,GAAGP,QAAQ,CAC1BM,KAD0B,EAE1BF,UAF0B,EAG1BH,IAAI,CAACK,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CAAD,EAA0BH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,GAAnB,CAA1B,CAAJ,CAAuDN,KAAvD,CAH0B,CAA5B;AAKA,MAAIO,SAAS,GAAGV,QAAQ,CAACM,KAAD,EAAQD,QAAR,EAAkB,aAAlB,CAAxB;AACA,SAAO;AACLE,IAAAA,aADK;AAELG,IAAAA;AAFK,GAAP;AAID,CAZD;;AAcA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;AAIA,eAAe;AACbV,EAAAA,SADa;AAEbS,EAAAA;AAFa,CAAf","sourcesContent":["import { getColor } from '../tools/colors';\nimport { mode } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  let { startColor, endColor, theme } = props;\n  let skeletonColor = getColor(\n    theme,\n    startColor,\n    mode(theme.colors.muted[200], theme.colors.muted[100])(props)\n  );\n  let baseColor = getColor(theme, endColor, 'transparent');\n  return {\n    skeletonColor,\n    baseColor,\n  };\n};\n\nconst defaultProps = {\n  variant: 'text',\n};\n\nexport default {\n  baseStyle,\n  defaultProps,\n};\n"]}