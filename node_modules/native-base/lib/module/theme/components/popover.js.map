{"version":3,"sources":["popover.ts"],"names":["mode","sizes","xs","_width","sm","md","lg","xl","full","baseStyle","props","popoverCloseButtonStyle","position","right","top","zIndex","popoverCloseButtonProps","size","p","popoverProps","backgroundColor","borderColor","borderWidth","popoverBodyProps","mb","pt","px","borderTopWidth","popoverContentProps","height","popoverHeaderProps","pb","popoverFooterProps","flexDirection","flexWrap"],"mappings":"AAAA,SAASA,IAAT,QAAqB,UAArB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE;AACFC,IAAAA,MAAM,EAAE;AADN,GADQ;AAIZC,EAAAA,EAAE,EAAE;AACFD,IAAAA,MAAM,EAAE;AADN,GAJQ;AAOZE,EAAAA,EAAE,EAAE;AACFF,IAAAA,MAAM,EAAE;AADN,GAPQ;AAUZG,EAAAA,EAAE,EAAE;AACFH,IAAAA,MAAM,EAAE;AADN,GAVQ;AAaZI,EAAAA,EAAE,EAAE;AACFJ,IAAAA,MAAM,EAAE;AADN,GAbQ;AAgBZK,EAAAA,IAAI,EAAE;AACJL,IAAAA,MAAM,EAAE;AADJ;AAhBM,CAAd;;AAqBA,MAAMM,SAAS,GAAIC,KAAD,IAAgC;AAChD,SAAO;AACLC,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,QAAQ,EAAE,UADa;AAEvBC,MAAAA,KAAK,EAAE,CAFgB;AAGvBC,MAAAA,GAAG,EAAE,CAHkB;AAIvBC,MAAAA,MAAM,EAAE;AAJe,KADpB;AAOLC,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,IAAI,EAAE,IADiB;AAEvBC,MAAAA,CAAC,EAAE;AAFoB,KAPpB;AAWLC,IAAAA,YAAY,EAAE;AACZ;AACAC,MAAAA,eAAe,EAAEpB,IAAI,CAAC,UAAD,EAAa,UAAb,CAAJ,CAA6BU,KAA7B,CAFL;AAGZ;AACAW,MAAAA,WAAW,EAAErB,IAAI,CAAC,UAAD,EAAa,UAAb,CAAJ,CAA6BU,KAA7B,CAJD;AAKZY,MAAAA,WAAW,EAAE;AALD,KAXT;AAkBLC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,EAAE,EAAE,CADY;AAEhBC,MAAAA,EAAE,EAAE,CAFY;AAGhBC,MAAAA,EAAE,EAAE,CAHY;AAIhBC,MAAAA,cAAc,EAAE;AAJA,KAlBb;AAwBLC,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBZ,MAAAA,IAAI,EAAE;AAFa,KAxBhB;AA4BLa,IAAAA,kBAAkB,EAAE;AAClBL,MAAAA,EAAE,EAAE,CADc;AAElBM,MAAAA,EAAE,EAAE,CAFc;AAGlBL,MAAAA,EAAE,EAAE;AAHc,KA5Bf;AAiCLM,IAAAA,kBAAkB,EAAE;AAClBN,MAAAA,EAAE,EAAE,CADc;AAElBK,MAAAA,EAAE,EAAE,CAFc;AAGlBN,MAAAA,EAAE,EAAE,CAHc;AAIlBE,MAAAA,cAAc,EAAE,CAJE;AAKlBM,MAAAA,aAAa,EAAE,KALG;AAMlBC,MAAAA,QAAQ,EAAE;AANQ;AAjCf,GAAP;AA0CD,CA3CD;;AA6CA,eAAe;AAAEzB,EAAAA,SAAF;AAAaR,EAAAA;AAAb,CAAf","sourcesContent":["import { mode } from '../tools';\n\nconst sizes = {\n  xs: {\n    _width: '40%',\n  },\n  sm: {\n    _width: '48%',\n  },\n  md: {\n    _width: '60%',\n  },\n  lg: {\n    _width: '75%',\n  },\n  xl: {\n    _width: '90%',\n  },\n  full: {\n    _width: '100%',\n  },\n};\n\nconst baseStyle = (props: Record<string, any>) => {\n  return {\n    popoverCloseButtonStyle: {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      zIndex: 1,\n    },\n    popoverCloseButtonProps: {\n      size: 'md',\n      p: 0,\n    },\n    popoverProps: {\n      // backgroundColor: 'gray.100',\n      backgroundColor: mode('gray.100', 'gray.600')(props),\n      // borderColor: 'gray.300',\n      borderColor: mode('gray.300', 'gray.700')(props),\n      borderWidth: 1,\n    },\n    popoverBodyProps: {\n      mb: 3,\n      pt: 3,\n      px: 3,\n      borderTopWidth: 1,\n    },\n    popoverContentProps: {\n      height: 'auto',\n      size: 'md',\n    },\n    popoverHeaderProps: {\n      pt: 2,\n      pb: 3,\n      px: 3,\n    },\n    popoverFooterProps: {\n      px: 3,\n      pb: 3,\n      pt: 3,\n      borderTopWidth: 1,\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n    },\n  };\n};\n\nexport default { baseStyle, sizes };\n"]}