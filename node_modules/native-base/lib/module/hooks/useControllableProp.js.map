{"version":3,"sources":["useControllableProp.ts"],"names":["React","useControllableProp","prop","state","current","isControlled","useRef","undefined","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,mBAAT,CAAgCC,IAAhC,EAAqDC,KAArD,EAA+D;AACpE,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAA4BL,KAAK,CAACM,MAAN,CAAaJ,IAAI,KAAKK,SAAtB,CAAlC;AACA,QAAMC,KAAK,GAAGH,YAAY,IAAI,OAAOH,IAAP,KAAgB,WAAhC,GAA8CA,IAA9C,GAAqDC,KAAnE;AACA,SAAO,CAACE,YAAD,EAAeG,KAAf,CAAP;AACD","sourcesContent":["import React from 'react';\n\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const { current: isControlled } = React.useRef(prop !== undefined);\n  const value = isControlled && typeof prop !== 'undefined' ? prop : state;\n  return [isControlled, value] as const;\n}\n"]}