{"version":3,"sources":["useThemeProps.test.tsx"],"names":["React","useThemeProps","NativeBaseProvider","renderHook","describe","wrapper","children","frame","x","y","width","height","insets","top","left","right","bottom","test","result","expect","current","toEqual","_text","color","fontSize","fontWeight","textTransform","px","py","borderRadius","bg","borderWidth","borderColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AACA,SAASC,UAAT,QAA2B,8BAA3B;AAEAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9B,QAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACd,oBAAC,kBAAD;AACE,IAAA,oBAAoB,EAAE;AACpBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE,CAAX;AAAcC,QAAAA,KAAK,EAAE,CAArB;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OADa;AAEpBC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,IAAI,EAAE,CAAhB;AAAmBC,QAAAA,KAAK,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC;AAFY;AADxB,KAMGV,QANH,CADF;;AAUAW,EAAAA,IAAI,CAAC,0BAAD,EAA6B,MAAM;AACrC,UAAM;AAAEC,MAAAA;AAAF,QAAaf,UAAU,CAAC,MAAMF,aAAa,CAAC,KAAD,EAAQ,EAAR,CAApB,EAAiC;AAAEI,MAAAA;AAAF,KAAjC,CAA7B;AACAc,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B,EAA/B;AACD,GAHG,CAAJ;AAKAJ,EAAAA,IAAI,CAAC,4BAAD,EAA+B,MAAM;AACvC,UAAM;AAAEC,MAAAA;AAAF,QAAaf,UAAU,CAAC,MAAMF,aAAa,CAAC,OAAD,EAAU,EAAV,CAApB,EAAmC;AAC9DI,MAAAA;AAD8D,KAAnC,CAA7B;AAGAc,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B;AAC7BC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,UADF;AAELC,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,UAAU,EAAE,MAHP;AAILC,QAAAA,aAAa,EAAE;AAJV,OADsB;AAO7BC,MAAAA,EAAE,EAAE,CAPyB;AAQ7BC,MAAAA,EAAE,EAAE,CARyB;AAS7BC,MAAAA,YAAY,EAAE,IATe;AAU7BC,MAAAA,EAAE,EAAE,UAVyB;AAW7BC,MAAAA,WAAW,EAAE,CAXgB;AAY7BC,MAAAA,WAAW,EAAE;AAZgB,KAA/B;AAcD,GAlBG,CAAJ;AAoBAf,EAAAA,IAAI,CAAC,oBAAD,EAAuB,MAAM;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAaf,UAAU,CAAC,MAAMF,aAAa,CAAC,OAAD,EAAU;AAAE2B,MAAAA,EAAE,EAAE;AAAN,KAAV,CAApB,EAA0C;AACrEvB,MAAAA;AADqE,KAA1C,CAA7B;AAGAc,IAAAA,MAAM,CAACD,MAAM,CAACE,OAAR,CAAN,CAAuBC,OAAvB,CAA+B;AAC7BC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,UADF;AAELC,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,UAAU,EAAE,MAHP;AAILC,QAAAA,aAAa,EAAE;AAJV,OADsB;AAO7BC,MAAAA,EAAE,EAAE,CAPyB;AAQ7BC,MAAAA,EAAE,EAAE,CARyB;AAS7BC,MAAAA,YAAY,EAAE,IATe;AAU7BC,MAAAA,EAAE,EAAE,UAVyB;AAW7BC,MAAAA,WAAW,EAAE,CAXgB;AAY7BC,MAAAA,WAAW,EAAE;AAZgB,KAA/B;AAcD,GAlBG,CAAJ;AAmBD,CAvDO,CAAR","sourcesContent":["import React from 'react';\nimport { useThemeProps } from './../../hooks/useThemeProps';\nimport { NativeBaseProvider } from '../../core/NativeBaseProvider';\nimport { renderHook } from '@testing-library/react-hooks';\n\ndescribe('useThemeProps', () => {\n  const wrapper = ({ children }: any) => (\n    <NativeBaseProvider\n      initialWindowMetrics={{\n        frame: { x: 0, y: 0, width: 0, height: 0 },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }}\n    >\n      {children}\n    </NativeBaseProvider>\n  );\n  test('Box component + no props', () => {\n    const { result } = renderHook(() => useThemeProps('Box', {}), { wrapper });\n    expect(result.current).toEqual({});\n  });\n\n  test('Badge Component + no props', () => {\n    const { result } = renderHook(() => useThemeProps('Badge', {}), {\n      wrapper,\n    });\n    expect(result.current).toEqual({\n      _text: {\n        color: 'gray.700',\n        fontSize: 'xs',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n      },\n      px: 1,\n      py: 1,\n      borderRadius: 'lg',\n      bg: 'gray.100',\n      borderWidth: 1,\n      borderColor: 'transparent',\n    });\n  });\n\n  test('Badge + some props', () => {\n    const { result } = renderHook(() => useThemeProps('Badge', { py: 3 }), {\n      wrapper,\n    });\n    expect(result.current).toEqual({\n      _text: {\n        color: 'gray.700',\n        fontSize: 'xs',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n      },\n      px: 1,\n      py: 3,\n      borderRadius: 'lg',\n      bg: 'gray.100',\n      borderWidth: 1,\n      borderColor: 'transparent',\n    });\n  });\n});\n"]}