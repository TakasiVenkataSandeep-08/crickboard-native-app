{"version":3,"sources":["useClipboard.ts"],"names":["React","NativeModules","useClipboard","hasCopied","setHasCopied","useState","value","setValue","onCopy","copiedValue","window","textField","document","createElement","innerText","body","appendChild","navigator","platform","setSelectionRange","select","execCommand","remove","Clipboard","setString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACK,QAAN,CAAuB,EAAvB,CAA1B;;AACA,QAAMG,MAAM,GAAG,MAAOC,WAAP,IAA+B;AAC5C,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,YAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAlB;AACAF,MAAAA,SAAS,CAACG,SAAV,GAAsBL,WAAtB;AACAG,MAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;;AACA,UAAID,MAAM,CAACO,SAAP,CAAiBC,QAAjB,KAA8B,QAAlC,EAA4C;AAC1CP,QAAAA,SAAS,CAACQ,iBAAV,CAA4B,CAA5B,EAA+B,KAA/B;AACD,OAFD,MAEO;AACLR,QAAAA,SAAS,CAACS,MAAV;AACD;;AACDR,MAAAA,QAAQ,CAACS,WAAT,CAAqB,MAArB;AACAV,MAAAA,SAAS,CAACW,MAAV;AACD,KAXD,MAWO,IAAIrB,aAAa,IAAIA,aAAa,CAACsB,SAAnC,EAA8C;AACnD,YAAMtB,aAAa,CAACsB,SAAd,CAAwBC,SAAxB,CAAkCf,WAAlC,CAAN;AACD;;AACDF,IAAAA,QAAQ,CAACE,WAAD,CAAR;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAjBD;;AAkBA,SAAO;AACLE,IAAAA,KADK;AAELE,IAAAA,MAFK;AAGLL,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import React from 'react';\nimport { NativeModules } from 'react-native';\n\nexport function useClipboard() {\n  const [hasCopied, setHasCopied] = React.useState(false);\n  const [value, setValue] = React.useState<string>('');\n  const onCopy = async (copiedValue: string) => {\n    if (typeof window !== 'undefined') {\n      const textField = document.createElement('textarea');\n      textField.innerText = copiedValue;\n      document.body.appendChild(textField);\n      if (window.navigator.platform === 'iPhone') {\n        textField.setSelectionRange(0, 99999);\n      } else {\n        textField.select();\n      }\n      document.execCommand('copy');\n      textField.remove();\n    } else if (NativeModules && NativeModules.Clipboard) {\n      await NativeModules.Clipboard.setString(copiedValue);\n    }\n    setValue(copiedValue);\n    setHasCopied(true);\n  };\n  return {\n    value,\n    onCopy,\n    hasCopied,\n  };\n}\n"]}