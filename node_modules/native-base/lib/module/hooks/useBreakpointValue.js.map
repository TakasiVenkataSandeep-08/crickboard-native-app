{"version":3,"sources":["useBreakpointValue.ts"],"names":["useWindowDimensions","getClosestBreakpoint","hasValidBreakpointFormat","findLastValidBreakpoint","useTheme","useBreakpointValue","values","windowWidth","width","theme","currentBreakpoint","breakpoints"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,cAApC;AACA,SACEC,oBADF,EAEEC,wBAFF,EAGEC,uBAHF,QAIO,gBAJP;AAKA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAO,SAASC,kBAAT,CAA4BC,MAA5B,EAAyC;AAAA;;AAC9C,MAAIC,WAAW,2BAAGP,mBAAmB,EAAtB,yDAAG,qBAAuBQ,KAAzC;AACA,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;;AACA,MAAIF,wBAAwB,CAACI,MAAD,CAA5B,EAAsC;AACpC,QAAII,iBAAiB,GAAGT,oBAAoB,CAC1CQ,KAAK,CAACE,WADoC,EAE1CJ,WAF0C,CAA5C;AAIA,WAAOJ,uBAAuB,CAACG,MAAD,EAASI,iBAAT,CAA9B;AACD,GAND,MAMO;AACL,WAAOJ,MAAP;AACD;AACF","sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport {\n  getClosestBreakpoint,\n  hasValidBreakpointFormat,\n  findLastValidBreakpoint,\n} from '../theme/tools';\nimport { useTheme } from './../hooks/useTheme';\n\nexport function useBreakpointValue(values: any) {\n  let windowWidth = useWindowDimensions()?.width;\n  const theme = useTheme();\n  if (hasValidBreakpointFormat(values)) {\n    let currentBreakpoint = getClosestBreakpoint(\n      theme.breakpoints,\n      windowWidth\n    );\n    return findLastValidBreakpoint(values, currentBreakpoint);\n  } else {\n    return values;\n  }\n}\n"]}