{"version":3,"sources":["index.tsx"],"names":["React","Box","useThemeProps","Progress","value","isIndeterminate","props","ref","newProps","innerBg","innerProps","bg","shadow","rounded","height","w","display","alignItems","justifyContent","color","style","children","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAaA,MAAMC,QAAQ,GAAG,CACf;AAAEC,EAAAA,KAAF;AAASC,EAAAA,eAAT;AAA0B,KAAGC;AAA7B,CADe,EAEfC,GAFe,KAGZ;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIC,QAAQ,GAAGN,aAAa,CAAC,UAAD,EAAaI,KAAb,CAA5B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAcD,QAApB;AACA,QAAME,UAAU,GAAG;AACjBC,IAAAA,EAAE,EAAEF,OADa;AAEjBG,IAAAA,MAAM,EAAE,CAFS;AAGjBC,IAAAA,OAAO,EAAEL,QAAQ,CAACK,OAHD;AAIjBC,IAAAA,MAAM,EAAE,MAJS;AAKjBC,IAAAA,CAAC,EAAEX,KAAK,GAAG,GALM;AAMjBY,IAAAA,OAAO,EAAE,MANQ;AAOjBC,IAAAA,UAAU,EAAE,QAPK;AAQjBC,IAAAA,cAAc,EAAE,QARC;AASjBC,IAAAA,KAAK,EAAE;AATU,GAAnB;AAWA,sBACE,oBAAC,GAAD,eAASX,QAAT;AAAmB,IAAA,KAAK,EAAEF,KAAK,CAACc,KAAhC;AAAuC,IAAA,GAAG,EAAEb;AAA5C,MACGF,eAAe;AAAA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAC,GAAD,eAASK,UAAT;AAAqB,IAAA,QAAQ,EAAEF,QAAQ,CAACa;AAAxC,KAbc,gBAed,oBAAC,GAAD,eAASX,UAAT;AAAqB,IAAA,QAAQ,EAAEF,QAAQ,CAACa;AAAxC,KAhBJ,CADF;AAqBD,CAjDD;;AAmDA,4BAAerB,KAAK,CAACsB,IAAN,eAAWtB,KAAK,CAACuB,UAAN,CAAiBpB,QAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport { Box, IBoxProps } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\n\ntype SpaceType = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n\nexport type IProgressProps = IBoxProps & {\n  style?: ViewStyle;\n  children?: JSX.Element | JSX.Element[] | string;\n  value?: number;\n  size?: SpaceType | string;\n  colorScheme?: string;\n  isIndeterminate?: any;\n};\n\nconst Progress = (\n  { value, isIndeterminate, ...props }: IProgressProps,\n  ref?: any\n) => {\n  // const width = new Animated.Value(0);\n  // useEffect(() => {\n  //   Animated.loop(\n  //     Animated.timing(width, {\n  //       toValue: 270,\n  //       duration: 1000,\n  //       useNativeDriver: true,\n  //     })\n  //   ).start();\n  // });\n\n  let newProps = useThemeProps('Progress', props);\n  const { innerBg } = newProps;\n  const innerProps = {\n    bg: innerBg,\n    shadow: 0,\n    rounded: newProps.rounded,\n    height: '100%',\n    w: value + '%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white',\n  };\n  return (\n    <Box {...newProps} style={props.style} ref={ref}>\n      {isIndeterminate ? (\n        // <Animated.View\n        //   style={[\n        //     {\n        //       transform: [\n        //         {\n        //           translateX: width,\n        //         },\n        //       ],\n        //     },\n        //   ]}\n        // >\n        // </Animated.View>\n        <Box {...innerProps} children={newProps.children} />\n      ) : (\n        <Box {...innerProps} children={newProps.children} />\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Progress));\n"]}