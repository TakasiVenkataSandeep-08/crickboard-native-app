function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Box } from '../../primitives';
import { useThemeProps } from '../../../hooks';

const Progress = ({
  value,
  isIndeterminate,
  ...props
}, ref) => {
  // const width = new Animated.Value(0);
  // useEffect(() => {
  //   Animated.loop(
  //     Animated.timing(width, {
  //       toValue: 270,
  //       duration: 1000,
  //       useNativeDriver: true,
  //     })
  //   ).start();
  // });
  let newProps = useThemeProps('Progress', props);
  const {
    innerBg
  } = newProps;
  const innerProps = {
    bg: innerBg,
    shadow: 0,
    rounded: newProps.rounded,
    height: '100%',
    w: value + '%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    color: 'white'
  };
  return /*#__PURE__*/React.createElement(Box, _extends({}, newProps, {
    style: props.style,
    ref: ref
  }), isIndeterminate ?
  /*#__PURE__*/
  // <Animated.View
  //   style={[
  //     {
  //       transform: [
  //         {
  //           translateX: width,
  //         },
  //       ],
  //     },
  //   ]}
  // >
  // </Animated.View>
  React.createElement(Box, _extends({}, innerProps, {
    children: newProps.children
  })) : /*#__PURE__*/React.createElement(Box, _extends({}, innerProps, {
    children: newProps.children
  })));
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Progress));
//# sourceMappingURL=index.js.map