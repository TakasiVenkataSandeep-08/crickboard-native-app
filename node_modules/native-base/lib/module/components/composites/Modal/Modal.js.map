{"version":3,"sources":["Modal.tsx"],"names":["React","useEffect","KeyboardAvoidingView","Modal","RNModal","Platform","styled","border","color","flexbox","layout","position","space","useOverlay","useThemeProps","FocusScope","customBackground","customBorder","customExtra","customLayout","customOutline","customPosition","customShadow","Box","View","default","ModalOverlay","ModalContext","ModalWeb","initialFocusRef","finalFocusRef","children","current","focus","finalRef","StyledModal","isOpen","onClose","justifyContent","alignItems","id","motionPreset","avoidKeyboard","overlayColor","overlayVisible","props","ref","closeOverlay","setOverlay","isVisible","setIsVisible","useState","closeOverlayInMobile","contentSize","newProps","value","visible","toggleVisible","toggleOnClose","modalChildren","closeOnOverlayClick","OS","closeOnPress","backgroundColor","undefined","disableOverlay","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { RefObject, useEffect, ReactNode } from 'react';\nimport { KeyboardAvoidingView, Modal as RNModal, Platform } from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, position, space } from 'styled-system';\nimport { useOverlay } from '../../../core/Overlay';\nimport { useThemeProps } from '../../../hooks';\n//@ts-ignore - Todo - fix types to typings in rn-aria in next version\nimport { FocusScope } from '@react-native-aria/focus';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n} from '../../../utils/customProps';\nimport { Box, View } from '../../primitives';\nimport type { IModalProps, IModalSemiProps } from './types';\nimport { default as ModalOverlay } from './ModalOverlay';\nimport { ModalContext } from './Context';\n\nconst ModalWeb = ({\n  initialFocusRef,\n  finalFocusRef,\n  children,\n}: {\n  initialFocusRef?: RefObject<any>;\n  finalFocusRef?: RefObject<any>;\n  children: ReactNode;\n}): any => {\n  useEffect(() => {\n    initialFocusRef?.current?.focus();\n    const finalRef = finalFocusRef?.current;\n    return () => {\n      finalRef?.focus();\n    };\n  }, [initialFocusRef, finalFocusRef]);\n  return children;\n};\n\nconst StyledModal = styled(RNModal)<IModalSemiProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\n\nconst Modal = (\n  {\n    children,\n    isOpen,\n    onClose,\n    initialFocusRef,\n    finalFocusRef,\n    justifyContent,\n    alignItems,\n    id,\n    motionPreset,\n    avoidKeyboard,\n    overlayColor,\n    overlayVisible,\n    ...props\n  }: IModalProps,\n  ref?: any\n) => {\n  const { closeOverlay, setOverlay } = useOverlay();\n  const [isVisible, setIsVisible] = React.useState(true);\n  const closeOverlayInMobile = () => {\n    setIsVisible(false);\n    onClose(false);\n  };\n  const { contentSize, ...newProps } = useThemeProps('Modal', props);\n\n  const value: any = {\n    visible: isVisible,\n    toggleVisible: setIsVisible,\n    toggleOnClose: onClose ? onClose : () => {},\n    contentSize: contentSize,\n  };\n  const modalChildren = (\n    <Box\n      {...newProps}\n      justifyContent={justifyContent ?? 'center'}\n      alignItems={alignItems ?? 'center'}\n    >\n      {newProps.closeOnOverlayClick === false ? <Box /> : <ModalOverlay />}\n      {children}\n    </Box>\n  );\n  React.useEffect(\n    () => {\n      isOpen && Platform.OS === 'web'\n        ? setOverlay(\n            <ModalContext.Provider value={value}>\n              <FocusScope\n                contain\n                restoreFocus={!(finalFocusRef && finalFocusRef.current)}\n                autoFocus={!(initialFocusRef && initialFocusRef.current)}\n              >\n                <Box ref={ref} nativeID={id} h=\"100%\">\n                  <ModalWeb\n                    initialFocusRef={initialFocusRef}\n                    finalFocusRef={finalFocusRef}\n                  >\n                    {modalChildren}\n                  </ModalWeb>\n                </Box>\n              </FocusScope>\n            </ModalContext.Provider>,\n            {\n              onClose: onClose,\n              closeOnPress:\n                newProps.closeOnOverlayClick === false ? false : true,\n              backgroundColor: overlayColor ? overlayColor : undefined,\n              disableOverlay: overlayVisible === false ? true : false,\n              motionPreset: motionPreset ?? 'fade',\n              position:\n                justifyContent === 'flex-start'\n                  ? 'top'\n                  : justifyContent === 'flex-end'\n                  ? 'bottom'\n                  : 'center',\n            }\n          )\n        : setOverlay(<Box />, {\n            onClose: closeOverlayInMobile,\n            closeOnPress: newProps.closeOnOverlayClick === false ? false : true,\n            backgroundColor: overlayColor ? overlayColor : undefined,\n            disableOverlay: overlayVisible === false ? true : false,\n          });\n\n      !isOpen && closeOverlay();\n      setIsVisible(isOpen);\n    },\n    /*eslint-disable */\n    [isOpen]\n  );\n  return Platform.OS !== 'web' ? (\n    <ModalContext.Provider value={value}>\n      <View nativeID={id}>\n        <StyledModal\n          visible={isVisible}\n          onRequestClose={() => {\n            value.toggleVisible(false);\n            value.toggleOnClose(false);\n          }}\n          onShow={() => initialFocusRef?.current?.focus()}\n          onDismiss={() => finalFocusRef?.current?.focus()}\n          animationType={motionPreset || 'fade'}\n          transparent\n          {...newProps}\n          ref={ref}\n        >\n          {avoidKeyboard ? (\n            <KeyboardAvoidingView\n              behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n            >\n              {modalChildren}\n            </KeyboardAvoidingView>\n          ) : (\n            modalChildren\n          )}\n        </StyledModal>\n      </View>\n    </ModalContext.Provider>\n  ) : null;\n};\n\nexport default React.memo(React.forwardRef(Modal));\n\nexport type { IModalProps };\n"]}