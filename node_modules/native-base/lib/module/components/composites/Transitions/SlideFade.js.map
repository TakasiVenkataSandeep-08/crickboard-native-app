{"version":3,"sources":["SlideFade.tsx"],"names":["React","Box","useThemeProps","Animated","Platform","canUseDom","SlideFade","children","props","isDomUsable","in","animationState","duration","offsetX","offsetY","fadeAnim","useRef","Value","current","slideAnimX","slideAnimY","animIn","timing","toValue","useNativeDriver","OS","start","animOut","opacity","transform","translateX","translateY","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport type { ISlideFadeProps } from './types';\nimport { canUseDom } from '../../../utils';\n\nconst SlideFade = ({ children, ...props }: ISlideFadeProps) => {\n  const isDomUsable = canUseDom();\n\n  const { in: animationState, duration, offsetX, offsetY } = useThemeProps(\n    'SlideFade',\n    props\n  );\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      offsetX &&\n        Animated.timing(slideAnimX, {\n          toValue: offsetX,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n      offsetY &&\n        Animated.timing(slideAnimY, {\n          toValue: offsetY,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n    }\n  };\n  animationState ? animIn() : animOut();\n\n  return (\n    <Animated.View\n      style={[\n        {\n          opacity: fadeAnim,\n          transform: [{ translateX: slideAnimX, translateY: slideAnimY }],\n        },\n      ]}\n    >\n      <Box {...props}>{children}</Box>\n    </Animated.View>\n  );\n};\n\nexport default React.memo(SlideFade);\n"]}