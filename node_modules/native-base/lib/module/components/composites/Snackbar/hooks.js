function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { useOverlay } from '../../../core/Overlay';
import Snackbar from './Snackbar';
export const useSnackbar = () => {
  const {
    closeOverlay,
    setOverlay
  } = useOverlay();
  const defaultConfig = {
    enableOverlay: false,
    autoHideDuration: 5000,
    accessibilityAnnouncement: ''
  };

  const setSnackbar = (component, config) => {
    config = { ...defaultConfig,
      ...config
    };
    const {
      autoHideDuration = 5000,
      enableOverlay,
      ...rest
    } = config;
    setOverlay( /*#__PURE__*/React.createElement(Snackbar, _extends({
      autoHideDuration: autoHideDuration
    }, rest), component), {
      disableOverlay: !enableOverlay
    });
    setTimeout(() => {
      closeOverlay();
    }, autoHideDuration);
  };

  return {
    setSnackbar
  };
};
//# sourceMappingURL=hooks.js.map