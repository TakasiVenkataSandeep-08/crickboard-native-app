function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Slide } from '../Transitions';
import { AccessibilityInfo, Platform } from 'react-native';

const Snackbar = ({
  children,
  autoHideDuration = 5000,
  accessibilityAnnouncement,
  ...props
}, ref) => {
  const [isOpen, setIsOpen] = React.useState(true);
  React.useEffect(() => {
    isOpen && setTimeout(() => {
      setIsOpen(false);
    }, autoHideDuration);
  }, [isOpen, autoHideDuration]);
  React.useEffect(() => {
    if (accessibilityAnnouncement && isOpen && Platform.OS !== 'web') {
      AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);
    }
  }, [accessibilityAnnouncement, isOpen]);
  return /*#__PURE__*/React.createElement(Slide, _extends({
    in: isOpen
  }, props, {
    ref: ref
  }), children);
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Snackbar));
//# sourceMappingURL=Snackbar.js.map