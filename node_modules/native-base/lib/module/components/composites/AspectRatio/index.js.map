{"version":3,"sources":["index.tsx"],"names":["React","StyleSheet","Platform","default","Box","isNil","AspectView","forwardRef","props","ref","layout","setLayout","useState","inputStyle","flatten","style","width","height","push","aspectRatio","nativeEvent","inLayout","AspectRatio","ratio","children","computedStyle","newChildWithProps","cloneElement","absoluteFillObject","OS","memo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAgCC,QAAhC,QAAgD,cAAhD;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,sBAA1C;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAQA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,UAAN,CAAiB,CAACC,KAAD,EAAaC,GAAb,KAA2B;AAC7D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,KAAK,CAACY,QAAN,EAA5B;AACA,QAAMC,UAAU,GAAG,CAACZ,UAAU,CAACa,OAAX,CAAmBN,KAAK,CAACO,KAAzB,KAAmC,EAApC,CAAnB;;AACA,MAAIL,MAAJ,EAAY;AACV;AACA,QAAI;AAAEM,MAAAA,KAAK,GAAG,CAAV;AAAaC,MAAAA,MAAM,GAAG;AAAtB,QAA4BP,MAAhC;;AACA,QAAIM,KAAK,KAAK,CAAd,EAAiB;AACfH,MAAAA,UAAU,CAACK,IAAX,CAAgB;AAAEF,QAAAA,KAAK,EAAEC,MAAM,GAAGT,KAAK,CAACW,WAAxB;AAAqCF,QAAAA;AAArC,OAAhB;AACD,KAFD,MAEO;AACLJ,MAAAA,UAAU,CAACK,IAAX,CAAgB;AAAEF,QAAAA,KAAF;AAASC,QAAAA,MAAM,EAAED,KAAK,GAAGR,KAAK,CAACW;AAA/B,OAAhB;AACD;AACF;;AACD,sBACE,oBAAC,GAAD,eACMX,KADN;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,KAAK,EAAEI,UAHT;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEO,MAAAA,WAAW,EAAE;AAAEV,QAAAA,MAAM,EAAEW;AAAV;AAAf,KAAD,KACRV,SAAS,CAACU,QAAD;AALb,KADF;AAUD,CAtBkB,CAAnB;;AAwBA,MAAMC,WAAW,GAAG,CAClB;AAAEP,EAAAA,KAAF;AAASQ,EAAAA,KAAT;AAAgBC,EAAAA,QAAhB;AAA0B,KAAGhB;AAA7B,CADkB,EAElBC,GAFkB,KAGf;AACH,MAAIgB,aAAoC,GAAGV,KAA3C;AACA,MAAIW,iBAAiB,gBAAG1B,KAAK,CAAC2B,YAAN,CACtBH,QADsB,EAEtB,EACE,GAAGA,QAAQ,CAAChB,KADd;AAEEO,IAAAA,KAAK,EAAEd,UAAU,CAAC2B;AAFpB,GAFsB,EAMtBJ,QAAQ,CAAChB,KAAT,CAAegB,QANO,CAAxB;AAQA,MAAIL,WAAW,GAAG,CAACd,KAAK,CAACkB,KAAD,CAAN,GAAgBA,KAAhB,GAAwB,IAAI,CAA9C,CAVG,CAYH;;AACA,MAAIrB,QAAQ,CAAC2B,EAAT,KAAgB,KAApB,EAA2B;AACzB,wBACE,oBAAC,UAAD,eAAgBrB,KAAhB;AAAuB,MAAA,WAAW,EAAEW,WAApC;AAAiD,MAAA,KAAK,EAAEJ,KAAxD;AAA+D,MAAA,GAAG,EAAEN;AAApE,QACGiB,iBADH,CADF;AAKD,GAND,MAMO;AACLD,IAAAA,aAAa,GAAGxB,UAAU,CAACa,OAAX,CAAmB,CAACC,KAAD,EAAQ;AAAEI,MAAAA;AAAF,KAAR,CAAnB,CAAhB;AACA,wBACE,oBAAC,GAAD,eAASX,KAAT;AAAgB,MAAA,KAAK,EAAEiB,aAAvB;AAAsC,MAAA,GAAG,EAAEhB;AAA3C,QACGiB,iBADH,CADF;AAKD;AACF,CA9BD;;AAgCA,4BAAe1B,KAAK,CAAC8B,IAAN,eAAW9B,KAAK,CAACO,UAAN,CAAiBe,WAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, ViewStyle, Platform } from 'react-native';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport isNil from 'lodash/isNil';\n\nexport type IAspectRatioProps = IBoxProps & {\n  style?: ViewStyle;\n  ratio?: number;\n  children: JSX.Element;\n};\n\nconst AspectView = React.forwardRef((props: any, ref?: any) => {\n  const [layout, setLayout] = React.useState();\n  const inputStyle = [StyleSheet.flatten(props.style) || {}];\n  if (layout) {\n    // @ts-ignore\n    let { width = 0, height = 0 } = layout;\n    if (width === 0) {\n      inputStyle.push({ width: height * props.aspectRatio, height });\n    } else {\n      inputStyle.push({ width, height: width / props.aspectRatio });\n    }\n  }\n  return (\n    <Box\n      {...props}\n      ref={ref}\n      style={inputStyle}\n      onLayout={({ nativeEvent: { layout: inLayout } }: any) =>\n        setLayout(inLayout)\n      }\n    />\n  );\n});\n\nconst AspectRatio = (\n  { style, ratio, children, ...props }: IAspectRatioProps,\n  ref?: any\n) => {\n  let computedStyle: ViewStyle | undefined = style;\n  let newChildWithProps = React.cloneElement(\n    children,\n    {\n      ...children.props,\n      style: StyleSheet.absoluteFillObject,\n    },\n    children.props.children\n  );\n  let aspectRatio = !isNil(ratio) ? ratio : 4 / 3;\n\n  // DOC:  It uses a aspectRatio property of React Native and manually calculate on Web\n  if (Platform.OS === 'web') {\n    return (\n      <AspectView {...props} aspectRatio={aspectRatio} style={style} ref={ref}>\n        {newChildWithProps}\n      </AspectView>\n    );\n  } else {\n    computedStyle = StyleSheet.flatten([style, { aspectRatio }]);\n    return (\n      <Box {...props} style={computedStyle} ref={ref}>\n        {newChildWithProps}\n      </Box>\n    );\n  }\n};\n\nexport default React.memo(React.forwardRef(AspectRatio));\n"]}