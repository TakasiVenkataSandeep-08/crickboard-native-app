function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { StyleSheet, Platform } from 'react-native';
import { default as Box } from '../../primitives/Box';
import isNil from 'lodash/isNil';
const AspectView = /*#__PURE__*/React.forwardRef((props, ref) => {
  const [layout, setLayout] = React.useState();
  const inputStyle = [StyleSheet.flatten(props.style) || {}];

  if (layout) {
    // @ts-ignore
    let {
      width = 0,
      height = 0
    } = layout;

    if (width === 0) {
      inputStyle.push({
        width: height * props.aspectRatio,
        height
      });
    } else {
      inputStyle.push({
        width,
        height: width / props.aspectRatio
      });
    }
  }

  return /*#__PURE__*/React.createElement(Box, _extends({}, props, {
    ref: ref,
    style: inputStyle,
    onLayout: ({
      nativeEvent: {
        layout: inLayout
      }
    }) => setLayout(inLayout)
  }));
});

const AspectRatio = ({
  style,
  ratio,
  children,
  ...props
}, ref) => {
  let computedStyle = style;
  let newChildWithProps = /*#__PURE__*/React.cloneElement(children, { ...children.props,
    style: StyleSheet.absoluteFillObject
  }, children.props.children);
  let aspectRatio = !isNil(ratio) ? ratio : 4 / 3; // DOC:  It uses a aspectRatio property of React Native and manually calculate on Web

  if (Platform.OS === 'web') {
    return /*#__PURE__*/React.createElement(AspectView, _extends({}, props, {
      aspectRatio: aspectRatio,
      style: style,
      ref: ref
    }), newChildWithProps);
  } else {
    computedStyle = StyleSheet.flatten([style, {
      aspectRatio
    }]);
    return /*#__PURE__*/React.createElement(Box, _extends({}, props, {
      style: computedStyle,
      ref: ref
    }), newChildWithProps);
  }
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(AspectRatio));
//# sourceMappingURL=index.js.map