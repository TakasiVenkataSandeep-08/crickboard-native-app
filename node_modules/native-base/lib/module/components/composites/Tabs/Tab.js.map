{"version":3,"sources":["Tab.tsx"],"names":["React","TouchableOpacity","Box","TabsContext","omitUndefined","Tab","index","children","isDisabled","style","_active","_disabled","props","newProps","activeIndex","inactiveTabStyle","activeTabStyle","changeHandler","useContext","isOpen","tabStyle","pressHandler","memo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,SAASC,aAAT,QAA8B,4BAA9B;;AAEA,MAAMC,GAAG,GAAG,CAAC;AACXC,EAAAA,KADW;AAEXC,EAAAA,QAFW;AAGXC,EAAAA,UAHW;AAIXC,EAAAA,KAJW;AAKXC,EAAAA,OALW;AAMXC,EAAAA,SANW;AAOX,KAAGC;AAPQ,CAAD,KAQK;AACf,QAAMC,QAAQ,GAAGT,aAAa,CAACQ,KAAD,CAA9B;AACA,QAAM;AACJE,IAAAA,WADI;AAEJC,IAAAA,gBAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA;AAJI,MAKiBjB,KAAK,CAACkB,UAAN,CAAiBf,WAAjB,CALvB;AAMA,QAAMgB,MAAM,GAAGL,WAAW,KAAKR,KAA/B;AACA,QAAMc,QAAQ,GAAGD,MAAM,GAAGH,cAAH,GAAoBD,gBAA3C;;AACA,QAAMM,YAAY,GAAG,MAAM;AACzBJ,IAAAA,aAAa,IAAIA,aAAa,CAACX,KAAD,CAA9B;AACD,GAFD;;AAGA,sBACE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,QAAQ,EAAEE,UAFZ;AAGE,IAAA,OAAO,EAAE,MAAMa,YAAY,EAH7B;AAIE,IAAA,UAAU,EAAE,IAJd;AAKE,IAAA,iBAAiB,EAAC;AALpB,kBAOE,oBAAC,GAAD,eACMD,QADN,EAEMP,QAFN;AAGE,IAAA,KAAK,EAAE,CAACJ,KAAD,EAAQU,MAAM,IAAIT,OAAlB,EAA2BF,UAAU,IAAIG,SAAzC;AAHT,MAKGJ,QALH,CAPF,CADF;AAiBD,CAtCD;;AAwCA,4BAAeP,KAAK,CAACsB,IAAN,CAAWjB,GAAX,CAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { TabsContext } from './Context';\nimport type { ITabProps, ITabsContextProps } from './types';\nimport { omitUndefined } from '../../../theme/tools/utils';\n\nconst Tab = ({\n  index,\n  children,\n  isDisabled,\n  style,\n  _active,\n  _disabled,\n  ...props\n}: ITabProps) => {\n  const newProps = omitUndefined(props);\n  const {\n    activeIndex,\n    inactiveTabStyle,\n    activeTabStyle,\n    changeHandler,\n  }: ITabsContextProps = React.useContext(TabsContext);\n  const isOpen = activeIndex === index;\n  const tabStyle = isOpen ? activeTabStyle : inactiveTabStyle;\n  const pressHandler = () => {\n    changeHandler && changeHandler(index);\n  };\n  return (\n    <TouchableOpacity\n      activeOpacity={1}\n      disabled={isDisabled}\n      onPress={() => pressHandler()}\n      accessible={true}\n      accessibilityRole=\"radio\"\n    >\n      <Box\n        {...tabStyle}\n        {...newProps}\n        style={[style, isOpen && _active, isDisabled && _disabled]}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(Tab);\n"]}