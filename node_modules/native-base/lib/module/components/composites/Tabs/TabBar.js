function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import getIndexedChildren from '../../../utils/getIndexedChildren';
import Box from '../../primitives/Box';
import { TabsContext } from './Context';

const TabBar = ({
  children,
  ...props
}) => {
  const {
    tabBarStyle,
    align,
    isFitted
  } = React.useContext(TabsContext);
  return /*#__PURE__*/React.createElement(Box, _extends({
    flexDirection: "row",
    width: "100%",
    justifyContent: isFitted ? 'space-between' : align
  }, tabBarStyle, props), getIndexedChildren(children));
};

export default /*#__PURE__*/React.memo(TabBar);
//# sourceMappingURL=TabBar.js.map