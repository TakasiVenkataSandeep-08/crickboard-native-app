{"version":3,"sources":["MenuItemOption.tsx"],"names":["React","Flex","Icon","useThemeProps","MenuItem","MenuOptionContext","MenuItemOption","memo","value","children","onPress","props","values","onChange","type","useContext","modifiedOnPress","e","iconName","includes","newProps","px","py","_text","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAAyC,kBAAzC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,OAAO,MAAMC,cAAc,gBAAGN,KAAK,CAACO,IAAN,CAC5B,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,OAAnB;AAA4B,KAAGC;AAA/B,CAAD,KAAkE;AAChE,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA;AAHI,MAIuBd,KAAK,CAACe,UAAN,CAAiBV,iBAAjB,CAJ7B;;AAKA,QAAMW,eAAe,GAAIC,CAAD,IAAY;AAClCJ,IAAAA,QAAQ,CAACL,KAAD,CAAR;AACAE,IAAAA,OAAO,IAAIA,OAAO,CAACO,CAAD,CAAlB;AACD,GAHD;;AAIA,MAAIC,QAAsB,GACxBJ,IAAI,KAAK,UAAT,GACIF,MAAM,CAACO,QAAP,CAAgBX,KAAhB,IACE,WADF,GAEE,yBAHN,GAIII,MAAM,CAACO,QAAP,CAAgBX,KAAhB,IACA,sBADA,GAEA,wBAPN;AAQA,QAAMY,QAAQ,GAAGjB,aAAa,CAAC,UAAD,EAAaQ,KAAb,CAA9B;AACA,sBACE,oBAAC,QAAD,eAAcA,KAAd;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE,CAAhC;AAAmC,IAAA,OAAO,EAAEK;AAA5C,mBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,EAAE,EAAEI,QAAQ,CAACC,EAAnC;AAAuC,IAAA,EAAE,EAAED,QAAQ,CAACE;AAApD,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEJ,QADR;AAEE,IAAA,EAAE,EAAEE,QAAQ,CAACC,EAFf;AAGE,IAAA,IAAI,EAAED,QAAQ,CAACG,KAAT,CAAeC;AAHvB,IADF,EAMGf,QANH,CADF,CADF;AAYD,CAhC2B,CAAvB","sourcesContent":["import React from 'react';\nimport { Flex, Icon, IconNameType } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport { MenuItem } from './MenuItem';\nimport type { IMenuItemOptionProps, IMenuOptionContextProps } from './types';\nimport { MenuOptionContext } from './MenuOptionGroup';\n\nexport const MenuItemOption = React.memo(\n  ({ value, children, onPress, ...props }: IMenuItemOptionProps) => {\n    const {\n      values,\n      onChange,\n      type,\n    }: IMenuOptionContextProps = React.useContext(MenuOptionContext);\n    const modifiedOnPress = (e: any) => {\n      onChange(value);\n      onPress && onPress(e);\n    };\n    let iconName: IconNameType =\n      type === 'checkbox'\n        ? values.includes(value)\n          ? 'check-box'\n          : 'check-box-outline-blank'\n        : values.includes(value)\n        ? 'radio-button-checked'\n        : 'radio-button-unchecked';\n    const newProps = useThemeProps('MenuItem', props);\n    return (\n      <MenuItem {...props} px={0} py={0} onPress={modifiedOnPress}>\n        <Flex direction=\"row\" px={newProps.px} py={newProps.py}>\n          <Icon\n            name={iconName}\n            pr={newProps.px}\n            size={newProps._text.fontSize}\n          />\n          {children}\n        </Flex>\n      </MenuItem>\n    );\n  }\n);\n"]}