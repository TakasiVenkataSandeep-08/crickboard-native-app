{"version":3,"sources":["Menu.tsx"],"names":["React","View","useThemeProps","usePopover","FocusScope","Menu","memo","forwardRef","trigger","closeOnSelect","children","onOpen","onClose","props","ref","triggerRef","useRef","newProps","isOpen","toggle","useState","setPopover","closePopover","closeMenu","openMenu","animationDuration","parentComponentConfig","open","onPress"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,eAA3B,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAO,MAAMC,IAAI,gBAAGL,KAAK,CAACM,IAAN,eAClBN,KAAK,CAACO,UAAN,CACE,CACE;AACEC,EAAAA,OADF;AAEEC,EAAAA,aAAa,GAAG,IAFlB;AAGEC,EAAAA,QAHF;AAIEC,EAAAA,MAJF;AAKEC,EAAAA,OALF;AAME,KAAGC;AANL,CADF,EASEC,GATF,KAUK;AACH,MAAIC,UAAU,GAAGf,KAAK,CAACgB,MAAN,EAAjB;AACA,QAAMC,QAAQ,GAAGf,aAAa,CAAC,MAAD,EAASW,KAAT,CAA9B;AACA,MAAI,CAACK,MAAD,EAASC,MAAT,IAAmBnB,KAAK,CAACoB,QAAN,CAAwB,KAAxB,CAAvB;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BnB,UAAU,EAA/C;;AAEA,QAAMoB,SAAS,GAAG,MAAM;AACtBD,IAAAA,YAAY;AACZH,IAAAA,MAAM,CAAC,KAAD,CAAN;AACAP,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACD,GAJD;;AAKA,QAAMY,QAAQ,GAAG,MAAM;AACrBH,IAAAA,UAAU,eACR,oBAAC,IAAD,eAAUJ,QAAV;AAAoB,MAAA,GAAG,EAAEH;AAAzB,qBACE,oBAAC,UAAD;AAAY,MAAA,YAAY,MAAxB;AAAyB,MAAA,SAAS;AAAlC,OACGJ,QADH,CADF,CADQ,EAMR;AACEK,MAAAA,UADF;AAEEU,MAAAA,iBAAiB,EAAE,GAFrB;AAGEb,MAAAA,OAAO,EAAEW,SAHX;AAIEG,MAAAA,qBAAqB,EAAE;AAAEC,QAAAA,IAAI,EAAET,MAAR;AAAgBK,QAAAA,SAAhB;AAA2Bd,QAAAA;AAA3B;AAJzB,KANQ,CAAV;AAaAU,IAAAA,MAAM,CAAC,IAAD,CAAN;AACAR,IAAAA,MAAM,IAAIA,MAAM,EAAhB;AACD,GAhBD;;AAiBA,SAAOH,OAAO,CACZ;AACEoB,IAAAA,OAAO,EAAEJ,QADX;AAEEV,IAAAA,GAAG,EAAEC;AAFP,GADY,EAKZ;AAAEY,IAAAA,IAAI,EAAET;AAAR,GALY,CAAd;AAOD,CA9CH,CADkB,CAAb","sourcesContent":["import React from 'react';\nimport type { IMenuProps } from './types';\nimport View from '../../primitives/View';\nimport { useThemeProps } from '../../../hooks';\nimport { usePopover } from '../../../core';\n//@ts-ignore - Todo - fix types to typings in rn-aria in next version\nimport { FocusScope } from '@react-native-aria/focus';\n\nexport const Menu = React.memo(\n  React.forwardRef(\n    (\n      {\n        trigger,\n        closeOnSelect = true,\n        children,\n        onOpen,\n        onClose,\n        ...props\n      }: IMenuProps,\n      ref: any\n    ) => {\n      let triggerRef = React.useRef();\n      const newProps = useThemeProps('Menu', props);\n      let [isOpen, toggle] = React.useState<boolean>(false);\n      const { setPopover, closePopover } = usePopover();\n\n      const closeMenu = () => {\n        closePopover();\n        toggle(false);\n        onClose && onClose();\n      };\n      const openMenu = () => {\n        setPopover(\n          <View {...newProps} ref={ref}>\n            <FocusScope restoreFocus autoFocus>\n              {children}\n            </FocusScope>\n          </View>,\n          {\n            triggerRef,\n            animationDuration: 200,\n            onClose: closeMenu,\n            parentComponentConfig: { open: isOpen, closeMenu, closeOnSelect },\n          }\n        );\n        toggle(true);\n        onOpen && onOpen();\n      };\n      return trigger(\n        {\n          onPress: openMenu,\n          ref: triggerRef,\n        },\n        { open: isOpen }\n      );\n    }\n  )\n);\n"]}