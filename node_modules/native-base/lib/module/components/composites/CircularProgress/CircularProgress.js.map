{"version":3,"sources":["CircularProgress.tsx"],"names":["get","React","Animated","Easing","StyleSheet","styled","border","color","useTheme","useThemeProps","canUseDom","default","Box","StyleAnimatedView","View","CircularProgress","value","size","isIndeterminate","thickness","colorProp","trackColor","max","min","props","ref","theme","isDomUsable","sizeProps","newProps","height","width","themeHeight","themeWidth","styleSize","parseInt","slice","Length","defaultThickness","degree","Value","loop","timing","toValue","duration","easing","linear","useNativeDriver","start","viewHeight","setViewHeight","useState","layout","e","nativeEvent","defaultStyling","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","borderLeftWidth","borderBottomWidth","position","borderLeftColor","borderBottomColor","styles","create","firstProgressLayer","borderTopWidth","borderRightWidth","transform","rotateZ","secondProgressLayer","offsetLayer","borderRadius","animateStyle","interpolate","inputRange","outputRange","halfSide","propStyle","percent","base_degrees","rotateBy","renderThirdLayer","firstProgressLayerStyle","children","memo","forwardRef"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\nimport React from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color } from 'styled-system';\nimport { useTheme, useThemeProps } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport type { ICircularProgressProps } from './types';\n\nconst StyleAnimatedView = styled(Animated.View)<IBoxProps>(color, border);\n\nconst CircularProgress = (\n  {\n    value,\n    size,\n    isIndeterminate,\n    thickness,\n    color: colorProp,\n    trackColor,\n    max,\n    min,\n    ...props\n  }: ICircularProgressProps,\n  ref: any\n) => {\n  const theme = useTheme();\n\n  const isDomUsable = canUseDom();\n  if (min) {\n    value = value - min;\n  }\n  if (!size) {\n    size = 'lg';\n  }\n  let sizeProps;\n  let newProps = useThemeProps('CircularProgress', { size: size });\n  if (typeof size === 'string') {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width,\n    };\n  } else {\n    sizeProps = { height: size, width: size };\n  }\n  // fetching size from theme for passing into style prop\n  const themeHeight = get(theme, 'space.' + sizeProps.height);\n  const themeWidth = get(theme, 'space.' + sizeProps.width);\n\n  const styleSize = {\n    height: themeHeight\n      ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10)\n      : sizeProps.height,\n    width: themeWidth\n      ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10)\n      : sizeProps.width,\n  };\n\n  let defaultThickness = 8;\n  if (thickness) {\n    defaultThickness = thickness;\n  }\n  const degree: any = new Animated.Value(0);\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(\n        Animated.timing(degree, {\n          toValue: 1,\n          duration: 600,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        })\n      ).start();\n    }\n  }\n  const [viewHeight, setViewHeight] = React.useState(0);\n  const layout = (e: any) => {\n    let height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  const defaultStyling: any = {\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent',\n    ...styleSize,\n  };\n  const styles = StyleSheet.create({\n    firstProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    secondProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '45deg' }],\n    },\n    offsetLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      borderRadius: viewHeight / 2,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    animateStyle: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [\n        {\n          rotateZ: degree.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        },\n      ],\n    },\n  });\n  let halfSide = (max ? (min ? max - min : max) : 100) / 2; // calculating the halfvalue of the progress according to min and max\n\n  const propStyle = (percent: number, base_degrees: number) => {\n    const rotateBy = base_degrees + (percent * 180) / halfSide;\n    return {\n      transform: [{ rotateZ: rotateBy + 'deg' }],\n    };\n  };\n\n  const renderThirdLayer = (percent: number) => {\n    if (percent > halfSide) {\n      return (\n        <Box\n          borderTopColor={colorProp ? colorProp : 'blue.700'}\n          borderRightColor={colorProp ? colorProp : 'blue.700'}\n          style={[\n            styles.secondProgressLayer,\n            propStyle(percent - halfSide, 45),\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Box\n          borderTopColor={trackColor ? trackColor : 'blueGray.200'}\n          borderRightColor={trackColor ? trackColor : 'blueGray.200'}\n          style={styles.offsetLayer}\n        />\n      );\n    }\n  };\n  let firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  return (\n    <Box\n      {...sizeProps}\n      rounded={viewHeight / 2}\n      borderWidth={defaultThickness}\n      borderColor={trackColor ? trackColor : 'blueGray.200'}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...props}\n      ref={ref}\n    >\n      {!isIndeterminate ? (\n        <>\n          <Box\n            onLayout={layout}\n            borderTopColor={colorProp ? colorProp : 'blue.700'}\n            borderRightColor={colorProp ? colorProp : 'blue.700'}\n            style={[styles.firstProgressLayer, firstProgressLayerStyle]}\n          />\n          {renderThirdLayer(value)}\n          <Box fontSize={sizeProps.height / 4}>{props.children}</Box>\n        </>\n      ) : (\n        <StyleAnimatedView\n          onLayout={layout}\n          borderTopColor={colorProp ? colorProp : 'blue.700'}\n          borderRightColor={colorProp ? colorProp : 'blue.700'}\n          style={styles.animateStyle}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(CircularProgress));\n"]}