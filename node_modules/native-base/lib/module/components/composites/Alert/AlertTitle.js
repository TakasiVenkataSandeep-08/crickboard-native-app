function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Text from '../../primitives/Text';
import { useThemeProps } from '../../../hooks';
import { AlertContext } from './Context';

const AlertTitle = ({
  children,
  _text,
  ...props
}) => {
  const newProps = useThemeProps('AlertTitle', props);
  const {
    textColor
  } = React.useContext(AlertContext);
  return /*#__PURE__*/React.createElement(Text, _extends({
    mr: 2,
    color: textColor
  }, newProps, _text), children);
};

export default /*#__PURE__*/React.memo(AlertTitle);
//# sourceMappingURL=AlertTitle.js.map