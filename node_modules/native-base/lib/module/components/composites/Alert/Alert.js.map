{"version":3,"sources":["Alert.tsx"],"names":["React","Box","useThemeProps","AlertContext","Alert","children","_text","action","props","ref","status","variant","iconColor","textColor","newProps","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,YAAT,QAA6B,WAA7B;;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,MAAnB;AAA2B,KAAGC;AAA9B,CADY,EAEZC,GAFY,KAGT;AACH,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA,SAA9B;AAAyC,OAAGC;AAA5C,MAAyDZ,aAAa,CAC1E,OAD0E,EAE1EM,KAF0E,CAA5E;AAKA,sBACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,MADK;AAELC,MAAAA,OAFK;AAGLC,MAAAA,SAHK;AAILC,MAAAA;AAJK;AADT,kBAQE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAC,UAHX;AAIE,IAAA,aAAa,EAAC,KAJhB;AAKE,IAAA,UAAU,EAAC,QALb;AAME,IAAA,cAAc,EAAC,YANjB;AAOE,IAAA,QAAQ,EAAC,MAPX;AAQE,IAAA,KAAK,EAAEP;AART,KASMQ,QATN;AAUE,IAAA,GAAG,EAAEL;AAVP,MAYGJ,QAZH,EAaGE,MAAM,gBAAG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAT,KAAaA,MAAb,CAAH,GAAgC,IAbzC,CARF,CADF;AA0BD,CAnCD;;AAqCA,4BAAeP,KAAK,CAACe,IAAN,eAAWf,KAAK,CAACgB,UAAN,CAAiBZ,KAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks';\nimport type { IAlertProps } from './types';\nimport { AlertContext } from './Context';\n\nconst Alert = (\n  { children, _text, action, ...props }: IAlertProps,\n  ref: any\n) => {\n  const { status, variant, iconColor, textColor, ...newProps } = useThemeProps(\n    'Alert',\n    props\n  );\n\n  return (\n    <AlertContext.Provider\n      value={{\n        status,\n        variant,\n        iconColor,\n        textColor,\n      }}\n    >\n      <Box\n        minW=\"100%\"\n        maxW=\"100%\"\n        position=\"relative\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"flex-start\"\n        flexWrap=\"wrap\"\n        _text={_text}\n        {...newProps}\n        ref={ref}\n      >\n        {children}\n        {action ? <Box mr={0}>{action}</Box> : null}\n      </Box>\n    </AlertContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Alert));\n"]}