function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Box from '../../primitives/Box';
import { useThemeProps } from '../../../hooks';
import { AlertContext } from './Context';

const Alert = ({
  children,
  _text,
  action,
  ...props
}, ref) => {
  const {
    status,
    variant,
    iconColor,
    textColor,
    ...newProps
  } = useThemeProps('Alert', props);
  return /*#__PURE__*/React.createElement(AlertContext.Provider, {
    value: {
      status,
      variant,
      iconColor,
      textColor
    }
  }, /*#__PURE__*/React.createElement(Box, _extends({
    minW: "100%",
    maxW: "100%",
    position: "relative",
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "flex-start",
    flexWrap: "wrap",
    _text: _text
  }, newProps, {
    ref: ref
  }), children, action ? /*#__PURE__*/React.createElement(Box, {
    mr: 0
  }, action) : null));
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Alert));
//# sourceMappingURL=Alert.js.map