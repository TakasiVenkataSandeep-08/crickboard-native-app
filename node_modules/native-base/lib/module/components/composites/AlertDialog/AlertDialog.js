function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Modal } from '../Modal';
const AlertDialog = /*#__PURE__*/React.memo(props => {
  const {
    leastDestructiveRef,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement(Modal, _extends({}, rest, {
    initialFocusRef: leastDestructiveRef,
    closeOnOverlayClick: false
  }));
});
export default AlertDialog;
//# sourceMappingURL=AlertDialog.js.map