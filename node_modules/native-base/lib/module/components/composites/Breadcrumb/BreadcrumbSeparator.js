import React from 'react';
import Text from '../../primitives/Text';
export const getBreadcrumbSeparator = (children, separator, props, spacing) => {
  if (Array.isArray(children)) {
    if (children.length === 1) {
      return children;
    }

    const separatorElement = separator ? typeof separator === 'string' ? /*#__PURE__*/React.createElement(Text, {
      mx: spacing !== null && spacing !== void 0 ? spacing : 2
    }, separator) : /*#__PURE__*/React.cloneElement(separator, {
      mx: spacing !== null && spacing !== void 0 ? spacing : 2
    }) : /*#__PURE__*/React.createElement(Text, {
      mx: spacing !== null && spacing !== void 0 ? spacing : 2
    }, '/');
    let result = [];

    if (children && children.length > 1) {
      result = children.reduce((r, a) => r.concat(a, separatorElement), [separatorElement]);
    }

    result = result.slice(1, -1);
    return result.map((child, index) => {
      return /*#__PURE__*/React.cloneElement(child, {
        _text: { ...props
        },
        ...props,
        key: "breadcrumb-separator-".concat(index)
      });
    });
  } else {
    return children;
  }
};
//# sourceMappingURL=BreadcrumbSeparator.js.map