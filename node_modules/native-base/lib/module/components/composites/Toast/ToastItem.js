function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Box from '../../primitives/Box';
import Text from '../../primitives/Text';
import { useThemeProps } from '../../../hooks';

const ToastItem = ({
  title,
  offset,
  ...props
}) => {
  let {
    _title,
    ...newProps
  } = useThemeProps('Toast', props);
  return /*#__PURE__*/React.createElement(Box, _extends({
    ml: offset === null || offset === void 0 ? void 0 : offset.x,
    mt: offset === null || offset === void 0 ? void 0 : offset.y
  }, newProps), /*#__PURE__*/React.createElement(Text, _title, title));
};

export default /*#__PURE__*/React.memo(ToastItem);
//# sourceMappingURL=ToastItem.js.map