{"version":3,"sources":["NumberInputStepper.tsx"],"names":["React","TouchableOpacity","Platform","VStack","Box","Icon","useThemeProps","NumberInputContext","NBStepper","children","props","style","isIncrement","disablitityCheck","_active","_disabled","isDisabled","ariaLabel","pressHandler","iconColor","newProps","OS","disabled","cursor","NumberInputStepper","numberInputStepper","setNumberInputStepper","useContext","useEffect","memo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,cAA3C;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,QAAkC,kBAAlC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,kBAAT,QAAmC,WAAnC;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAAiC;AACxD,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,YARI;AASJC,IAAAA,SATI;AAUJ,OAAGC;AAVC,MAWFd,aAAa,CAAC,oBAAD,EAAuBI,KAAvB,CAXjB;AAYA,sBACE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,QAAQ,EAAEG,gBAAgB,IAAIG,UAFhC;AAGE,IAAA,OAAO,EAAEE,YAHX;AAIE,IAAA,UAAU,MAJZ;AAKE,IAAA,kBAAkB,EAAED;AALtB,kBAOE,oBAAC,GAAD,eACMG,QADN,EAEMN,OAFN,EAGOD,gBAAgB,IAAIG,UAApB,GAAiCD,SAAjC,GAA6C,EAHpD;AAIE,IAAA,WAAW,EAAC,aAJd;AAKE,IAAA,KAAK,EAAEJ,KALT;AAME,IAAA,OAAO,EAAEE,gBAAgB,IAAIG,UAApB,GAAiC,GAAjC,GAAuC;AANlD,KAOOd,QAAQ,CAACmB,EAAT,KAAgB,KAAhB,GACD;AACEC,IAAAA,QAAQ,EAAET,gBAAgB,IAAIG,UADhC;AAEEO,IAAAA,MAAM,EAAEV,gBAAgB,IAAIG,UAApB,GAAiC,aAAjC,GAAiD;AAF3D,GADC,GAKD,EAZN,GAcGP,QAAQ,IAAIG,WAAZ,gBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAA2B,IAAA,IAAI,EAAC,eAAhC;AAAgD,IAAA,KAAK,EAAEO;AAAvD,IADD,gBAGC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAA6B,IAAA,IAAI,EAAC,eAAlC;AAAkD,IAAA,KAAK,EAAEA;AAAzD,IAjBJ,CAPF,CADF;AA8BD,CA3CM;;AA6CP,MAAMK,kBAAkB,GAAG,CAAC;AAC1Bf,EAAAA,QAD0B;AAE1B,KAAGC;AAFuB,CAAD,KAGM;AAC/B,QAAM;AACJe,IAAAA,kBADI;AAEJC,IAAAA;AAFI,MAGmB1B,KAAK,CAAC2B,UAAN,CAAiBpB,kBAAjB,CAHzB;AAKAP,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,MAAM;AACpB,KAACH,kBAAD,IACEC,qBAAqB,eAAC,oBAAC,MAAD,EAAYhB,KAAZ,EAAoBD,QAApB,CAAD,CADvB;AAED,GAHD,EAGG,CAACgB,kBAAD,EAAqBC,qBAArB,EAA4ChB,KAA5C,EAAmDD,QAAnD,CAHH;AAIA,SAAO,IAAP;AACD,CAdD;;AAgBA,4BAAeT,KAAK,CAAC6B,IAAN,CAAWL,kBAAX,CAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport { VStack, Box, Icon } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { INumberInputSteppersProps, INumberInputContext } from './types';\nimport { NumberInputContext } from './Context';\n\nexport const NBStepper = ({ children, ...props }: any) => {\n  const {\n    style,\n    isIncrement,\n    disablitityCheck,\n    _active,\n    _disabled,\n    isDisabled,\n    ariaLabel,\n    pressHandler,\n    iconColor,\n    ...newProps\n  } = useThemeProps('NumberInputStepper', props);\n  return (\n    <TouchableOpacity\n      activeOpacity={1}\n      disabled={disablitityCheck || isDisabled}\n      onPress={pressHandler}\n      accessible\n      accessibilityLabel={ariaLabel}\n    >\n      <Box\n        {...newProps}\n        {..._active}\n        {...(disablitityCheck || isDisabled ? _disabled : {})}\n        borderColor=\"transparent\"\n        style={style}\n        opacity={disablitityCheck || isDisabled ? 0.4 : 1}\n        {...(Platform.OS === 'web'\n          ? {\n              disabled: disablitityCheck || isDisabled,\n              cursor: disablitityCheck || isDisabled ? 'not-allowed' : 'auto',\n            }\n          : {})}\n      >\n        {children || isIncrement ? (\n          <Icon name=\"arrow-drop-up\" type=\"MaterialIcons\" color={iconColor} />\n        ) : (\n          <Icon name=\"arrow-drop-down\" type=\"MaterialIcons\" color={iconColor} />\n        )}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nconst NumberInputStepper = ({\n  children,\n  ...props\n}: INumberInputSteppersProps) => {\n  const {\n    numberInputStepper,\n    setNumberInputStepper,\n  }: INumberInputContext = React.useContext(NumberInputContext);\n\n  React.useEffect(() => {\n    !numberInputStepper &&\n      setNumberInputStepper(<VStack {...props}>{children}</VStack>);\n  }, [numberInputStepper, setNumberInputStepper, props, children]);\n  return null;\n};\n\nexport default React.memo(NumberInputStepper);\n"]}