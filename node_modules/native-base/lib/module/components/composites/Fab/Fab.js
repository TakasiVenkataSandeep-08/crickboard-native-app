function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { omitUndefined } from '../../../theme/tools/utils';
import Button from '../../primitives/Button';
import { HStack } from '../../primitives/Stack';

const Fab = (props, ref) => {
  const {
    label,
    icon,
    placement = 'bottom-right',
    ...newProps
  } = omitUndefined(props);
  const placementProps = {
    'top-right': {
      top: 4,
      right: 4,
      position: 'absolute'
    },
    'top-left': {
      top: 4,
      left: 4,
      position: 'absolute'
    },
    'bottom-right': {
      bottom: 4,
      right: 4,
      position: 'absolute'
    },
    'bottom-left': {
      bottom: 4,
      left: 4,
      position: 'absolute'
    }
  };
  return /*#__PURE__*/React.createElement(Button, _extends({
    variant: "unstyled",
    bg: "default.200",
    rounded: "full",
    zIndex: 20,
    p: 2
  }, placementProps[placement], newProps, {
    ref: ref
  }), icon && label ? /*#__PURE__*/React.createElement(HStack, {
    space: 1,
    justifyContent: "center",
    alignItems: "center"
  }, icon, label) : icon !== null && icon !== void 0 ? icon : label);
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Fab));
//# sourceMappingURL=Fab.js.map