{"version":3,"sources":["PopoverTrigger.tsx"],"names":["React","PopoverContext","PopoverTrigger","children","setPopoverTrigger","useContext","useEffect","Children","map","child","cloneElement","isDisabled","disabled","props","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,WAA/B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAwBJ,KAAK,CAACK,UAAN,CAAiBJ,cAAjB,CAA9B;AACAD,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpBF,IAAAA,iBAAiB,CACfJ,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA8BM,KAAD,IAAW;AACtC,0BAAOT,KAAK,CAACU,YAAN,CACLD,KADK,EAEL;AAAEE,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAFK,EAGLH,KAAK,CAACI,KAAN,CAAYV,QAHP,CAAP;AAKD,KAND,CADe,CAAjB;AASD,GAVD,EAUG,CAACC,iBAAD,EAAoBD,QAApB,CAVH;AAYA,SAAO,IAAP;AACD,CAfD;;AAiBA,4BAAeH,KAAK,CAACc,IAAN,CAAWZ,cAAX,CAAf","sourcesContent":["import React from 'react';\nimport { PopoverContext } from './popover';\n\nconst PopoverTrigger = ({ children }: any) => {\n  const { setPopoverTrigger } = React.useContext(PopoverContext);\n  React.useEffect(() => {\n    setPopoverTrigger(\n      React.Children.map(children, (child) => {\n        return React.cloneElement(\n          child,\n          { isDisabled: true, disabled: true },\n          child.props.children\n        );\n      })\n    );\n  }, [setPopoverTrigger, children]);\n\n  return null;\n};\n\nexport default React.memo(PopoverTrigger);\n"]}