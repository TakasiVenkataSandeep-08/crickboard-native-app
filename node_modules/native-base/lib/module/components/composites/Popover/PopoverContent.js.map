{"version":3,"sources":["PopoverContent.tsx"],"names":["React","styled","border","color","flexbox","layout","position","space","customBackground","customBorder","customExtra","customLayout","customOutline","customPosition","customShadow","default","Box","Tooltip","PopoverContext","StyledPopover","PopoverContent","children","props","PopoverRef","PopoverTrigger","onOpen","initialFocusRef","onClose","finalFocusRef","closeOnBlur","newProps","backgroundColor","borderColor","borderWidth","useContext","popoverContentProps","_width","size","current","focus","memo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,MAAjC,EAAyCC,QAAzC,EAAmDC,KAAnD,QAAgE,eAAhE;AACA,SACEC,gBADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,YAPF,QAQO,4BARP;AASA,SAASC,OAAO,IAAIC,GAApB,QAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,cAAT,QAA+B,WAA/B;AAEA,MAAMC,aAAa,GAAGlB,MAAM,CAACgB,OAAD,CAAN,CACpBd,KADoB,EAEpBI,KAFoB,EAGpBF,MAHoB,EAIpBD,OAJoB,EAKpBF,MALoB,EAMpBI,QANoB,EAOpBO,cAPoB,EAQpBJ,YARoB,EASpBD,gBAToB,EAUpBI,aAVoB,EAWpBE,YAXoB,EAYpBJ,WAZoB,EAapBC,YAboB,CAAtB;;AAeA,MAAMS,cAAc,GAAG,CAAC;AACtBC,EAAAA,QADsB;AAEtB,KAAGC;AAFmB,CAAD,KAGc;AACnC,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,eATI;AAUJC,IAAAA,WAVI;AAWJC,IAAAA;AAXI,MAYGjC,KAAK,CAACkC,UAAN,CAAiBhB,cAAjB,CAZT;AAaA,sBACE,oBAAC,aAAD,eACMY,QAAQ,CAACK,mBADf;AAEE,IAAA,KAAK,EAAEL,QAAQ,CAACM,MAAT,IAAmBN,QAAQ,CAACO,IAA5B,IAAoC,KAF7C;AAGE,IAAA,eAAe,EAAEN,eAHnB;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,GAAG,EAAEV,UANP;AAOE,IAAA,MAAM,EAAE,MAAM;AACZE,MAAAA,MAAM,IAAIA,MAAM,EAAhB;AACAC,MAAAA,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEY,OAAjB,CAAyBC,KAAzB;AACD,KAVH;AAWE,IAAA,OAAO,EAAE,MAAM;AACbZ,MAAAA,OAAO,IAAIA,OAAO,EAAlB;AACAC,MAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEU,OAAf,CAAuBC,KAAvB;AACD,KAdH;AAeE,IAAA,WAAW,EAAEV,WAAF,aAAEA,WAAF,cAAEA,WAAF,GAAiB,IAf9B;AAgBE,IAAA,OAAO,eACL,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC;AAAX,oBACE,oBAAC,GAAD,QAAMR,QAAN,CADF;AAjBJ,KAqBMC,KArBN,GAuBGE,cAvBH,CADF;AA2BD,CA5CD;;AA8CA,4BAAexB,KAAK,CAACwC,IAAN,CAAWpB,cAAX,CAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, position, space } from 'styled-system';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n} from '../../../utils/customProps';\nimport { default as Box } from '../../primitives/Box';\nimport Tooltip from './Tooltip';\nimport type { IPopoverProps } from './types';\nimport { PopoverContext } from './popover';\n\nconst StyledPopover = styled(Tooltip)<IPopoverProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\nconst PopoverContent = ({\n  children,\n  ...props\n}: IPopoverProps & { ref?: any }) => {\n  const {\n    PopoverRef,\n    PopoverTrigger,\n    onOpen,\n    initialFocusRef,\n    onClose,\n    finalFocusRef,\n    closeOnBlur,\n    newProps,\n    backgroundColor,\n    borderColor,\n    borderWidth,\n  }: any = React.useContext(PopoverContext);\n  return (\n    <StyledPopover\n      {...newProps.popoverContentProps}\n      width={newProps._width || newProps.size || '45%'}\n      backgroundColor={backgroundColor}\n      borderColor={borderColor}\n      borderWidth={borderWidth}\n      ref={PopoverRef}\n      onOpen={() => {\n        onOpen && onOpen();\n        initialFocusRef?.current.focus();\n      }}\n      onClose={() => {\n        onClose && onClose();\n        finalFocusRef?.current.focus();\n      }}\n      closeOnBlur={closeOnBlur ?? true}\n      popover={\n        <Box width=\"100%\">\n          <Box>{children}</Box>\n        </Box>\n      }\n      {...props}\n    >\n      {PopoverTrigger}\n    </StyledPopover>\n  );\n};\n\nexport default React.memo(PopoverContent);\n"]}