function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import View from '../../primitives/View';
import { default as CloseButton } from '../CloseButton';
import { PopoverContext } from './popover';

const PopoverCloseButton = props => {
  const {
    PopoverRef,
    newProps: {
      popoverCloseButtonProps
    }
  } = React.useContext(PopoverContext);
  return /*#__PURE__*/React.createElement(View, {
    position: "absolute",
    right: 0,
    top: 0,
    zIndex: 1
  }, /*#__PURE__*/React.createElement(CloseButton, _extends({}, popoverCloseButtonProps, props, {
    onPress: () => PopoverRef === null || PopoverRef === void 0 ? void 0 : PopoverRef.current.toggleTooltip()
  })));
};

export default /*#__PURE__*/React.memo(PopoverCloseButton);
//# sourceMappingURL=PopoverCloseButton.js.map