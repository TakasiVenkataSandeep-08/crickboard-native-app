function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components/native';
import { border, color, flexbox, layout, position, space } from 'styled-system';
import { customBackground, customBorder, customExtra, customLayout, customOutline, customPosition, customShadow } from '../../../utils/customProps';
import { default as Box } from '../../primitives/Box';
import Tooltip from './Tooltip';
import { PopoverContext } from './popover';
const StyledPopover = styled(Tooltip)(color, space, layout, flexbox, border, position, customPosition, customBorder, customBackground, customOutline, customShadow, customExtra, customLayout);

const PopoverContent = ({
  children,
  ...props
}) => {
  const {
    PopoverRef,
    PopoverTrigger,
    onOpen,
    initialFocusRef,
    onClose,
    finalFocusRef,
    closeOnBlur,
    newProps,
    backgroundColor,
    borderColor,
    borderWidth
  } = React.useContext(PopoverContext);
  return /*#__PURE__*/React.createElement(StyledPopover, _extends({}, newProps.popoverContentProps, {
    width: newProps._width || newProps.size || '45%',
    backgroundColor: backgroundColor,
    borderColor: borderColor,
    borderWidth: borderWidth,
    ref: PopoverRef,
    onOpen: () => {
      onOpen && onOpen();
      initialFocusRef === null || initialFocusRef === void 0 ? void 0 : initialFocusRef.current.focus();
    },
    onClose: () => {
      onClose && onClose();
      finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current.focus();
    },
    closeOnBlur: closeOnBlur !== null && closeOnBlur !== void 0 ? closeOnBlur : true,
    popover: /*#__PURE__*/React.createElement(Box, {
      width: "100%"
    }, /*#__PURE__*/React.createElement(Box, null, children))
  }, props), PopoverTrigger);
};

export default /*#__PURE__*/React.memo(PopoverContent);
//# sourceMappingURL=PopoverContent.js.map