function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components/native';
import Box from '../../primitives/Box';
import { useThemeProps } from '../../../hooks';
const StyledTag = styled(Box)({});

const Tag = ({
  style,
  ...props
}, ref) => {
  let newProps = useThemeProps('Tag', props);
  return /*#__PURE__*/React.createElement(StyledTag, _extends({
    style: style
  }, newProps, {
    ref: ref
  }));
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Tag));
//# sourceMappingURL=index.js.map