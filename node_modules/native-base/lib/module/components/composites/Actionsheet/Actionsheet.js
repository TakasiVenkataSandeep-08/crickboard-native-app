function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Modal } from '../../composites/Modal';
import { useThemeProps } from '../../../hooks';

const Actionsheet = ({
  children,
  ...props
}, ref) => {
  const {
    isOpen,
    disableOverlay,
    onClose,
    ...newProps
  } = useThemeProps('Actionsheet', props);
  return /*#__PURE__*/React.createElement(Modal, _extends({
    isOpen: isOpen,
    onClose: onClose,
    justifyContent: "flex-end",
    motionPreset: "slide"
  }, newProps, {
    ref: ref
  }), disableOverlay ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(Modal.Overlay, null), children);
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Actionsheet));
//# sourceMappingURL=Actionsheet.js.map