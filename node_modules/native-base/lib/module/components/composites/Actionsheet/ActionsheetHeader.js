function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Box from '../../primitives/Box';
import { useThemeProps } from '../../../hooks';

const ActionsheetHeader = ({
  children,
  ...props
}) => {
  const newProps = useThemeProps('ActionsheetHeader', props);
  return /*#__PURE__*/React.createElement(Box, _extends({
    fontWeight: "bold",
    justifyContent: "center",
    alignItems: "center",
    fontSize: "md",
    color: "gray.900"
  }, newProps), children);
};

export default /*#__PURE__*/React.memo(ActionsheetHeader);
//# sourceMappingURL=ActionsheetHeader.js.map