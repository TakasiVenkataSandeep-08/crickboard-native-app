import React from 'react';
import Box from '../../primitives/Box';
import { AccordionContext, AccordionItemContext } from './Context';
import { useThemeProps } from '../../../hooks';

const AccordionItem = ({
  children,
  index: pIndex = 0,
  isDisabled,
  ...props
}) => {
  const {
    index: cIndex,
    changeHandler
  } = React.useContext(AccordionContext);
  const { ...newProps
  } = useThemeProps('AccordionItem', props);
  const isOpen = cIndex === null || cIndex === void 0 ? void 0 : cIndex.includes(pIndex);

  const onClose = cb => {
    changeHandler && changeHandler(false, pIndex);
    cb && cb();
  };

  const onOpen = cb => {
    changeHandler && changeHandler(true, pIndex);
    cb && cb();
  };

  const childSetter = () => {
    if (typeof children === 'function') return children({
      isExpanded: isOpen,
      isDisabled
    });
    return children;
  };

  return /*#__PURE__*/React.createElement(AccordionItemContext.Provider, {
    value: {
      index: pIndex,
      isOpen,
      isDisabled,
      onClose,
      onOpen
    }
  }, /*#__PURE__*/React.createElement(Box, newProps, childSetter()));
};

export default /*#__PURE__*/React.memo(AccordionItem);
//# sourceMappingURL=AccordionItem.js.map