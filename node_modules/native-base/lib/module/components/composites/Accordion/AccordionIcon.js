function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Icon from '../../primitives/Icon';
import { AccordionItemContext } from './Context';
import { useThemeProps } from '../../../hooks';

const AccordionIcon = ({ ...props
}) => {
  const {
    isOpen
  } = React.useContext(AccordionItemContext);
  const { ...newProps
  } = useThemeProps('AccordionIcon', props);
  return /*#__PURE__*/React.createElement(Icon, _extends({
    name: isOpen ? 'chevron-small-up' : 'chevron-small-down',
    type: "Entypo"
  }, newProps));
};

export default /*#__PURE__*/React.memo(AccordionIcon);
//# sourceMappingURL=AccordionIcon.js.map