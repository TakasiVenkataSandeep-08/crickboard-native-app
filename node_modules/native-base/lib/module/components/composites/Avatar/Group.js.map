{"version":3,"sources":["Group.tsx"],"names":["React","Flex","useThemeProps","isNil","default","Avatar","getAvatarGroupChildren","children","spacing","max","plusAvatarBg","props","childrenArray","Children","toArray","plusAvatars","length","slice","trailingChildren","defaultProps","ml","map","reverse","child","cloneElement","AvatarGroup","allProps","ref","borderColor","borderWidth","bg","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,SAASC,OAAO,IAAIC,MAApB,QAAkC,UAAlC;;AAEA,MAAMC,sBAAsB,GAAG,CAC7BC,QAD6B,EAE7BC,OAF6B,EAG7BC,GAH6B,EAI7BC,YAJ6B,EAK7BC,KAL6B,KAM1B;AACH,MAAIC,aAAkB,GAAGZ,KAAK,CAACa,QAAN,CAAeC,OAAf,CAAuBP,QAAvB,CAAzB;AACA,MAAIQ,WAAmB,GAAG,CAA1B;;AACA,MAAI,CAACZ,KAAK,CAACM,GAAD,CAAN,IAAeA,GAAG,GAAGG,aAAa,CAACI,MAAnC,IAA6CP,GAAG,GAAG,CAAvD,EAA0D;AACxDM,IAAAA,WAAW,GAAGH,aAAa,CAACI,MAAd,GAAuBP,GAArC;AACAG,IAAAA,aAAa,GAAGA,aAAa,CAACK,KAAd,CAAoB,CAApB,EAAuBR,GAAvB,CAAhB;AACD;;AACD,MAAIS,gBAAgB,GAAGN,aAAa,CAACK,KAAd,CAAoB,CAApB,CAAvB;AACA,QAAME,YAAY,GAAG;AACnBC,IAAAA,EAAE,EAAEjB,KAAK,CAACK,OAAD,CAAL,GAAiB,CAAC,CAAlB,GAAsBA;AADP,GAArB;AAGA,SAAO,CACLO,WAAW,GAAG,CAAd,gBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAEL;AAAZ,KAA8BS,YAA9B,EAAgDR,KAAhD,GACG,OAAOI,WADV,CADF,GAII,IALC,EAMLf,KAAK,CAACa,QAAN,CAAeQ,GAAf,CAAmBH,gBAAgB,CAACI,OAAjB,EAAnB,EAAgDC,KAAD,IAAgB;AAC7D,wBAAOvB,KAAK,CAACwB,YAAN,CACLD,KADK,EAEL,EACE,GAAGZ,KADL;AAEE,SAAGQ,YAFL;AAGE,SAAGI,KAAK,CAACZ;AAHX,KAFK,EAOLY,KAAK,CAACZ,KAAN,CAAYJ,QAPP,CAAP;AASD,GAVD,CANK,eAiBLP,KAAK,CAACwB,YAAN,CACEZ,aAAa,CAAC,CAAD,CADf,EAEE,EACE,GAAGD,KADL;AAEE,OAAGC,aAAa,CAAC,CAAD,CAAb,CAAiBD;AAFtB,GAFF,EAMEC,aAAa,CAAC,CAAD,CAAb,CAAiBD,KAAjB,CAAuBJ,QANzB,CAjBK,CAAP;AA0BD,CA3CD;;AA6CA,MAAMkB,WAAW,GAAG,CAACC,QAAD,EAA8BC,GAA9B,KAA2C;AAC7D,QAAM;AAAEpB,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,GAArB;AAA0B,OAAGE;AAA7B,MAAuCe,QAA7C;AACA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,WAAf;AAA4BC,IAAAA;AAA5B,MAAmC5B,aAAa,CAAC,aAAD,EAAgBS,KAAhB,CAAtD;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,GAAG,EAAEgB;AAAnC,KACGrB,sBAAsB,CAACC,QAAD,EAAWC,OAAX,EAAoBC,GAApB,EAAyBqB,EAAzB,EAA6B;AAClDF,IAAAA,WADkD;AAElDC,IAAAA,WAFkD;AAGlD,OAAGlB;AAH+C,GAA7B,CADzB,CADF;AASD,CAZD;;AAcA,4BAAeX,KAAK,CAAC+B,IAAN,eAAW/B,KAAK,CAACgC,UAAN,CAAiBP,WAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport Flex from '../../primitives/Flex';\nimport { useThemeProps } from '../../../hooks';\nimport isNil from 'lodash/isNil';\nimport type { IAvatarGroupProps } from './types';\nimport { default as Avatar } from './Avatar';\n\nconst getAvatarGroupChildren = (\n  children?: JSX.Element[] | JSX.Element,\n  spacing?: number,\n  max?: number,\n  plusAvatarBg?: string,\n  props?: any\n) => {\n  let childrenArray: any = React.Children.toArray(children);\n  let plusAvatars: number = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  let trailingChildren = childrenArray.slice(1);\n  const defaultProps = {\n    ml: isNil(spacing) ? -4 : spacing,\n  };\n  return [\n    plusAvatars > 0 ? (\n      <Avatar bg={plusAvatarBg} {...defaultProps} {...props}>\n        {'+ ' + plusAvatars}\n      </Avatar>\n    ) : null,\n    React.Children.map(trailingChildren.reverse(), (child: any) => {\n      return React.cloneElement(\n        child,\n        {\n          ...props,\n          ...defaultProps,\n          ...child.props,\n        },\n        child.props.children\n      );\n    }),\n    React.cloneElement(\n      childrenArray[0],\n      {\n        ...props,\n        ...childrenArray[0].props,\n      },\n      childrenArray[0].props.children\n    ),\n  ];\n};\n\nconst AvatarGroup = (allProps: IAvatarGroupProps, ref: any) => {\n  const { children, spacing, max, ...props } = allProps;\n  const { borderColor, borderWidth, bg } = useThemeProps('AvatarBadge', props);\n  return (\n    <Flex direction=\"row-reverse\" ref={ref}>\n      {getAvatarGroupChildren(children, spacing, max, bg, {\n        borderColor,\n        borderWidth,\n        ...props,\n      })}\n    </Flex>\n  );\n};\n\nexport default React.memo(React.forwardRef(AvatarGroup));\n"]}