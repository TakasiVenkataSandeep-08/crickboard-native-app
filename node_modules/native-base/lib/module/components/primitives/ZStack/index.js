function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { default as View } from '../View';
import styled from 'styled-components/native';
import { getAbsoluteChildren } from '../../../utils';
const StyledZStack = styled(View)({});

const ZStack = ({
  children,
  reversed,
  ...props
}, ref) => {
  return /*#__PURE__*/React.createElement(StyledZStack, _extends({}, props, {
    ref: ref
  }), getAbsoluteChildren(children, reversed));
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(ZStack));
//# sourceMappingURL=index.js.map