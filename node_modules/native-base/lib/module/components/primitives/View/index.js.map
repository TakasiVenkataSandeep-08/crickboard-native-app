{"version":3,"sources":["index.tsx"],"names":["React","styled","border","color","flexbox","layout","space","position","View","RNView","customBorder","customBackground","customOutline","customLayout","customExtra","customShadow","customTypography","customPosition","useThemeProps","useSafeArea","StyledView","props","ref","viewProps","safeProps","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,MAAjC,EAAyCC,KAAzC,EAAgDC,QAAhD,QAAgE,eAAhE;AACA,SAASC,IAAI,IAAIC,MAAjB,QAA+B,cAA/B;AACA,SACEC,YADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,gBAPF,EAQEC,cARF,QASO,4BATP;AAWA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,MAAMC,UAAe,GAAGnB,MAAM,CAACQ,MAAD,CAAN,CACtBN,KADsB,EAEtBG,KAFsB,EAGtBD,MAHsB,EAItBD,OAJsB,EAKtBF,MALsB,EAMtBK,QANsB,EAOtBU,cAPsB,EAQtBP,YARsB,EAStBC,gBATsB,EAUtBC,aAVsB,EAWtBG,YAXsB,EAYtBD,WAZsB,EAatBE,gBAbsB,EActBH,YAdsB,CAAxB;;AAiBA,MAAML,IAAI,GAAG,CAACa,KAAD,EAAoBC,GAApB,KAAiC;AAC5C,QAAMC,SAAS,GAAGL,aAAa,CAAC,MAAD,EAASG,KAAT,CAA/B;AACA,QAAMG,SAAS,GAAGL,WAAW,CAACI,SAAD,CAA7B;AACA,sBAAO,oBAAC,UAAD,eAAgBC,SAAhB;AAA2B,IAAA,GAAG,EAAEF;AAAhC,KAAP;AACD,CAJD;;AAKA,4BAAetB,KAAK,CAACyB,IAAN,eAAWzB,KAAK,CAAC0B,UAAN,CAAiBlB,IAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, space, position } from 'styled-system';\nimport { View as RNView } from 'react-native';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\n\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { useSafeArea } from '../../../hooks/useSafeArea';\nimport type { IViewProps } from './types';\nconst StyledView: any = styled(RNView)<IViewProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customTypography,\n  customLayout\n);\n\nconst View = (props: IViewProps, ref: any) => {\n  const viewProps = useThemeProps('View', props);\n  const safeProps = useSafeArea(viewProps);\n  return <StyledView {...safeProps} ref={ref} />;\n};\nexport default React.memo(React.forwardRef(View));\nexport type { IViewProps };\n"]}