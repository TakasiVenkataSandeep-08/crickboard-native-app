function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components/native';
import { border, color, flexbox, layout, space, position } from 'styled-system';
import { View as RNView } from 'react-native';
import { customBorder, customBackground, customOutline, customLayout, customExtra, customShadow, customTypography, customPosition } from '../../../utils/customProps';
import { useThemeProps } from '../../../hooks/useThemeProps';
import { useSafeArea } from '../../../hooks/useSafeArea';
const StyledView = styled(RNView)(color, space, layout, flexbox, border, position, customPosition, customBorder, customBackground, customOutline, customShadow, customExtra, customTypography, customLayout);

const View = (props, ref) => {
  const viewProps = useThemeProps('View', props);
  const safeProps = useSafeArea(viewProps);
  return /*#__PURE__*/React.createElement(StyledView, _extends({}, safeProps, {
    ref: ref
  }));
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(View));
//# sourceMappingURL=index.js.map