function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Box from '../Box';
import { SliderContext } from './Context';

const SliderTrack = ({
  children,
  ...props
}) => {
  const {
    sliderSize,
    trackColor,
    orientation
  } = React.useContext(SliderContext);
  return /*#__PURE__*/React.createElement(Box, _extends({
    position: "absolute",
    backgroundColor: trackColor,
    height: orientation === 'vertical' ? '100%' : "".concat(sliderSize, "px"),
    borderRadius: 999,
    width: orientation === 'vertical' ? "".concat(sliderSize, "px") : '100%'
  }, props, {
    overflow: "hidden"
  }), children);
};

export default SliderTrack;
//# sourceMappingURL=SliderTrack.js.map