function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { createContext } from 'react';
import { useCheckboxGroupState } from '@react-stately/checkbox';
import { useCheckboxGroup } from '@react-native-aria/checkbox';
import { FormControlContext } from '../../composites/FormControl';
import Box from '../Box';
export let CheckboxGroupContext = /*#__PURE__*/createContext(null);

function CheckboxGroup({
  size,
  colorScheme,
  ...props
}, ref) {
  let {
    children
  } = props;
  let state = useCheckboxGroupState(props);
  let {
    groupProps
  } = useCheckboxGroup(props, state);
  const formControlContext = React.useContext(FormControlContext);
  return /*#__PURE__*/React.createElement(CheckboxGroupContext.Provider, {
    value: {
      size,
      colorScheme,
      ...formControlContext,
      state
    }
  }, /*#__PURE__*/React.createElement(Box, _extends({
    alignItems: "flex-start"
  }, groupProps, props, {
    ref: ref
  }), children));
}

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(CheckboxGroup));
//# sourceMappingURL=CheckboxGroup.js.map