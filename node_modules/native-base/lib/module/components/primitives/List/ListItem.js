function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Box from '../Box';
import { useThemeProps } from '../../../hooks';
const ListItem = /*#__PURE__*/React.memo(({
  children,
  ...props
}) => {
  const {
    index,
    start,
    unordered,
    ul,
    ordered,
    ol,
    _text,
    borderTopWidth,
    ...newProps
  } = useThemeProps('ListItem', props);
  return /*#__PURE__*/React.createElement(Box, _extends({
    flexDirection: "row",
    alignItems: "center"
  }, newProps, {
    borderTopWidth: index ? borderTopWidth : 0
  }), /*#__PURE__*/React.createElement(Box, {
    flexDirection: "row",
    alignItems: "center",
    pl: 2
  }, ul || unordered ?
  /*#__PURE__*/
  //Adding disc in front of ListItem
  React.createElement(Box, {
    style: {
      transform: [{
        scale: 1.5
      }]
    },
    mr: 2,
    _text: {
      fontWeight: 'bold',
      ..._text
    }
  }, "\u2022") : null, ol || ordered ?
  /*#__PURE__*/
  //Adding index number in front of ListItem
  React.createElement(Box, {
    mr: 2,
    _text: {
      fontWeight: 'bold',
      ..._text
    }
  }, index + start + '.') : null), /*#__PURE__*/React.createElement(Box, {
    flexDirection: "row",
    alignItems: "center",
    _text: { ..._text
    }
  }, children));
});
export default /*#__PURE__*/React.memo(ListItem);
//# sourceMappingURL=ListItem.js.map