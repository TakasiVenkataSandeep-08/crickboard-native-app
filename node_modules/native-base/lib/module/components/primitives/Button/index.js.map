{"version":3,"sources":["index.tsx"],"names":["React","TouchableOpacity","Platform","styled","border","color","flexbox","layout","position","space","useThemeProps","themeTools","customBackground","customBorder","customExtra","customLayout","customOutline","customPosition","customShadow","Text","default","Box","Flex","Spinner","useButton","StyledButton","Button","style","children","highlight","isLoading","isLoadingText","size","startIcon","endIcon","spinner","props","ref","_text","newProps","layoutProps","viewProps","extractInObject","commonProps","accessibilityProps","innerButtonProps","isDisabled","innerButton","Math","floor","px","Children","count","ariaProps","OS","disabled","cursor","ButtonGroup","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAGEC,QAHF,QAIO,cAJP;AAKA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,MAAjC,EAAyCC,QAAzC,EAAmDC,KAAnD,QAAgE,eAAhE;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SACEC,gBADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,YAPF,QAQO,4BARP;AASA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,OAAO,IAAIC,GAApB,QAA0C,QAA1C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AAEA,MAAMC,YAAY,GAAGtB,MAAM,CAACF,gBAAD,CAAN,CAGnBI,KAHmB,EAInBI,KAJmB,EAKnBF,MALmB,EAMnBD,OANmB,EAOnBF,MAPmB,EAQnBI,QARmB,EASnBS,cATmB,EAUnBJ,YAVmB,EAWnBD,gBAXmB,EAYnBI,aAZmB,EAanBE,YAbmB,EAcnBJ,WAdmB,EAenBC,YAfmB,CAArB;;AAiBA,MAAMW,MAAM,GAAG,CACb;AACEC,EAAAA,KADF;AAEEC,EAAAA,QAFF;AAGEC,EAAAA,SAHF;AAIEC,EAAAA,SAJF;AAKEC,EAAAA,aALF;AAMEC,EAAAA,IANF;AAOEC,EAAAA,SAPF;AAQEC,EAAAA,OARF;AASEC,EAAAA,OATF;AAUE,KAAGC;AAVL,CADa,EAabC,GAba,KAcV;AACH,QAAM;AAAEC,IAAAA,KAAF;AAAS,OAAGC;AAAZ,MAAyB7B,aAAa,CAAC,QAAD,EAAW,EACrD,GAAG0B,KADkD;AAErDJ,IAAAA;AAFqD,GAAX,CAA5C;AAIA,MAAI,CAACQ,WAAD,EAAcC,SAAd,IAA2B9B,UAAU,CAAC+B,eAAX,CAA2BH,QAA3B,EAAqC,CAClE,GADkE,EAElE,QAFkE,EAGlE,IAHkE,EAIlE,WAJkE,EAKlE,IALkE,EAMlE,aANkE,EAOlE,IAPkE,EAQlE,cARkE,EASlE,IATkE,EAUlE,YAVkE,EAWlE,IAXkE,EAYlE,SAZkE,EAalE,IAbkE,EAclE,SAdkE,EAelE,MAfkE,EAgBlE,KAhBkE,EAiBlE,QAjBkE,EAkBlE,OAlBkE,EAmBlE,UAnBkE,EAoBlE,MApBkE,EAqBlE,WArBkE,EAsBlE,UAtBkE,EAuBlE,MAvBkE,EAwBlE,QAxBkE,EAyBlE,OAzBkE,CAArC,CAA/B;AA2BA,QAAM,CAACI,WAAD,IAAgBhC,UAAU,CAAC+B,eAAX,CAA2BF,WAA3B,EAAwC,CAC5D,MAD4D,EAE5D,WAF4D,EAG5D,UAH4D,EAI5D,MAJ4D,EAK5D,QAL4D,EAM5D,OAN4D,CAAxC,CAAtB;AAQA,MAAI,CACFI,kBADE,EAEFC,gBAFE,IAGAlC,UAAU,CAAC+B,eAAX,CAA2BD,SAA3B,EAAsC,CACxC,YADwC,EAExC,mBAFwC,EAGxC,oBAHwC,EAIxC,oBAJwC,EAKxC,mBALwC,EAMxC,YANwC,EAOxC,SAPwC,CAAtC,CAHJ;AAYAG,EAAAA,kBAAkB,CAACE,UAAnB,GAAgCF,kBAAkB,CAACE,UAAnB,IAAiChB,SAAjE;AACA,QAAMiB,WAAW,gBACf,oBAAC,GAAD,eAASF,gBAAT,EAA+BF,WAA/B,GACGV,SAAS,gBACR,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAEe,IAAI,CAACC,KAAL,CAAWJ,gBAAgB,CAACK,EAAjB,GAAsB,CAAjC,KAAuC;AAAhD,KAAoDjB,SAApD,CADQ,GAEN,IAHN,EAIGH,SAAS,gBACR,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC;AAAhB,KACGK,OAAO,GAAGA,OAAH,gBAAa,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEG,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEjC,KAAvB;AAA8B,IAAA,IAAI,EAAC;AAAnC,IADvB,eAEE,oBAAC,IAAD,EAAUiC,KAAV,EAAkBP,aAAa,GAAG,MAAMA,aAAT,GAAyB,EAAxD,CAFF,CADQ,GAKN/B,KAAK,CAACmD,QAAN,CAAeC,KAAf,CAAqBxB,QAArB,IAAiC,CAAjC,IAAsC,OAAOA,QAAP,KAAoB,QAA1D,GACFA,QADE,gBAGF,oBAAC,IAAD,EAAUU,KAAV,EAAkBV,QAAlB,CAZJ,EAcGM,OAAO,gBACN,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAEc,IAAI,CAACC,KAAL,CAAWJ,gBAAgB,CAACK,EAAjB,GAAsB,CAAjC,KAAuC;AAAhD,KAAoDhB,OAApD,CADM,GAEJ,IAhBN,CADF;AAqBA,QAAMmB,SAAS,GAAG7B,SAAS,CACzB,EACE,GAAGoB,kBADL;AAEEhB,IAAAA;AAFF,GADyB,EAKzBS,GALyB,CAA3B;AAOA,sBACE,oBAAC,YAAD;AACE,IAAA,aAAa,EAAER,SAAS,GAAGA,SAAH,GAAe,GADzC;AAEE,IAAA,GAAG,EAAEQ,GAFP;AAGE,IAAA,KAAK,EAAEV;AAHT,KAIMiB,kBAJN,EAKMS,SALN,EAMMb,WANN;AAOE,IAAA,OAAO,EAAEV,SAAS,GAAG,GAAH,GAASc,kBAAkB,CAACE,UAAnB,GAAgC,GAAhC,GAAsC;AAPnE,KAQO5C,QAAQ,CAACoD,EAAT,KAAgB,KAAhB,GACD;AACEC,IAAAA,QAAQ,EAAEX,kBAAkB,CAACE,UAD/B;AAEEU,IAAAA,MAAM,EAAEZ,kBAAkB,CAACE,UAAnB,GAAgC,aAAhC,GAAgD;AAF1D,GADC,GAKD,EAbN,GAeGC,WAfH,CADF;AAmBD,CAlHD;;AAoHA,SAASU,WAAT,QAA4B,eAA5B;AAEA,4BAAezD,KAAK,CAAC0D,IAAN,eAAW1D,KAAK,CAAC2D,UAAN,CAAiBjC,MAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport {\n  TouchableOpacity,\n  TouchableOpacityProps,\n  Platform,\n} from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, position, space } from 'styled-system';\nimport { useThemeProps } from '../../../hooks';\nimport { themeTools } from '../../../theme';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n} from '../../../utils/customProps';\nimport Text from '../../primitives/Text';\nimport { default as Box, IBoxProps } from '../Box';\nimport Flex from '../Flex';\nimport Spinner from '../Spinner';\nimport type { IButtonGroupProps, IButtonProps } from './types';\nimport { useButton } from '@react-native-aria/button';\n\nconst StyledButton = styled(TouchableOpacity)<\n  IButtonProps & TouchableOpacityProps\n>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\nconst Button = (\n  {\n    style,\n    children,\n    highlight,\n    isLoading,\n    isLoadingText,\n    size,\n    startIcon,\n    endIcon,\n    spinner,\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const { _text, ...newProps } = useThemeProps('Button', {\n    ...props,\n    size,\n  });\n  let [layoutProps, viewProps] = themeTools.extractInObject(newProps, [\n    'm',\n    'margin',\n    'mt',\n    'marginTop',\n    'mr',\n    'marginRight',\n    'mb',\n    'marginBottom',\n    'ml',\n    'marginLeft',\n    'mx',\n    'marginX',\n    'my',\n    'marginY',\n    'left',\n    'top',\n    'bottom',\n    'right',\n    'position',\n    'minH',\n    'minHeight',\n    'minWidth',\n    'minW',\n    'height',\n    'width',\n  ]);\n  const [commonProps] = themeTools.extractInObject(layoutProps, [\n    'minH',\n    'minHeight',\n    'minWidth',\n    'minW',\n    'height',\n    'width',\n  ]);\n  let [\n    accessibilityProps,\n    innerButtonProps,\n  ] = themeTools.extractInObject(viewProps, [\n    'accessible',\n    'accessibilityRole',\n    'accessibilityState',\n    'accessibilityLabel',\n    'accessibilityHint',\n    'isDisabled',\n    'onPress',\n  ]);\n  accessibilityProps.isDisabled = accessibilityProps.isDisabled || isLoading;\n  const innerButton = (\n    <Box {...innerButtonProps} {...commonProps}>\n      {startIcon ? (\n        <Box mr={Math.floor(innerButtonProps.px / 2) || 2}>{startIcon}</Box>\n      ) : null}\n      {isLoading ? (\n        <Flex direction=\"row\">\n          {spinner ? spinner : <Spinner color={_text?.color} size=\"sm\" />}\n          <Text {..._text}>{isLoadingText ? ' ' + isLoadingText : ''}</Text>\n        </Flex>\n      ) : React.Children.count(children) > 1 || typeof children !== 'string' ? (\n        children\n      ) : (\n        <Text {..._text}>{children}</Text>\n      )}\n      {endIcon ? (\n        <Box ml={Math.floor(innerButtonProps.px / 2) || 2}>{endIcon}</Box>\n      ) : null}\n    </Box>\n  );\n\n  const ariaProps = useButton(\n    {\n      ...accessibilityProps,\n      children,\n    },\n    ref\n  );\n  return (\n    <StyledButton\n      activeOpacity={highlight ? highlight : 0.8}\n      ref={ref}\n      style={style}\n      {...accessibilityProps}\n      {...ariaProps}\n      {...layoutProps}\n      opacity={isLoading ? 0.8 : accessibilityProps.isDisabled ? 0.5 : 1}\n      {...(Platform.OS === 'web'\n        ? {\n            disabled: accessibilityProps.isDisabled,\n            cursor: accessibilityProps.isDisabled ? 'not-allowed' : 'auto',\n          }\n        : {})}\n    >\n      {innerButton}\n    </StyledButton>\n  );\n};\n\nexport { ButtonGroup } from './ButtonGroup';\nexport type { IButtonProps, IButtonGroupProps };\nexport default React.memo(React.forwardRef(Button));\n"]}