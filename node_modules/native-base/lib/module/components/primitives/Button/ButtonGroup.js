import React from 'react';
import styled from 'styled-components/native';
import { border, color, flexbox, layout, position, space } from 'styled-system';
import { customBackground, customBorder, customExtra, customLayout, customOutline, customPosition, customShadow } from '../../../utils/customProps';
const StyledButtonGroup = styled.View(color, space, layout, flexbox, border, position, customPosition, customBorder, customBackground, customOutline, customShadow, customExtra, customLayout, {
  flexDirection: 'row',
  flexWrap: 'wrap'
});
export const ButtonGroup = /*#__PURE__*/React.memo(({
  children,
  spacing,
  ...props
}) => {
  return /*#__PURE__*/React.createElement(StyledButtonGroup, null, React.Children.map(children, (child, index) => {
    return /*#__PURE__*/React.cloneElement(child, {
      ml: index !== 0 ? spacing : undefined,
      ...props
    });
  }));
});
//# sourceMappingURL=ButtonGroup.js.map