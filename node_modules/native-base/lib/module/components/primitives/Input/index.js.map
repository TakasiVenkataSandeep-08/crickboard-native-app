{"version":3,"sources":["index.tsx"],"names":["React","TextInput","Animated","Platform","styled","border","flex","space","color","flexbox","layout","typography","customBorder","customBackground","customOutline","customLayout","customExtra","customShadow","customTypography","Box","Text","Flex","InputRightAddon","InputGroup","InputLeftAddon","useThemeProps","useToken","themeTools","useHover","FormControlContext","StyledInput","Input","style","placeholder","errorMessage","_errorMessage","isFullWidth","onFocus","onBlur","ariaLabel","accessibilityLabel","InputLeftElement","InputRightElement","type","w","width","h","height","m","mr","ml","mt","mb","label","_label","placeholderTextColor","props","ref","formControlContext","useContext","layoutProps","isFocused","setIsFocused","useState","handleFocus","focusState","callback","placeholderColor","isInvalid","isDisabled","isReadOnly","borderColor","borderColorFromProps","fontSize","borderWidth","focusBorderColor","errorBorderColor","hoverBorderColor","borderBottomWidth","newProps","computedProps","display","flexDirection","rem","extractInObject","slideAnim","useRef","Value","current","slideIn","timing","toValue","duration","useNativeDriver","OS","start","slideOut","Math","floor","_ref","isHovered","updatedBorderColor","focusStyle","shadow","shadowColor","_isDisabledProps","transform","translateY","translateX","e","persist","nativeEvent","text","undefined","disabled","cursor","outline","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,cAA9C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,UAPF,QAQO,eARP;AASA,SACEC,YADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,gBAPF,QAQO,4BARP;AASA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,cAAtC,QAA4D,cAA5D;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,gBAAxC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SACEC,kBADF,QAGO,8BAHP;AAKA,MAAMC,WAAW,GAAG1B,MAAM,CAACH,SAAD,CAAN,CAClBK,IADkB,EAElBE,KAFkB,EAGlBD,KAHkB,EAIlBG,MAJkB,EAKlBD,OALkB,EAMlBJ,MANkB,EAOlBM,UAPkB,EAQlBC,YARkB,EASlBC,gBATkB,EAUlBC,aAVkB,EAWlBG,YAXkB,EAYlBD,WAZkB,EAalBE,gBAbkB,EAclBH,YAdkB,CAApB;;AAiBA,MAAMgB,KAAK,GAAG,CACZ;AACEC,EAAAA,KADF;AAEEC,EAAAA,WAFF;AAGEC,EAAAA,YAHF;AAIEC,EAAAA,aAJF;AAKE;AACAC,EAAAA,WANF;AAOEC,EAAAA,OAPF;AAQEC,EAAAA,MARF;AASEC,EAAAA,SATF;AAUEC,EAAAA,kBAVF;AAWEC,EAAAA,gBAXF;AAYEC,EAAAA,iBAZF;AAaEC,EAAAA,IAbF;AAcEC,EAAAA,CAdF;AAeEC,EAAAA,KAfF;AAgBEC,EAAAA,CAhBF;AAiBEC,EAAAA,MAjBF;AAkBEC,EAAAA,CAlBF;AAmBEC,EAAAA,EAnBF;AAoBEC,EAAAA,EApBF;AAqBEC,EAAAA,EArBF;AAsBEC,EAAAA,EAtBF;AAuBEC,EAAAA,KAvBF;AAwBEC,EAAAA,MAxBF;AAyBEC,EAAAA,oBAzBF;AA0BE,KAAGC;AA1BL,CADY,EA6BZC,GA7BY,KA8BT;AACH,QAAMC,kBAAuC,GAAG1D,KAAK,CAAC2D,UAAN,CAC9C9B,kBAD8C,CAAhD;AAGA,QAAM+B,WAAW,GAAG;AAClBhB,IAAAA,CADkB;AAElBC,IAAAA,KAFkB;AAGlBG,IAAAA,CAHkB;AAIlBC,IAAAA,EAJkB;AAKlBC,IAAAA,EALkB;AAMlBC,IAAAA,EANkB;AAOlBC,IAAAA;AAPkB,GAApB;AASA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4B9D,KAAK,CAAC+D,QAAN,CAAe,KAAf,CAAlC;;AACA,QAAMC,WAAW,GAAG,CAACC,UAAD,EAAsBC,QAAtB,KAAwC;AAC1DJ,IAAAA,YAAY,CAACG,UAAD,CAAZ;AACAC,IAAAA,QAAQ;AACT,GAHD;;AAKA,MAAIC,gBAAgB,GAAGzC,QAAQ,CAAC,QAAD,EAAW6B,oBAAX,aAAWA,oBAAX,cAAWA,oBAAX,GAAmC,UAAnC,CAA/B;;AAEA,MAAI,OAAOY,gBAAP,KAA4B,QAAhC,EAA0C;AACxCA,IAAAA,gBAAgB,GAAGZ,oBAAnB;AACD;;AACD,QAAM;AACJa,IAAAA,SADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,WAAW,EAAEC,oBAJT;AAKJC,IAAAA,QALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,gBAPI;AAQJC,IAAAA,gBARI;AASJC,IAAAA,gBATI;AAUJC,IAAAA,iBAVI;AAWJ,OAAGC;AAXC,MAYFtD,aAAa,CAAC,OAAD,EAAU,EAAE,GAAGiC,kBAAL;AAAyB,OAAGF;AAA5B,GAAV,CAZjB;AAcA,QAAMwB,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE,MADW;AAEpBC,IAAAA,aAAa,EAAE,KAFK;AAGpBpC,IAAAA,CAHoB;AAIpBC,IAAAA;AAJoB,GAAtB;AAMA,MAAI,GAAGoC,GAAH,IAAUxD,UAAU,CAACyD,eAAX,CAA2BL,QAA3B,EAAqC,CACjD,GADiD,EAEjD,IAFiD,EAGjD,IAHiD,EAIjD,IAJiD,EAKjD,IALiD,EAMjD,IANiD,EAOjD,IAPiD,CAArC,CAAd;AAUA,QAAMM,SAAS,GAAGrF,KAAK,CAACsF,MAAN,CAAa,IAAIpF,QAAQ,CAACqF,KAAb,CAAmB,CAAnB,CAAb,EAAoCC,OAAtD;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpBvF,IAAAA,QAAQ,CAACwF,MAAT,CAAgBL,SAAhB,EAA2B;AACzBM,MAAAA,OAAO,EAAE,CADgB;AAEzBC,MAAAA,QAAQ,EAAE,GAFe;AAGzBC,MAAAA,eAAe,EAAE1F,QAAQ,CAAC2F,EAAT,KAAgB;AAHR,KAA3B,EAIGC,KAJH;AAKD,GAND;;AAQA,QAAMC,QAAQ,GAAG,MAAM;AACrB9F,IAAAA,QAAQ,CAACwF,MAAT,CAAgBL,SAAhB,EAA2B;AACzB;AACAM,MAAAA,OAAO,EAAE,EAAE,KAAKM,IAAI,CAACC,KAAL,CAAWzB,QAAQ,GAAG,CAAtB,CAAL,GAAgC,CAAlC,CAFgB;AAGzBmB,MAAAA,QAAQ,EAAE,GAHe;AAIzBC,MAAAA,eAAe,EAAE1F,QAAQ,CAAC2F,EAAT,KAAgB;AAJR,KAA3B,EAKGC,KALH;AAMD,GAPD;;AASA,QAAMI,IAAI,GAAGnG,KAAK,CAACsF,MAAN,CAAa,IAAb,CAAb;;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAgBxE,QAAQ,CAAC,EAAD,EAAKuE,IAAL,CAA9B;AAEA,MAAIE,kBAAkB,GAAG7B,oBAAzB;AACA,MAAI4B,SAAJ,EAAeC,kBAAkB,GAAGxB,gBAArB,CAAf,KACK,IAAIhB,SAAJ,EAAewC,kBAAkB,GAAG1B,gBAArB,CAAf,KACA,IAAIP,SAAJ,EAAeiC,kBAAkB,GAAGzB,gBAArB;AACpB,QAAM0B,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE,CADS;AAEjBC,IAAAA,WAAW,EAAE;AAFI,GAAnB;AAKA,sBACE,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAEpE,WAAW,GAAG,MAAH,GAAY;AAA/B,KAA2CwB,WAA3C,gBACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEuC,IADP;AAEE,IAAA,WAAW,EAAEE,kBAFf;AAGE,IAAA,WAAW,EAAE3B,WAHf;AAIE,IAAA,iBAAiB,EAAEI;AAJrB,KAKMK,GALN,EAMOd,UAAU,IAAIU,QAAQ,CAAC0B,gBAN9B,EAOMzB,aAPN,EAQOnB,SAAS,IAAI1D,QAAQ,CAAC2F,EAAT,KAAgB,KAA7B,IAAsCQ,UAR7C;AASE,IAAA,KAAK,EAAEtE;AATT,MAWGS,gBAAgB,gBACf,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,KAAK,EAAC,QAA7B;AAAsC,IAAA,IAAI,EAAE;AAA5C,KACGA,gBADH,CADe,GAIb,IAfN,EAgBGoB,SAAS,IAAIR,KAAb,iBACC,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC;AAAf,kBACE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE;AACLqD,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,UAAU,EAAEtB,SAAd;AAAyBuB,QAAAA,UAAU,EAAE;AAArC,OAAD;AADN;AADT,kBAKE,oBAAC,IAAD,eAAU7B,QAAV;AAAoB,IAAA,EAAE,EAAC;AAAvB,mBACE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,KAAK,EAAEsB,kBAFT;AAGE,IAAA,QAAQ,EAAE5B,QAHZ;AAIE,IAAA,KAAK,EAAEnB;AAJT,KAMGD,KANH,eAOE,oBAAC,GAAD;AACE,IAAA,CAAC,EAAC,MADJ;AAEE,IAAA,CAAC,EAAC,KAFJ;AAGE,IAAA,EAAE,EAAC,SAHL;AAIE,IAAA,QAAQ,EAAC,UAJX;AAKE,IAAA,KAAK,EAAC,MALR;AAME,IAAA,MAAM,YACJ4C,IAAI,CAACC,KAAL,CAAWzB,QAAQ,GAAG,CAAtB,KAA4BtE,QAAQ,CAAC2F,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAAxD,CADI,OANR;AASE,IAAA,MAAM,EAAE,CAAC;AATX,IAPF,CADF,CALF,CADF,CAjBJ,eA+CE,oBAAC,WAAD,eACMf,QADN;AAEE,IAAA,QAAQ,EAAEN,QAFZ;AAGE,IAAA,eAAe,EAAC,aAHlB;AAIE,IAAA,IAAI,EAAE,CAJR;AAKE,IAAA,eAAe,EAAE9B,IAAI,KAAK,UAL5B;AAME,IAAA,UAAU,MANZ;AAOE,IAAA,kBAAkB,EAAEJ,SAAS,IAAIC,kBAPnC;AAQE,IAAA,UAAU,EAAGqE,CAAD,IAAY;AACtBA,MAAAA,CAAC,CAACC,OAAF;AACD,KAVH;AAWE,IAAA,OAAO,EAAE,MAAM;AACbd,MAAAA,QAAQ;AACRhC,MAAAA,WAAW,CAAC,IAAD,EAAO3B,OAAO,GAAGA,OAAH,GAAa,MAAM,CAAE,CAAnC,CAAX;AACD,KAdH;AAeE,IAAA,MAAM,EAAGwE,CAAD,IAAO;AACb;AACAA,MAAAA,CAAC,CAACE,WAAF,CAAcC,IAAd,IAAsBvB,OAAO,EAA7B;AACAzB,MAAAA,WAAW,CAAC,KAAD,EAAQ1B,MAAM,GAAGA,MAAH,GAAY,MAAM,CAAE,CAAlC,CAAX;AACD,KAnBH;AAoBE,IAAA,WAAW,EAAEuB,SAAS,IAAIR,KAAb,GAAqB,EAArB,GAA0BpB,WApBzC;AAqBE,IAAA,oBAAoB,EAAEkC,gBArBxB;AAsBE,IAAA,QAAQ,EAAEE,UAAU,IAAIC,UAAd,GAA2B,KAA3B,GAAmC,IAtB/C,CAuBE;AAvBF;AAwBE,IAAA,WAAW,EAAE2C;AAxBf,KAyBO9G,QAAQ,CAAC2F,EAAT,KAAgB,KAAhB,GACD;AACEoB,IAAAA,QAAQ,EAAE7C,UADZ;AAEE8C,IAAAA,MAAM,EAAE9C,UAAU,GAAG,aAAH,GAAmB;AAFvC,GADC,GAKD,EA9BN;AA+BE,IAAA,KAAK,EAAE,CACLlE,QAAQ,CAAC2F,EAAT,KAAgB,KAAhB,IAAyB;AACvB;AACAsB,MAAAA,OAAO,EAAE;AAFc,KADpB,CA/BT;AAqCE,IAAA,GAAG,EAAE3D;AArCP,KA/CF,EAsFGf,iBAAiB,gBAChB,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,KAAK,EAAC,QAA7B;AAAsC,IAAA,KAAK,EAAE;AAA7C,KACGA,iBADH,CADgB,GAId,IA1FN,CADF,EA8FG0B,SAAS,IAAIlC,YAAb,gBACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,KAAK,EAAC;AAAnB,KAAoCC,aAApC,GACGD,YADH,CADD,GAIG,IAlGN,CADF;AAsGD,CAxND,C,CA0NA;;;AACA,SAASZ,eAAT,EAA0BC,UAA1B,EAAsCC,cAAtC;AAEA,4BAAexB,KAAK,CAACqH,IAAN,eAAWrH,KAAK,CAACsH,UAAN,CAAiBvF,KAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport { TextInput, Animated, Platform } from 'react-native';\nimport styled from 'styled-components/native';\nimport {\n  border,\n  flex,\n  space,\n  color,\n  flexbox,\n  layout,\n  typography,\n} from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n} from '../../../utils/customProps';\nimport Box from '../Box';\nimport Text from '../Text';\nimport Flex from '../Flex';\nimport type { IInputProps } from './types';\nimport { InputRightAddon, InputGroup, InputLeftAddon } from './InputGroup';\nimport { useThemeProps, useToken } from '../../../hooks';\nimport { themeTools } from '../../../theme';\nimport { useHover } from '@react-native-aria/interactions';\nimport {\n  FormControlContext,\n  IFormControlContext,\n} from '../../composites/FormControl';\n\nconst StyledInput = styled(TextInput)<IInputProps>(\n  flex,\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customTypography,\n  customLayout\n);\n\nconst Input = (\n  {\n    style,\n    placeholder,\n    errorMessage,\n    _errorMessage,\n    // isRequired,\n    isFullWidth,\n    onFocus,\n    onBlur,\n    ariaLabel,\n    accessibilityLabel,\n    InputLeftElement,\n    InputRightElement,\n    type,\n    w,\n    width,\n    h,\n    height,\n    m,\n    mr,\n    ml,\n    mt,\n    mb,\n    label,\n    _label,\n    placeholderTextColor,\n    ...props\n  }: IInputProps,\n  ref: any\n) => {\n  const formControlContext: IFormControlContext = React.useContext(\n    FormControlContext\n  );\n  const layoutProps = {\n    w,\n    width,\n    m,\n    mr,\n    ml,\n    mt,\n    mb,\n  };\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  let placeholderColor = useToken('colors', placeholderTextColor ?? 'gray.400');\n\n  if (typeof placeholderColor !== 'string') {\n    placeholderColor = placeholderTextColor;\n  }\n  const {\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    borderColor: borderColorFromProps,\n    fontSize,\n    borderWidth,\n    focusBorderColor,\n    errorBorderColor,\n    hoverBorderColor,\n    borderBottomWidth,\n    ...newProps\n  } = useThemeProps('Input', { ...formControlContext, ...props });\n\n  const computedProps = {\n    display: 'flex',\n    flexDirection: 'row',\n    h,\n    height,\n  };\n  let [, rem] = themeTools.extractInObject(newProps, [\n    'p',\n    'px',\n    'py',\n    'pt',\n    'pb',\n    'pl',\n    'pr',\n  ]);\n\n  const slideAnim = React.useRef(new Animated.Value(0)).current;\n  const slideIn = () => {\n    Animated.timing(slideAnim, {\n      toValue: 0,\n      duration: 200,\n      useNativeDriver: Platform.OS !== 'web',\n    }).start();\n  };\n\n  const slideOut = () => {\n    Animated.timing(slideAnim, {\n      // NOTE: Below 3 value are (padding + half of font + buffer)\n      toValue: -(12 + Math.floor(fontSize / 2) + 2),\n      duration: 200,\n      useNativeDriver: Platform.OS !== 'web',\n    }).start();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  let updatedBorderColor = borderColorFromProps;\n  if (isHovered) updatedBorderColor = hoverBorderColor;\n  else if (isFocused) updatedBorderColor = focusBorderColor;\n  else if (isInvalid) updatedBorderColor = errorBorderColor;\n  const focusStyle = {\n    shadow: 3,\n    shadowColor: '#2563EB',\n  };\n\n  return (\n    <Box w={isFullWidth ? '100%' : 'auto'} {...layoutProps}>\n      <Box\n        ref={_ref}\n        borderColor={updatedBorderColor}\n        borderWidth={borderWidth}\n        borderBottomWidth={borderBottomWidth}\n        {...rem}\n        {...(isDisabled && newProps._isDisabledProps)}\n        {...computedProps}\n        {...(isFocused && Platform.OS === 'web' && focusStyle)}\n        style={style}\n      >\n        {InputLeftElement ? (\n          <Flex justify=\"center\" align=\"center\" left={0}>\n            {InputLeftElement}\n          </Flex>\n        ) : null}\n        {isFocused && label && (\n          <Flex position=\"absolute\">\n            <Animated.View\n              style={{\n                transform: [{ translateY: slideAnim, translateX: 4 }],\n              }}\n            >\n              <Flex {...newProps} bg=\"transparent\">\n                <Box\n                  bg=\"transparent\"\n                  color={updatedBorderColor}\n                  fontSize={fontSize}\n                  _text={_label}\n                >\n                  {label}\n                  <Box\n                    w=\"120%\"\n                    p=\"1px\"\n                    bg=\"gray.50\"\n                    position=\"absolute\"\n                    right=\"-10%\"\n                    bottom={`${\n                      Math.floor(fontSize / 2) + (Platform.OS === 'ios' ? 1 : 0)\n                    }px`}\n                    zIndex={-1}\n                  />\n                </Box>\n              </Flex>\n            </Animated.View>\n          </Flex>\n        )}\n        <StyledInput\n          {...newProps}\n          fontSize={fontSize}\n          backgroundColor=\"transparent\"\n          flex={1}\n          secureTextEntry={type === 'password'}\n          accessible\n          accessibilityLabel={ariaLabel || accessibilityLabel}\n          onKeyPress={(e: any) => {\n            e.persist();\n          }}\n          onFocus={() => {\n            slideOut();\n            handleFocus(true, onFocus ? onFocus : () => {});\n          }}\n          onBlur={(e) => {\n            // TODO: animation not happening because of component rerender\n            e.nativeEvent.text && slideIn();\n            handleFocus(false, onBlur ? onBlur : () => {});\n          }}\n          placeholder={isFocused && label ? '' : placeholder}\n          placeholderTextColor={placeholderColor}\n          editable={isDisabled || isReadOnly ? false : true}\n          // borderRadius={50} //Remove variant props from StyledInput\n          borderWidth={undefined}\n          {...(Platform.OS === 'web'\n            ? {\n                disabled: isDisabled,\n                cursor: isDisabled ? 'not-allowed' : 'auto',\n              }\n            : {})}\n          style={[\n            Platform.OS === 'web' && {\n              // @ts-ignore\n              outline: 'none',\n            },\n          ]}\n          ref={ref}\n        />\n        {InputRightElement ? (\n          <Flex justify=\"center\" align=\"center\" right={0}>\n            {InputRightElement}\n          </Flex>\n        ) : null}\n      </Box>\n\n      {isInvalid && errorMessage ? (\n        <Text ml={2} color=\"danger.600\" {..._errorMessage}>\n          {errorMessage}\n        </Text>\n      ) : null}\n    </Box>\n  );\n};\n\n//-------------------------------- InputGroup and other Child components -------------------------------\nexport { InputRightAddon, InputGroup, InputLeftAddon };\nexport type { IInputProps };\nexport default React.memo(React.forwardRef(Input));\n"]}