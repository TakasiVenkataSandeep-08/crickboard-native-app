function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Box from '../Box';

const Flex = ({
  style,
  direction,
  align,
  justify,
  wrap,
  basis,
  grow,
  shrink,
  ...props
}, ref) => {
  return /*#__PURE__*/React.createElement(Box, _extends({}, props, {
    display: "flex",
    flexDirection: direction || 'column',
    alignItems: align,
    justifyContent: justify,
    flexGrow: grow,
    flexBasis: basis,
    flexShrink: shrink,
    flexWrap: wrap,
    style: style,
    ref: ref
  }));
}; //Spacer Component that adds space between components where it is placed


export const Spacer = props => {
  return /*#__PURE__*/React.createElement(Box, _extends({
    flexGrow: 1
  }, props));
};
export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Flex));
//# sourceMappingURL=index.js.map