{"version":3,"sources":["index.tsx"],"names":["React","default","Input","useThemeProps","TextArea","totalLines","props","ref","newProps","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAO,IAAIC,KAApB,QAA8C,UAA9C;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAKA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAc,KAAGC;AAAjB,CAAD,EAA2CC,GAA3C,KAAwD;AACvE,QAAMC,QAAQ,GAAGL,aAAa,CAAC,UAAD,EAAaG,KAAb,CAA9B;AACA,sBAAO,oBAAC,KAAD,eAAWE,QAAX;AAAqB,IAAA,aAAa,EAAEH,UAApC;AAAgD,IAAA,GAAG,EAAEE;AAArD,KAAP;AACD,CAHD;;AAKA,4BAAeP,KAAK,CAACS,IAAN,eAAWT,KAAK,CAACU,UAAN,CAAiBN,QAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport { default as Input, IInputProps } from '../Input';\nimport { useThemeProps } from '../../../hooks';\nexport type ITextAreaProps = IInputProps & {\n  totalLines?: number;\n};\n\nconst TextArea = ({ totalLines, ...props }: ITextAreaProps, ref: any) => {\n  const newProps = useThemeProps('TextArea', props);\n  return <Input {...newProps} numberOfLines={totalLines} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(TextArea));\n"]}