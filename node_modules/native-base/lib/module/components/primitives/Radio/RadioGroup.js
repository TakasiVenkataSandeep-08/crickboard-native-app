function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import Box from '../Box';
import { FormControlContext } from '../../composites/FormControl';
import { useRadioGroupState } from '@react-stately/radio';
import { useRadioGroup } from '@react-native-aria/radio';
export let RadioContext = /*#__PURE__*/React.createContext({});

const RadioGroup = ({
  size,
  colorScheme,
  ...props
}, ref) => {
  const formControlContext = React.useContext(FormControlContext);
  let state = useRadioGroupState(props);
  let {
    radioGroupProps
  } = useRadioGroup({ ...formControlContext,
    ...props
  }, state);
  return /*#__PURE__*/React.createElement(RadioContext.Provider, {
    value: { ...formControlContext,
      size,
      colorScheme,
      state
    }
  }, /*#__PURE__*/React.createElement(Box, _extends({
    alignItems: "flex-start"
  }, radioGroupProps, props, {
    ref: ref
  }), props.children));
};

export default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(RadioGroup));
//# sourceMappingURL=RadioGroup.js.map