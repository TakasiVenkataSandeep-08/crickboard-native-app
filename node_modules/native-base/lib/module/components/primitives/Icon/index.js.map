{"version":3,"sources":["index.tsx"],"names":["React","border","color","flexbox","layout","space","typography","position","customBorder","customBackground","customOutline","customLayout","customExtra","customShadow","customTypography","customPosition","styled","useThemeProps","AntDesign","Entypo","EvilIcons","Feather","FontAwesome","FontAwesome5","Fontisto","Foundation","Ionicons","MaterialCommunityIcons","MaterialIcons","Octicons","SimpleLineIcons","Zocial","SVGIcon","componentMap","getStyleIconComponent","type","Icon","name","style","props","ref","size","newProps","Component","fontSize","parseInt","createIcon","memo","forwardRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,UANF,EAOEC,QAPF,QAQO,eARP;AASA,SACEC,YADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,gBAPF,EAQEC,cARF,QASO,4BATP;AAUA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,SAHF,EAIEC,OAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,QAPF,EAQEC,UARF,EASEC,QATF,EAUEC,sBAVF,EAWEC,aAXF,EAYEC,QAZF,EAaEC,eAbF,EAcEC,MAdF,QAeO,oBAfP;AAiBA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,YAAY,GAAG;AACnBf,EAAAA,SADmB;AAEnBC,EAAAA,MAFmB;AAGnBC,EAAAA,SAHmB;AAInBC,EAAAA,OAJmB;AAKnBC,EAAAA,WALmB;AAMnBC,EAAAA,YANmB;AAOnBC,EAAAA,QAPmB;AAQnBC,EAAAA,UARmB;AASnBC,EAAAA,QATmB;AAUnBC,EAAAA,sBAVmB;AAWnBC,EAAAA,aAXmB;AAYnBC,EAAAA,QAZmB;AAanBC,EAAAA,eAbmB;AAcnBC,EAAAA;AAdmB,CAArB;;AAiBA,SAASG,qBAAT,CAA+BC,IAA/B,EAA+C;AAC7C,SAAOnB,MAAM,CAACiB,YAAY,CAACE,IAAD,CAAb,CAAN,CACLjC,KADK,EAELG,KAFK,EAGLD,MAHK,EAILD,OAJK,EAKLF,MALK,EAMLK,UANK,EAOLC,QAPK,EAQLQ,cARK,EASLP,YATK,EAULC,gBAVK,EAWLC,aAXK,EAYLG,YAZK,EAaLD,WAbK,EAcLD,YAdK,EAeLG,gBAfK,CAAP;AAiBD;;AAED,MAAMsB,IAAI,GAAG,CAAC;AAAED,EAAAA,IAAF;AAAQE,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqB,KAAGC;AAAxB,CAAD,EAA8CC,GAA9C,KAA4D;AACvE,QAAM;AAAEC,IAAAA,IAAF;AAAQ,OAAGC;AAAX,MAAwBzB,aAAa,CAAC,MAAD,EAASsB,KAAT,CAA3C;;AACA,MAAI,CAACF,IAAL,EAAW;AACT,wBAAO,oBAAC,OAAD,EAAaE,KAAb,CAAP;AACD;;AACD,QAAMI,SAAS,GAAGT,qBAAqB,CAACC,IAAD,aAACA,IAAD,cAACA,IAAD,GAAS,eAAT,CAAvC;AACA,sBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEE;AADR,KAEMK,QAFN;AAGE,IAAA,GAAG,EAAEF,GAHP;AAIE,IAAA,KAAK,EAAE,CAACF,KAAD,EAAQ;AAAEM,MAAAA,QAAQ,EAAEC,QAAQ,CAACJ,IAAD,EAAO,EAAP;AAApB,KAAR;AAJT,KADF;AAQD,CAdD;;AAiBA,SAASK,UAAT,QAA2B,cAA3B;AACA,4BAAe9C,KAAK,CAAC+C,IAAN,eAAW/C,KAAK,CAACgD,UAAN,CAAiBZ,IAAjB,CAAX,CAAf","sourcesContent":["import React from 'react';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  space,\n  typography,\n  position,\n} from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\nimport styled from 'styled-components/native';\nimport { useThemeProps } from '../../../hooks';\nimport {\n  AntDesign,\n  Entypo,\n  EvilIcons,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  Fontisto,\n  Foundation,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  Octicons,\n  SimpleLineIcons,\n  Zocial,\n} from '@expo/vector-icons';\nimport type { IIconProps, IconType, IconNameType } from './types';\nimport SVGIcon from './SVGIcon';\n\nconst componentMap = {\n  AntDesign,\n  Entypo,\n  EvilIcons,\n  Feather,\n  FontAwesome,\n  FontAwesome5,\n  Fontisto,\n  Foundation,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  Octicons,\n  SimpleLineIcons,\n  Zocial,\n};\n\nfunction getStyleIconComponent(type: IconType) {\n  return styled(componentMap[type])<IIconProps>(\n    color,\n    space,\n    layout,\n    flexbox,\n    border,\n    typography,\n    position,\n    customPosition,\n    customBorder,\n    customBackground,\n    customOutline,\n    customShadow,\n    customExtra,\n    customLayout,\n    customTypography\n  );\n}\n\nconst Icon = ({ type, name, style, ...props }: IIconProps, ref?: any) => {\n  const { size, ...newProps } = useThemeProps('Icon', props);\n  if (!name) {\n    return <SVGIcon {...props} />;\n  }\n  const Component = getStyleIconComponent(type ?? 'MaterialIcons');\n  return (\n    <Component\n      name={name}\n      {...newProps}\n      ref={ref}\n      style={[style, { fontSize: parseInt(size, 10) }]}\n    />\n  );\n};\n\nexport type { IIconProps, IconType, IconNameType };\nexport { createIcon } from './createIcon';\nexport default React.memo(React.forwardRef(Icon));\n"]}